
/**
 * Client
**/

import * as runtime from './runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model ApiKey
 * 
 */
export type ApiKey = {
  id: string
  name: string
  createdAt: Date
  tenantId: string
  userId: string | null
}

/**
 * Model DailyLog
 * 
 */
export type DailyLog = {
  id: string
  date: Date | null
  status: string
  note: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  rating: number
  ratingNote: string
  managerNote: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model DailyLogItem
 * 
 */
export type DailyLogItem = {
  id: string
  note: string | null
  isNoteVisible: boolean | null
  itemType: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  taskId: string | null
  dailyLogId: string
  tenantId: string
  equipmentId: string | null
}

/**
 * Model Equipment
 * 
 */
export type Equipment = {
  id: string
  name: string | null
  type: string | null
  organization: string | null
  description: string | null
  updatedAt: Date
  createdAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
  userId: string | null
}

/**
 * Model EquipmentProperty
 * 
 */
export type EquipmentProperty = {
  id: string
  name: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  order: number
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model EquipmentPropertyValue
 * 
 */
export type EquipmentPropertyValue = {
  id: string
  value: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  equipmentId: string
  equipmentPropertyId: string
  tenantId: string
}

/**
 * Model Feedback
 * 
 */
export type Feedback = {
  id: string
  text: string | null
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model File
 * 
 */
export type File = {
  id: string
  description: string | null
  locationLabel: string | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  locationLatitude: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  locationLongitude: number | null
  name: string | null
  type: string | null
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  imageId: string
  createdBy: string | null
  tenantId: string
  projectId: string | null
  dailyLogId: string | null
}

/**
 * Model FileProperty
 * 
 */
export type FileProperty = {
  id: string
  name: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  order: number
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model FilePropertyValue
 * 
 */
export type FilePropertyValue = {
  id: string
  value: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  fileId: string
  propertyId: string
  tenantId: string
}

/**
 * Model Image
 * 
 */
export type Image = {
  id: string
  bucketId: string
  blurhash: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model LocationEntry
 * 
 */
export type LocationEntry = {
  id: string
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  latitude: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  longitude: number | null
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  dailyLogId: string
  tenantId: string
}

/**
 * Model Project
 * 
 */
export type Project = {
  id: string
  name: string | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  progress: number | null
  dueDate: Date | null
  description: string | null
  locationLabel: string | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  locationLatitude: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  locationLongitude: number | null
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model ProjectProperty
 * 
 */
export type ProjectProperty = {
  id: string
  name: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  order: number
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model ProjectPropertyValue
 * 
 */
export type ProjectPropertyValue = {
  id: string
  value: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  projectId: string
  projectPropertyId: string
  tenantId: string
}

/**
 * Model Task
 * 
 */
export type Task = {
  id: string
  description: string | null
  name: string | null
  statusId: string | null
  systemStatusId: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  projectId: string
  tenantId: string
  parentId: string | null
  taskStatusId: string | null
}

/**
 * Model TaskProperty
 * 
 */
export type TaskProperty = {
  id: string
  name: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  order: number
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model TaskPropertyValue
 * 
 */
export type TaskPropertyValue = {
  id: string
  value: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  taskPropertyId: string
  taskId: string
  tenantId: string
}

/**
 * Model TaskStatus
 * 
 */
export type TaskStatus = {
  id: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  displayOrder: number
  iconColor: string
  name: string
  createdAt: Date
  updatedAt: Date
  deletedAt: Date | null
  createdBy: string | null
  tenantId: string
}

/**
 * Model Tenant
 * 
 */
export type Tenant = {
  id: string
  name: string
  settings: Prisma.JsonValue
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
}

/**
 * Model TenantUser
 * 
 */
export type TenantUser = {
  id: string
  userRole: string
  inviteEmail: string | null
  inviteSentAt: Date | null
  inviteStatus: string | null
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  userId: string | null
  tenantId: string
}

/**
 * Model TimeBlock
 * 
 */
export type TimeBlock = {
  id: string
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  duration: number | null
  entryType: string
  rangeStartAt: Date | null
  rangeEndAt: Date | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  timerStartLatitude: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  timerStartLongitude: number | null
  timerStartAddress: string | null
  timerStartAt: Date | null
  timerEndAt: Date | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  timerEndLatitude: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  timerEndLongitude: number | null
  timerEndAddress: string | null
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string
  dailyLogItemId: string
  tenantId: string
}

/**
 * Model User
 * 
 */
export type User = {
  id: string
  email: string | null
  name: string | null
  preferredLanguage: string | null
  settings: Prisma.JsonValue
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  imageId: string | null
  currentTenantId: string
}

/**
 * Model UserTask
 * 
 */
export type UserTask = {
  id: string
  createdAt: Date
  updatedAt: Date
  archivedAt: Date | null
  deletedAt: Date | null
  createdBy: string | null
  taskId: string
  tenantId: string
  userId: string
}


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ApiKeys
 * const apiKeys = await prisma.apiKey.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ApiKeys
   * const apiKeys = await prisma.apiKey.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<UnwrapTuple<P>>;

  $transaction<R>(fn: (prisma: Prisma.TransactionClient) => Promise<R>, options?: {maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel}): Promise<R>;

      /**
   * `prisma.apiKey`: Exposes CRUD operations for the **ApiKey** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApiKeys
    * const apiKeys = await prisma.apiKey.findMany()
    * ```
    */
  get apiKey(): Prisma.ApiKeyDelegate<GlobalReject>;

  /**
   * `prisma.dailyLog`: Exposes CRUD operations for the **DailyLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DailyLogs
    * const dailyLogs = await prisma.dailyLog.findMany()
    * ```
    */
  get dailyLog(): Prisma.DailyLogDelegate<GlobalReject>;

  /**
   * `prisma.dailyLogItem`: Exposes CRUD operations for the **DailyLogItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DailyLogItems
    * const dailyLogItems = await prisma.dailyLogItem.findMany()
    * ```
    */
  get dailyLogItem(): Prisma.DailyLogItemDelegate<GlobalReject>;

  /**
   * `prisma.equipment`: Exposes CRUD operations for the **Equipment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Equipment
    * const equipment = await prisma.equipment.findMany()
    * ```
    */
  get equipment(): Prisma.EquipmentDelegate<GlobalReject>;

  /**
   * `prisma.equipmentProperty`: Exposes CRUD operations for the **EquipmentProperty** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipmentProperties
    * const equipmentProperties = await prisma.equipmentProperty.findMany()
    * ```
    */
  get equipmentProperty(): Prisma.EquipmentPropertyDelegate<GlobalReject>;

  /**
   * `prisma.equipmentPropertyValue`: Exposes CRUD operations for the **EquipmentPropertyValue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipmentPropertyValues
    * const equipmentPropertyValues = await prisma.equipmentPropertyValue.findMany()
    * ```
    */
  get equipmentPropertyValue(): Prisma.EquipmentPropertyValueDelegate<GlobalReject>;

  /**
   * `prisma.feedback`: Exposes CRUD operations for the **Feedback** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Feedbacks
    * const feedbacks = await prisma.feedback.findMany()
    * ```
    */
  get feedback(): Prisma.FeedbackDelegate<GlobalReject>;

  /**
   * `prisma.file`: Exposes CRUD operations for the **File** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.file.findMany()
    * ```
    */
  get file(): Prisma.FileDelegate<GlobalReject>;

  /**
   * `prisma.fileProperty`: Exposes CRUD operations for the **FileProperty** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FileProperties
    * const fileProperties = await prisma.fileProperty.findMany()
    * ```
    */
  get fileProperty(): Prisma.FilePropertyDelegate<GlobalReject>;

  /**
   * `prisma.filePropertyValue`: Exposes CRUD operations for the **FilePropertyValue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FilePropertyValues
    * const filePropertyValues = await prisma.filePropertyValue.findMany()
    * ```
    */
  get filePropertyValue(): Prisma.FilePropertyValueDelegate<GlobalReject>;

  /**
   * `prisma.image`: Exposes CRUD operations for the **Image** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Images
    * const images = await prisma.image.findMany()
    * ```
    */
  get image(): Prisma.ImageDelegate<GlobalReject>;

  /**
   * `prisma.locationEntry`: Exposes CRUD operations for the **LocationEntry** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LocationEntries
    * const locationEntries = await prisma.locationEntry.findMany()
    * ```
    */
  get locationEntry(): Prisma.LocationEntryDelegate<GlobalReject>;

  /**
   * `prisma.project`: Exposes CRUD operations for the **Project** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.project.findMany()
    * ```
    */
  get project(): Prisma.ProjectDelegate<GlobalReject>;

  /**
   * `prisma.projectProperty`: Exposes CRUD operations for the **ProjectProperty** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectProperties
    * const projectProperties = await prisma.projectProperty.findMany()
    * ```
    */
  get projectProperty(): Prisma.ProjectPropertyDelegate<GlobalReject>;

  /**
   * `prisma.projectPropertyValue`: Exposes CRUD operations for the **ProjectPropertyValue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProjectPropertyValues
    * const projectPropertyValues = await prisma.projectPropertyValue.findMany()
    * ```
    */
  get projectPropertyValue(): Prisma.ProjectPropertyValueDelegate<GlobalReject>;

  /**
   * `prisma.task`: Exposes CRUD operations for the **Task** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.task.findMany()
    * ```
    */
  get task(): Prisma.TaskDelegate<GlobalReject>;

  /**
   * `prisma.taskProperty`: Exposes CRUD operations for the **TaskProperty** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TaskProperties
    * const taskProperties = await prisma.taskProperty.findMany()
    * ```
    */
  get taskProperty(): Prisma.TaskPropertyDelegate<GlobalReject>;

  /**
   * `prisma.taskPropertyValue`: Exposes CRUD operations for the **TaskPropertyValue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TaskPropertyValues
    * const taskPropertyValues = await prisma.taskPropertyValue.findMany()
    * ```
    */
  get taskPropertyValue(): Prisma.TaskPropertyValueDelegate<GlobalReject>;

  /**
   * `prisma.taskStatus`: Exposes CRUD operations for the **TaskStatus** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TaskStatuses
    * const taskStatuses = await prisma.taskStatus.findMany()
    * ```
    */
  get taskStatus(): Prisma.TaskStatusDelegate<GlobalReject>;

  /**
   * `prisma.tenant`: Exposes CRUD operations for the **Tenant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tenants
    * const tenants = await prisma.tenant.findMany()
    * ```
    */
  get tenant(): Prisma.TenantDelegate<GlobalReject>;

  /**
   * `prisma.tenantUser`: Exposes CRUD operations for the **TenantUser** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TenantUsers
    * const tenantUsers = await prisma.tenantUser.findMany()
    * ```
    */
  get tenantUser(): Prisma.TenantUserDelegate<GlobalReject>;

  /**
   * `prisma.timeBlock`: Exposes CRUD operations for the **TimeBlock** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TimeBlocks
    * const timeBlocks = await prisma.timeBlock.findMany()
    * ```
    */
  get timeBlock(): Prisma.TimeBlockDelegate<GlobalReject>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<GlobalReject>;

  /**
   * `prisma.userTask`: Exposes CRUD operations for the **UserTask** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserTasks
    * const userTasks = await prisma.userTask.findMany()
    * ```
    */
  get userTask(): Prisma.UserTaskDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket


  /**
   * Prisma Client JS version: 4.8.1
   * Query Engine version: d6e67a83f971b175a593ccc12e15c4a757f93ffe
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
export type InputJsonValue = null | string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    ApiKey: 'ApiKey',
    DailyLog: 'DailyLog',
    DailyLogItem: 'DailyLogItem',
    Equipment: 'Equipment',
    EquipmentProperty: 'EquipmentProperty',
    EquipmentPropertyValue: 'EquipmentPropertyValue',
    Feedback: 'Feedback',
    File: 'File',
    FileProperty: 'FileProperty',
    FilePropertyValue: 'FilePropertyValue',
    Image: 'Image',
    LocationEntry: 'LocationEntry',
    Project: 'Project',
    ProjectProperty: 'ProjectProperty',
    ProjectPropertyValue: 'ProjectPropertyValue',
    Task: 'Task',
    TaskProperty: 'TaskProperty',
    TaskPropertyValue: 'TaskPropertyValue',
    TaskStatus: 'TaskStatus',
    Tenant: 'Tenant',
    TenantUser: 'TenantUser',
    TimeBlock: 'TimeBlock',
    User: 'User',
    UserTask: 'UserTask'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type DefaultPrismaClient = PrismaClient
  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, '$connect' | '$disconnect' | '$on' | '$transaction' | '$use'>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type DailyLogCountOutputType
   */


  export type DailyLogCountOutputType = {
    DailyLogItem: number
    File: number
    LocationEntry: number
  }

  export type DailyLogCountOutputTypeSelect = {
    DailyLogItem?: boolean
    File?: boolean
    LocationEntry?: boolean
  }

  export type DailyLogCountOutputTypeGetPayload<S extends boolean | null | undefined | DailyLogCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? DailyLogCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (DailyLogCountOutputTypeArgs)
    ? DailyLogCountOutputType 
    : S extends { select: any } & (DailyLogCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof DailyLogCountOutputType ? DailyLogCountOutputType[P] : never
  } 
      : DailyLogCountOutputType




  // Custom InputTypes

  /**
   * DailyLogCountOutputType without action
   */
  export type DailyLogCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the DailyLogCountOutputType
     * 
    **/
    select?: DailyLogCountOutputTypeSelect | null
  }



  /**
   * Count Type DailyLogItemCountOutputType
   */


  export type DailyLogItemCountOutputType = {
    TimeBlock: number
  }

  export type DailyLogItemCountOutputTypeSelect = {
    TimeBlock?: boolean
  }

  export type DailyLogItemCountOutputTypeGetPayload<S extends boolean | null | undefined | DailyLogItemCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? DailyLogItemCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (DailyLogItemCountOutputTypeArgs)
    ? DailyLogItemCountOutputType 
    : S extends { select: any } & (DailyLogItemCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof DailyLogItemCountOutputType ? DailyLogItemCountOutputType[P] : never
  } 
      : DailyLogItemCountOutputType




  // Custom InputTypes

  /**
   * DailyLogItemCountOutputType without action
   */
  export type DailyLogItemCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItemCountOutputType
     * 
    **/
    select?: DailyLogItemCountOutputTypeSelect | null
  }



  /**
   * Count Type EquipmentCountOutputType
   */


  export type EquipmentCountOutputType = {
    DailyLogItem: number
    EquipmentPropertyValue: number
  }

  export type EquipmentCountOutputTypeSelect = {
    DailyLogItem?: boolean
    EquipmentPropertyValue?: boolean
  }

  export type EquipmentCountOutputTypeGetPayload<S extends boolean | null | undefined | EquipmentCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? EquipmentCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (EquipmentCountOutputTypeArgs)
    ? EquipmentCountOutputType 
    : S extends { select: any } & (EquipmentCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof EquipmentCountOutputType ? EquipmentCountOutputType[P] : never
  } 
      : EquipmentCountOutputType




  // Custom InputTypes

  /**
   * EquipmentCountOutputType without action
   */
  export type EquipmentCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the EquipmentCountOutputType
     * 
    **/
    select?: EquipmentCountOutputTypeSelect | null
  }



  /**
   * Count Type EquipmentPropertyCountOutputType
   */


  export type EquipmentPropertyCountOutputType = {
    EquipmentPropertyValue: number
  }

  export type EquipmentPropertyCountOutputTypeSelect = {
    EquipmentPropertyValue?: boolean
  }

  export type EquipmentPropertyCountOutputTypeGetPayload<S extends boolean | null | undefined | EquipmentPropertyCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? EquipmentPropertyCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (EquipmentPropertyCountOutputTypeArgs)
    ? EquipmentPropertyCountOutputType 
    : S extends { select: any } & (EquipmentPropertyCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof EquipmentPropertyCountOutputType ? EquipmentPropertyCountOutputType[P] : never
  } 
      : EquipmentPropertyCountOutputType




  // Custom InputTypes

  /**
   * EquipmentPropertyCountOutputType without action
   */
  export type EquipmentPropertyCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyCountOutputType
     * 
    **/
    select?: EquipmentPropertyCountOutputTypeSelect | null
  }



  /**
   * Count Type FileCountOutputType
   */


  export type FileCountOutputType = {
    FilePropertyValue: number
  }

  export type FileCountOutputTypeSelect = {
    FilePropertyValue?: boolean
  }

  export type FileCountOutputTypeGetPayload<S extends boolean | null | undefined | FileCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? FileCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (FileCountOutputTypeArgs)
    ? FileCountOutputType 
    : S extends { select: any } & (FileCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof FileCountOutputType ? FileCountOutputType[P] : never
  } 
      : FileCountOutputType




  // Custom InputTypes

  /**
   * FileCountOutputType without action
   */
  export type FileCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the FileCountOutputType
     * 
    **/
    select?: FileCountOutputTypeSelect | null
  }



  /**
   * Count Type FilePropertyCountOutputType
   */


  export type FilePropertyCountOutputType = {
    FilePropertyValue: number
  }

  export type FilePropertyCountOutputTypeSelect = {
    FilePropertyValue?: boolean
  }

  export type FilePropertyCountOutputTypeGetPayload<S extends boolean | null | undefined | FilePropertyCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? FilePropertyCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (FilePropertyCountOutputTypeArgs)
    ? FilePropertyCountOutputType 
    : S extends { select: any } & (FilePropertyCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof FilePropertyCountOutputType ? FilePropertyCountOutputType[P] : never
  } 
      : FilePropertyCountOutputType




  // Custom InputTypes

  /**
   * FilePropertyCountOutputType without action
   */
  export type FilePropertyCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyCountOutputType
     * 
    **/
    select?: FilePropertyCountOutputTypeSelect | null
  }



  /**
   * Count Type ImageCountOutputType
   */


  export type ImageCountOutputType = {
    File: number
    User_User_imageIdToImage: number
  }

  export type ImageCountOutputTypeSelect = {
    File?: boolean
    User_User_imageIdToImage?: boolean
  }

  export type ImageCountOutputTypeGetPayload<S extends boolean | null | undefined | ImageCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ImageCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ImageCountOutputTypeArgs)
    ? ImageCountOutputType 
    : S extends { select: any } & (ImageCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ImageCountOutputType ? ImageCountOutputType[P] : never
  } 
      : ImageCountOutputType




  // Custom InputTypes

  /**
   * ImageCountOutputType without action
   */
  export type ImageCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ImageCountOutputType
     * 
    **/
    select?: ImageCountOutputTypeSelect | null
  }



  /**
   * Count Type ProjectCountOutputType
   */


  export type ProjectCountOutputType = {
    File: number
    ProjectPropertyValue: number
    Task: number
  }

  export type ProjectCountOutputTypeSelect = {
    File?: boolean
    ProjectPropertyValue?: boolean
    Task?: boolean
  }

  export type ProjectCountOutputTypeGetPayload<S extends boolean | null | undefined | ProjectCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ProjectCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ProjectCountOutputTypeArgs)
    ? ProjectCountOutputType 
    : S extends { select: any } & (ProjectCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ProjectCountOutputType ? ProjectCountOutputType[P] : never
  } 
      : ProjectCountOutputType




  // Custom InputTypes

  /**
   * ProjectCountOutputType without action
   */
  export type ProjectCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProjectCountOutputType
     * 
    **/
    select?: ProjectCountOutputTypeSelect | null
  }



  /**
   * Count Type ProjectPropertyCountOutputType
   */


  export type ProjectPropertyCountOutputType = {
    ProjectPropertyValue: number
  }

  export type ProjectPropertyCountOutputTypeSelect = {
    ProjectPropertyValue?: boolean
  }

  export type ProjectPropertyCountOutputTypeGetPayload<S extends boolean | null | undefined | ProjectPropertyCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ProjectPropertyCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ProjectPropertyCountOutputTypeArgs)
    ? ProjectPropertyCountOutputType 
    : S extends { select: any } & (ProjectPropertyCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ProjectPropertyCountOutputType ? ProjectPropertyCountOutputType[P] : never
  } 
      : ProjectPropertyCountOutputType




  // Custom InputTypes

  /**
   * ProjectPropertyCountOutputType without action
   */
  export type ProjectPropertyCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyCountOutputType
     * 
    **/
    select?: ProjectPropertyCountOutputTypeSelect | null
  }



  /**
   * Count Type TaskCountOutputType
   */


  export type TaskCountOutputType = {
    DailyLogItem: number
    other_Task: number
    TaskPropertyValue: number
    UserTask: number
  }

  export type TaskCountOutputTypeSelect = {
    DailyLogItem?: boolean
    other_Task?: boolean
    TaskPropertyValue?: boolean
    UserTask?: boolean
  }

  export type TaskCountOutputTypeGetPayload<S extends boolean | null | undefined | TaskCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaskCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaskCountOutputTypeArgs)
    ? TaskCountOutputType 
    : S extends { select: any } & (TaskCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaskCountOutputType ? TaskCountOutputType[P] : never
  } 
      : TaskCountOutputType




  // Custom InputTypes

  /**
   * TaskCountOutputType without action
   */
  export type TaskCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaskCountOutputType
     * 
    **/
    select?: TaskCountOutputTypeSelect | null
  }



  /**
   * Count Type TaskPropertyCountOutputType
   */


  export type TaskPropertyCountOutputType = {
    TaskPropertyValue: number
  }

  export type TaskPropertyCountOutputTypeSelect = {
    TaskPropertyValue?: boolean
  }

  export type TaskPropertyCountOutputTypeGetPayload<S extends boolean | null | undefined | TaskPropertyCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaskPropertyCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaskPropertyCountOutputTypeArgs)
    ? TaskPropertyCountOutputType 
    : S extends { select: any } & (TaskPropertyCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaskPropertyCountOutputType ? TaskPropertyCountOutputType[P] : never
  } 
      : TaskPropertyCountOutputType




  // Custom InputTypes

  /**
   * TaskPropertyCountOutputType without action
   */
  export type TaskPropertyCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyCountOutputType
     * 
    **/
    select?: TaskPropertyCountOutputTypeSelect | null
  }



  /**
   * Count Type TaskStatusCountOutputType
   */


  export type TaskStatusCountOutputType = {
    Task: number
  }

  export type TaskStatusCountOutputTypeSelect = {
    Task?: boolean
  }

  export type TaskStatusCountOutputTypeGetPayload<S extends boolean | null | undefined | TaskStatusCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaskStatusCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaskStatusCountOutputTypeArgs)
    ? TaskStatusCountOutputType 
    : S extends { select: any } & (TaskStatusCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaskStatusCountOutputType ? TaskStatusCountOutputType[P] : never
  } 
      : TaskStatusCountOutputType




  // Custom InputTypes

  /**
   * TaskStatusCountOutputType without action
   */
  export type TaskStatusCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaskStatusCountOutputType
     * 
    **/
    select?: TaskStatusCountOutputTypeSelect | null
  }



  /**
   * Count Type TenantCountOutputType
   */


  export type TenantCountOutputType = {
    ApiKey: number
    DailyLog: number
    DailyLogItem: number
    Equipment: number
    EquipmentProperty: number
    EquipmentPropertyValue: number
    Feedback: number
    File: number
    FileProperty: number
    FilePropertyValue: number
    Image: number
    LocationEntry: number
    Project: number
    ProjectProperty: number
    ProjectPropertyValue: number
    Task: number
    TaskProperty: number
    TaskPropertyValue: number
    TaskStatus: number
    TenantUser: number
    TimeBlock: number
    User_User_currentTenantIdToTenant: number
    UserTask: number
  }

  export type TenantCountOutputTypeSelect = {
    ApiKey?: boolean
    DailyLog?: boolean
    DailyLogItem?: boolean
    Equipment?: boolean
    EquipmentProperty?: boolean
    EquipmentPropertyValue?: boolean
    Feedback?: boolean
    File?: boolean
    FileProperty?: boolean
    FilePropertyValue?: boolean
    Image?: boolean
    LocationEntry?: boolean
    Project?: boolean
    ProjectProperty?: boolean
    ProjectPropertyValue?: boolean
    Task?: boolean
    TaskProperty?: boolean
    TaskPropertyValue?: boolean
    TaskStatus?: boolean
    TenantUser?: boolean
    TimeBlock?: boolean
    User_User_currentTenantIdToTenant?: boolean
    UserTask?: boolean
  }

  export type TenantCountOutputTypeGetPayload<S extends boolean | null | undefined | TenantCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TenantCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TenantCountOutputTypeArgs)
    ? TenantCountOutputType 
    : S extends { select: any } & (TenantCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TenantCountOutputType ? TenantCountOutputType[P] : never
  } 
      : TenantCountOutputType




  // Custom InputTypes

  /**
   * TenantCountOutputType without action
   */
  export type TenantCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TenantCountOutputType
     * 
    **/
    select?: TenantCountOutputTypeSelect | null
  }



  /**
   * Count Type UserCountOutputType
   */


  export type UserCountOutputType = {
    ApiKey: number
    DailyLog: number
    DailyLogItem: number
    Equipment_Equipment_createdByToUser: number
    Equipment_Equipment_userIdToUser: number
    EquipmentProperty: number
    EquipmentPropertyValue: number
    Feedback: number
    File: number
    FileProperty: number
    FilePropertyValue: number
    Image_Image_createdByToUser: number
    LocationEntry: number
    Project: number
    ProjectProperty: number
    ProjectPropertyValue: number
    Task: number
    TaskProperty: number
    TaskPropertyValue: number
    TaskStatus: number
    Tenant_Tenant_createdByToUser: number
    TenantUser_TenantUser_createdByToUser: number
    TenantUser_TenantUser_userIdToUser: number
    TimeBlock: number
    UserTask_UserTask_createdByToUser: number
    UserTask_UserTask_userIdToUser: number
  }

  export type UserCountOutputTypeSelect = {
    ApiKey?: boolean
    DailyLog?: boolean
    DailyLogItem?: boolean
    Equipment_Equipment_createdByToUser?: boolean
    Equipment_Equipment_userIdToUser?: boolean
    EquipmentProperty?: boolean
    EquipmentPropertyValue?: boolean
    Feedback?: boolean
    File?: boolean
    FileProperty?: boolean
    FilePropertyValue?: boolean
    Image_Image_createdByToUser?: boolean
    LocationEntry?: boolean
    Project?: boolean
    ProjectProperty?: boolean
    ProjectPropertyValue?: boolean
    Task?: boolean
    TaskProperty?: boolean
    TaskPropertyValue?: boolean
    TaskStatus?: boolean
    Tenant_Tenant_createdByToUser?: boolean
    TenantUser_TenantUser_createdByToUser?: boolean
    TenantUser_TenantUser_userIdToUser?: boolean
    TimeBlock?: boolean
    UserTask_UserTask_createdByToUser?: boolean
    UserTask_UserTask_userIdToUser?: boolean
  }

  export type UserCountOutputTypeGetPayload<S extends boolean | null | undefined | UserCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UserCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UserCountOutputTypeArgs)
    ? UserCountOutputType 
    : S extends { select: any } & (UserCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UserCountOutputType ? UserCountOutputType[P] : never
  } 
      : UserCountOutputType




  // Custom InputTypes

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     * 
    **/
    select?: UserCountOutputTypeSelect | null
  }



  /**
   * Models
   */

  /**
   * Model ApiKey
   */


  export type AggregateApiKey = {
    _count: ApiKeyCountAggregateOutputType | null
    _min: ApiKeyMinAggregateOutputType | null
    _max: ApiKeyMaxAggregateOutputType | null
  }

  export type ApiKeyMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    tenantId: string | null
    userId: string | null
  }

  export type ApiKeyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    tenantId: string | null
    userId: string | null
  }

  export type ApiKeyCountAggregateOutputType = {
    id: number
    name: number
    createdAt: number
    tenantId: number
    userId: number
    _all: number
  }


  export type ApiKeyMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    tenantId?: true
    userId?: true
  }

  export type ApiKeyMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    tenantId?: true
    userId?: true
  }

  export type ApiKeyCountAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    tenantId?: true
    userId?: true
    _all?: true
  }

  export type ApiKeyAggregateArgs = {
    /**
     * Filter which ApiKey to aggregate.
     * 
    **/
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     * 
    **/
    orderBy?: Enumerable<ApiKeyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApiKeys
    **/
    _count?: true | ApiKeyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApiKeyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApiKeyMaxAggregateInputType
  }

  export type GetApiKeyAggregateType<T extends ApiKeyAggregateArgs> = {
        [P in keyof T & keyof AggregateApiKey]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApiKey[P]>
      : GetScalarType<T[P], AggregateApiKey[P]>
  }




  export type ApiKeyGroupByArgs = {
    where?: ApiKeyWhereInput
    orderBy?: Enumerable<ApiKeyOrderByWithAggregationInput>
    by: Array<ApiKeyScalarFieldEnum>
    having?: ApiKeyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApiKeyCountAggregateInputType | true
    _min?: ApiKeyMinAggregateInputType
    _max?: ApiKeyMaxAggregateInputType
  }


  export type ApiKeyGroupByOutputType = {
    id: string
    name: string
    createdAt: Date
    tenantId: string
    userId: string | null
    _count: ApiKeyCountAggregateOutputType | null
    _min: ApiKeyMinAggregateOutputType | null
    _max: ApiKeyMaxAggregateOutputType | null
  }

  type GetApiKeyGroupByPayload<T extends ApiKeyGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ApiKeyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApiKeyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
            : GetScalarType<T[P], ApiKeyGroupByOutputType[P]>
        }
      >
    >


  export type ApiKeySelect = {
    id?: boolean
    name?: boolean
    createdAt?: boolean
    tenantId?: boolean
    userId?: boolean
    Tenant?: boolean | TenantArgs
    User?: boolean | UserArgs
  }


  export type ApiKeyInclude = {
    Tenant?: boolean | TenantArgs
    User?: boolean | UserArgs
  } 

  export type ApiKeyGetPayload<S extends boolean | null | undefined | ApiKeyArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ApiKey :
    S extends undefined ? never :
    S extends { include: any } & (ApiKeyArgs | ApiKeyFindManyArgs)
    ? ApiKey  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (ApiKeyArgs | ApiKeyFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :  P extends keyof ApiKey ? ApiKey[P] : never
  } 
      : ApiKey


  type ApiKeyCountArgs = Merge<
    Omit<ApiKeyFindManyArgs, 'select' | 'include'> & {
      select?: ApiKeyCountAggregateInputType | true
    }
  >

  export interface ApiKeyDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ApiKey that matches the filter.
     * @param {ApiKeyFindUniqueArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ApiKeyFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ApiKeyFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ApiKey'> extends True ? Prisma__ApiKeyClient<ApiKeyGetPayload<T>> : Prisma__ApiKeyClient<ApiKeyGetPayload<T> | null, null>

    /**
     * Find one ApiKey that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ApiKeyFindUniqueOrThrowArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ApiKeyFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ApiKeyFindUniqueOrThrowArgs>
    ): Prisma__ApiKeyClient<ApiKeyGetPayload<T>>

    /**
     * Find the first ApiKey that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindFirstArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ApiKeyFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ApiKeyFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ApiKey'> extends True ? Prisma__ApiKeyClient<ApiKeyGetPayload<T>> : Prisma__ApiKeyClient<ApiKeyGetPayload<T> | null, null>

    /**
     * Find the first ApiKey that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindFirstOrThrowArgs} args - Arguments to find a ApiKey
     * @example
     * // Get one ApiKey
     * const apiKey = await prisma.apiKey.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ApiKeyFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ApiKeyFindFirstOrThrowArgs>
    ): Prisma__ApiKeyClient<ApiKeyGetPayload<T>>

    /**
     * Find zero or more ApiKeys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApiKeys
     * const apiKeys = await prisma.apiKey.findMany()
     * 
     * // Get first 10 ApiKeys
     * const apiKeys = await prisma.apiKey.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apiKeyWithIdOnly = await prisma.apiKey.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ApiKeyFindManyArgs>(
      args?: SelectSubset<T, ApiKeyFindManyArgs>
    ): PrismaPromise<Array<ApiKeyGetPayload<T>>>

    /**
     * Create a ApiKey.
     * @param {ApiKeyCreateArgs} args - Arguments to create a ApiKey.
     * @example
     * // Create one ApiKey
     * const ApiKey = await prisma.apiKey.create({
     *   data: {
     *     // ... data to create a ApiKey
     *   }
     * })
     * 
    **/
    create<T extends ApiKeyCreateArgs>(
      args: SelectSubset<T, ApiKeyCreateArgs>
    ): Prisma__ApiKeyClient<ApiKeyGetPayload<T>>

    /**
     * Create many ApiKeys.
     *     @param {ApiKeyCreateManyArgs} args - Arguments to create many ApiKeys.
     *     @example
     *     // Create many ApiKeys
     *     const apiKey = await prisma.apiKey.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ApiKeyCreateManyArgs>(
      args?: SelectSubset<T, ApiKeyCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ApiKey.
     * @param {ApiKeyDeleteArgs} args - Arguments to delete one ApiKey.
     * @example
     * // Delete one ApiKey
     * const ApiKey = await prisma.apiKey.delete({
     *   where: {
     *     // ... filter to delete one ApiKey
     *   }
     * })
     * 
    **/
    delete<T extends ApiKeyDeleteArgs>(
      args: SelectSubset<T, ApiKeyDeleteArgs>
    ): Prisma__ApiKeyClient<ApiKeyGetPayload<T>>

    /**
     * Update one ApiKey.
     * @param {ApiKeyUpdateArgs} args - Arguments to update one ApiKey.
     * @example
     * // Update one ApiKey
     * const apiKey = await prisma.apiKey.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ApiKeyUpdateArgs>(
      args: SelectSubset<T, ApiKeyUpdateArgs>
    ): Prisma__ApiKeyClient<ApiKeyGetPayload<T>>

    /**
     * Delete zero or more ApiKeys.
     * @param {ApiKeyDeleteManyArgs} args - Arguments to filter ApiKeys to delete.
     * @example
     * // Delete a few ApiKeys
     * const { count } = await prisma.apiKey.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ApiKeyDeleteManyArgs>(
      args?: SelectSubset<T, ApiKeyDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApiKeys
     * const apiKey = await prisma.apiKey.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ApiKeyUpdateManyArgs>(
      args: SelectSubset<T, ApiKeyUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ApiKey.
     * @param {ApiKeyUpsertArgs} args - Arguments to update or create a ApiKey.
     * @example
     * // Update or create a ApiKey
     * const apiKey = await prisma.apiKey.upsert({
     *   create: {
     *     // ... data to create a ApiKey
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApiKey we want to update
     *   }
     * })
    **/
    upsert<T extends ApiKeyUpsertArgs>(
      args: SelectSubset<T, ApiKeyUpsertArgs>
    ): Prisma__ApiKeyClient<ApiKeyGetPayload<T>>

    /**
     * Count the number of ApiKeys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyCountArgs} args - Arguments to filter ApiKeys to count.
     * @example
     * // Count the number of ApiKeys
     * const count = await prisma.apiKey.count({
     *   where: {
     *     // ... the filter for the ApiKeys we want to count
     *   }
     * })
    **/
    count<T extends ApiKeyCountArgs>(
      args?: Subset<T, ApiKeyCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApiKeyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApiKeyAggregateArgs>(args: Subset<T, ApiKeyAggregateArgs>): PrismaPromise<GetApiKeyAggregateType<T>>

    /**
     * Group by ApiKey.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiKeyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApiKeyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApiKeyGroupByArgs['orderBy'] }
        : { orderBy?: ApiKeyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApiKeyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiKeyGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ApiKey.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ApiKeyClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ApiKey base type for findUnique actions
   */
  export type ApiKeyFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * Filter, which ApiKey to fetch.
     * 
    **/
    where: ApiKeyWhereUniqueInput
  }

  /**
   * ApiKey findUnique
   */
  export interface ApiKeyFindUniqueArgs extends ApiKeyFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ApiKey findUniqueOrThrow
   */
  export type ApiKeyFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * Filter, which ApiKey to fetch.
     * 
    **/
    where: ApiKeyWhereUniqueInput
  }


  /**
   * ApiKey base type for findFirst actions
   */
  export type ApiKeyFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * Filter, which ApiKey to fetch.
     * 
    **/
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     * 
    **/
    orderBy?: Enumerable<ApiKeyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiKeys.
     * 
    **/
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiKeys.
     * 
    **/
    distinct?: Enumerable<ApiKeyScalarFieldEnum>
  }

  /**
   * ApiKey findFirst
   */
  export interface ApiKeyFindFirstArgs extends ApiKeyFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ApiKey findFirstOrThrow
   */
  export type ApiKeyFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * Filter, which ApiKey to fetch.
     * 
    **/
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     * 
    **/
    orderBy?: Enumerable<ApiKeyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiKeys.
     * 
    **/
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiKeys.
     * 
    **/
    distinct?: Enumerable<ApiKeyScalarFieldEnum>
  }


  /**
   * ApiKey findMany
   */
  export type ApiKeyFindManyArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * Filter, which ApiKeys to fetch.
     * 
    **/
    where?: ApiKeyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiKeys to fetch.
     * 
    **/
    orderBy?: Enumerable<ApiKeyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApiKeys.
     * 
    **/
    cursor?: ApiKeyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiKeys from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiKeys.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ApiKeyScalarFieldEnum>
  }


  /**
   * ApiKey create
   */
  export type ApiKeyCreateArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * The data needed to create a ApiKey.
     * 
    **/
    data: XOR<ApiKeyCreateInput, ApiKeyUncheckedCreateInput>
  }


  /**
   * ApiKey createMany
   */
  export type ApiKeyCreateManyArgs = {
    /**
     * The data used to create many ApiKeys.
     * 
    **/
    data: Enumerable<ApiKeyCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ApiKey update
   */
  export type ApiKeyUpdateArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * The data needed to update a ApiKey.
     * 
    **/
    data: XOR<ApiKeyUpdateInput, ApiKeyUncheckedUpdateInput>
    /**
     * Choose, which ApiKey to update.
     * 
    **/
    where: ApiKeyWhereUniqueInput
  }


  /**
   * ApiKey updateMany
   */
  export type ApiKeyUpdateManyArgs = {
    /**
     * The data used to update ApiKeys.
     * 
    **/
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyInput>
    /**
     * Filter which ApiKeys to update
     * 
    **/
    where?: ApiKeyWhereInput
  }


  /**
   * ApiKey upsert
   */
  export type ApiKeyUpsertArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * The filter to search for the ApiKey to update in case it exists.
     * 
    **/
    where: ApiKeyWhereUniqueInput
    /**
     * In case the ApiKey found by the `where` argument doesn't exist, create a new ApiKey with this data.
     * 
    **/
    create: XOR<ApiKeyCreateInput, ApiKeyUncheckedCreateInput>
    /**
     * In case the ApiKey was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ApiKeyUpdateInput, ApiKeyUncheckedUpdateInput>
  }


  /**
   * ApiKey delete
   */
  export type ApiKeyDeleteArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    /**
     * Filter which ApiKey to delete.
     * 
    **/
    where: ApiKeyWhereUniqueInput
  }


  /**
   * ApiKey deleteMany
   */
  export type ApiKeyDeleteManyArgs = {
    /**
     * Filter which ApiKeys to delete
     * 
    **/
    where?: ApiKeyWhereInput
  }


  /**
   * ApiKey without action
   */
  export type ApiKeyArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
  }



  /**
   * Model DailyLog
   */


  export type AggregateDailyLog = {
    _count: DailyLogCountAggregateOutputType | null
    _avg: DailyLogAvgAggregateOutputType | null
    _sum: DailyLogSumAggregateOutputType | null
    _min: DailyLogMinAggregateOutputType | null
    _max: DailyLogMaxAggregateOutputType | null
  }

  export type DailyLogAvgAggregateOutputType = {
    rating: number | null
  }

  export type DailyLogSumAggregateOutputType = {
    rating: number | null
  }

  export type DailyLogMinAggregateOutputType = {
    id: string | null
    date: Date | null
    status: string | null
    note: string | null
    rating: number | null
    ratingNote: string | null
    managerNote: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type DailyLogMaxAggregateOutputType = {
    id: string | null
    date: Date | null
    status: string | null
    note: string | null
    rating: number | null
    ratingNote: string | null
    managerNote: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type DailyLogCountAggregateOutputType = {
    id: number
    date: number
    status: number
    note: number
    rating: number
    ratingNote: number
    managerNote: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type DailyLogAvgAggregateInputType = {
    rating?: true
  }

  export type DailyLogSumAggregateInputType = {
    rating?: true
  }

  export type DailyLogMinAggregateInputType = {
    id?: true
    date?: true
    status?: true
    note?: true
    rating?: true
    ratingNote?: true
    managerNote?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type DailyLogMaxAggregateInputType = {
    id?: true
    date?: true
    status?: true
    note?: true
    rating?: true
    ratingNote?: true
    managerNote?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type DailyLogCountAggregateInputType = {
    id?: true
    date?: true
    status?: true
    note?: true
    rating?: true
    ratingNote?: true
    managerNote?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type DailyLogAggregateArgs = {
    /**
     * Filter which DailyLog to aggregate.
     * 
    **/
    where?: DailyLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DailyLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DailyLogs
    **/
    _count?: true | DailyLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DailyLogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DailyLogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DailyLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DailyLogMaxAggregateInputType
  }

  export type GetDailyLogAggregateType<T extends DailyLogAggregateArgs> = {
        [P in keyof T & keyof AggregateDailyLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDailyLog[P]>
      : GetScalarType<T[P], AggregateDailyLog[P]>
  }




  export type DailyLogGroupByArgs = {
    where?: DailyLogWhereInput
    orderBy?: Enumerable<DailyLogOrderByWithAggregationInput>
    by: Array<DailyLogScalarFieldEnum>
    having?: DailyLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DailyLogCountAggregateInputType | true
    _avg?: DailyLogAvgAggregateInputType
    _sum?: DailyLogSumAggregateInputType
    _min?: DailyLogMinAggregateInputType
    _max?: DailyLogMaxAggregateInputType
  }


  export type DailyLogGroupByOutputType = {
    id: string
    date: Date | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: DailyLogCountAggregateOutputType | null
    _avg: DailyLogAvgAggregateOutputType | null
    _sum: DailyLogSumAggregateOutputType | null
    _min: DailyLogMinAggregateOutputType | null
    _max: DailyLogMaxAggregateOutputType | null
  }

  type GetDailyLogGroupByPayload<T extends DailyLogGroupByArgs> = PrismaPromise<
    Array<
      PickArray<DailyLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DailyLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DailyLogGroupByOutputType[P]>
            : GetScalarType<T[P], DailyLogGroupByOutputType[P]>
        }
      >
    >


  export type DailyLogSelect = {
    id?: boolean
    date?: boolean
    status?: boolean
    note?: boolean
    rating?: boolean
    ratingNote?: boolean
    managerNote?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    DailyLogItem?: boolean | DailyLog$DailyLogItemArgs
    File?: boolean | DailyLog$FileArgs
    LocationEntry?: boolean | DailyLog$LocationEntryArgs
    _count?: boolean | DailyLogCountOutputTypeArgs
  }


  export type DailyLogInclude = {
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    DailyLogItem?: boolean | DailyLog$DailyLogItemArgs
    File?: boolean | DailyLog$FileArgs
    LocationEntry?: boolean | DailyLog$LocationEntryArgs
    _count?: boolean | DailyLogCountOutputTypeArgs
  } 

  export type DailyLogGetPayload<S extends boolean | null | undefined | DailyLogArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? DailyLog :
    S extends undefined ? never :
    S extends { include: any } & (DailyLogArgs | DailyLogFindManyArgs)
    ? DailyLog  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['include'][P]>>  :
        P extends 'File' ? Array < FileGetPayload<S['include'][P]>>  :
        P extends 'LocationEntry' ? Array < LocationEntryGetPayload<S['include'][P]>>  :
        P extends '_count' ? DailyLogCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (DailyLogArgs | DailyLogFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['select'][P]>>  :
        P extends 'File' ? Array < FileGetPayload<S['select'][P]>>  :
        P extends 'LocationEntry' ? Array < LocationEntryGetPayload<S['select'][P]>>  :
        P extends '_count' ? DailyLogCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof DailyLog ? DailyLog[P] : never
  } 
      : DailyLog


  type DailyLogCountArgs = Merge<
    Omit<DailyLogFindManyArgs, 'select' | 'include'> & {
      select?: DailyLogCountAggregateInputType | true
    }
  >

  export interface DailyLogDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one DailyLog that matches the filter.
     * @param {DailyLogFindUniqueArgs} args - Arguments to find a DailyLog
     * @example
     * // Get one DailyLog
     * const dailyLog = await prisma.dailyLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DailyLogFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DailyLogFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DailyLog'> extends True ? Prisma__DailyLogClient<DailyLogGetPayload<T>> : Prisma__DailyLogClient<DailyLogGetPayload<T> | null, null>

    /**
     * Find one DailyLog that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {DailyLogFindUniqueOrThrowArgs} args - Arguments to find a DailyLog
     * @example
     * // Get one DailyLog
     * const dailyLog = await prisma.dailyLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DailyLogFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, DailyLogFindUniqueOrThrowArgs>
    ): Prisma__DailyLogClient<DailyLogGetPayload<T>>

    /**
     * Find the first DailyLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogFindFirstArgs} args - Arguments to find a DailyLog
     * @example
     * // Get one DailyLog
     * const dailyLog = await prisma.dailyLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DailyLogFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DailyLogFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DailyLog'> extends True ? Prisma__DailyLogClient<DailyLogGetPayload<T>> : Prisma__DailyLogClient<DailyLogGetPayload<T> | null, null>

    /**
     * Find the first DailyLog that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogFindFirstOrThrowArgs} args - Arguments to find a DailyLog
     * @example
     * // Get one DailyLog
     * const dailyLog = await prisma.dailyLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DailyLogFindFirstOrThrowArgs>(
      args?: SelectSubset<T, DailyLogFindFirstOrThrowArgs>
    ): Prisma__DailyLogClient<DailyLogGetPayload<T>>

    /**
     * Find zero or more DailyLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DailyLogs
     * const dailyLogs = await prisma.dailyLog.findMany()
     * 
     * // Get first 10 DailyLogs
     * const dailyLogs = await prisma.dailyLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dailyLogWithIdOnly = await prisma.dailyLog.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DailyLogFindManyArgs>(
      args?: SelectSubset<T, DailyLogFindManyArgs>
    ): PrismaPromise<Array<DailyLogGetPayload<T>>>

    /**
     * Create a DailyLog.
     * @param {DailyLogCreateArgs} args - Arguments to create a DailyLog.
     * @example
     * // Create one DailyLog
     * const DailyLog = await prisma.dailyLog.create({
     *   data: {
     *     // ... data to create a DailyLog
     *   }
     * })
     * 
    **/
    create<T extends DailyLogCreateArgs>(
      args: SelectSubset<T, DailyLogCreateArgs>
    ): Prisma__DailyLogClient<DailyLogGetPayload<T>>

    /**
     * Create many DailyLogs.
     *     @param {DailyLogCreateManyArgs} args - Arguments to create many DailyLogs.
     *     @example
     *     // Create many DailyLogs
     *     const dailyLog = await prisma.dailyLog.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DailyLogCreateManyArgs>(
      args?: SelectSubset<T, DailyLogCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DailyLog.
     * @param {DailyLogDeleteArgs} args - Arguments to delete one DailyLog.
     * @example
     * // Delete one DailyLog
     * const DailyLog = await prisma.dailyLog.delete({
     *   where: {
     *     // ... filter to delete one DailyLog
     *   }
     * })
     * 
    **/
    delete<T extends DailyLogDeleteArgs>(
      args: SelectSubset<T, DailyLogDeleteArgs>
    ): Prisma__DailyLogClient<DailyLogGetPayload<T>>

    /**
     * Update one DailyLog.
     * @param {DailyLogUpdateArgs} args - Arguments to update one DailyLog.
     * @example
     * // Update one DailyLog
     * const dailyLog = await prisma.dailyLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DailyLogUpdateArgs>(
      args: SelectSubset<T, DailyLogUpdateArgs>
    ): Prisma__DailyLogClient<DailyLogGetPayload<T>>

    /**
     * Delete zero or more DailyLogs.
     * @param {DailyLogDeleteManyArgs} args - Arguments to filter DailyLogs to delete.
     * @example
     * // Delete a few DailyLogs
     * const { count } = await prisma.dailyLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DailyLogDeleteManyArgs>(
      args?: SelectSubset<T, DailyLogDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DailyLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DailyLogs
     * const dailyLog = await prisma.dailyLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DailyLogUpdateManyArgs>(
      args: SelectSubset<T, DailyLogUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DailyLog.
     * @param {DailyLogUpsertArgs} args - Arguments to update or create a DailyLog.
     * @example
     * // Update or create a DailyLog
     * const dailyLog = await prisma.dailyLog.upsert({
     *   create: {
     *     // ... data to create a DailyLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DailyLog we want to update
     *   }
     * })
    **/
    upsert<T extends DailyLogUpsertArgs>(
      args: SelectSubset<T, DailyLogUpsertArgs>
    ): Prisma__DailyLogClient<DailyLogGetPayload<T>>

    /**
     * Count the number of DailyLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogCountArgs} args - Arguments to filter DailyLogs to count.
     * @example
     * // Count the number of DailyLogs
     * const count = await prisma.dailyLog.count({
     *   where: {
     *     // ... the filter for the DailyLogs we want to count
     *   }
     * })
    **/
    count<T extends DailyLogCountArgs>(
      args?: Subset<T, DailyLogCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DailyLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DailyLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DailyLogAggregateArgs>(args: Subset<T, DailyLogAggregateArgs>): PrismaPromise<GetDailyLogAggregateType<T>>

    /**
     * Group by DailyLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DailyLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DailyLogGroupByArgs['orderBy'] }
        : { orderBy?: DailyLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DailyLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDailyLogGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for DailyLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DailyLogClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    DailyLogItem<T extends DailyLog$DailyLogItemArgs= {}>(args?: Subset<T, DailyLog$DailyLogItemArgs>): PrismaPromise<Array<DailyLogItemGetPayload<T>>| Null>;

    File<T extends DailyLog$FileArgs= {}>(args?: Subset<T, DailyLog$FileArgs>): PrismaPromise<Array<FileGetPayload<T>>| Null>;

    LocationEntry<T extends DailyLog$LocationEntryArgs= {}>(args?: Subset<T, DailyLog$LocationEntryArgs>): PrismaPromise<Array<LocationEntryGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * DailyLog base type for findUnique actions
   */
  export type DailyLogFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * Filter, which DailyLog to fetch.
     * 
    **/
    where: DailyLogWhereUniqueInput
  }

  /**
   * DailyLog findUnique
   */
  export interface DailyLogFindUniqueArgs extends DailyLogFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * DailyLog findUniqueOrThrow
   */
  export type DailyLogFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * Filter, which DailyLog to fetch.
     * 
    **/
    where: DailyLogWhereUniqueInput
  }


  /**
   * DailyLog base type for findFirst actions
   */
  export type DailyLogFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * Filter, which DailyLog to fetch.
     * 
    **/
    where?: DailyLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DailyLogs.
     * 
    **/
    cursor?: DailyLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DailyLogs.
     * 
    **/
    distinct?: Enumerable<DailyLogScalarFieldEnum>
  }

  /**
   * DailyLog findFirst
   */
  export interface DailyLogFindFirstArgs extends DailyLogFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * DailyLog findFirstOrThrow
   */
  export type DailyLogFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * Filter, which DailyLog to fetch.
     * 
    **/
    where?: DailyLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DailyLogs.
     * 
    **/
    cursor?: DailyLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogs.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DailyLogs.
     * 
    **/
    distinct?: Enumerable<DailyLogScalarFieldEnum>
  }


  /**
   * DailyLog findMany
   */
  export type DailyLogFindManyArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * Filter, which DailyLogs to fetch.
     * 
    **/
    where?: DailyLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogs to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DailyLogs.
     * 
    **/
    cursor?: DailyLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogs from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogs.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DailyLogScalarFieldEnum>
  }


  /**
   * DailyLog create
   */
  export type DailyLogCreateArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * The data needed to create a DailyLog.
     * 
    **/
    data: XOR<DailyLogCreateInput, DailyLogUncheckedCreateInput>
  }


  /**
   * DailyLog createMany
   */
  export type DailyLogCreateManyArgs = {
    /**
     * The data used to create many DailyLogs.
     * 
    **/
    data: Enumerable<DailyLogCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DailyLog update
   */
  export type DailyLogUpdateArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * The data needed to update a DailyLog.
     * 
    **/
    data: XOR<DailyLogUpdateInput, DailyLogUncheckedUpdateInput>
    /**
     * Choose, which DailyLog to update.
     * 
    **/
    where: DailyLogWhereUniqueInput
  }


  /**
   * DailyLog updateMany
   */
  export type DailyLogUpdateManyArgs = {
    /**
     * The data used to update DailyLogs.
     * 
    **/
    data: XOR<DailyLogUpdateManyMutationInput, DailyLogUncheckedUpdateManyInput>
    /**
     * Filter which DailyLogs to update
     * 
    **/
    where?: DailyLogWhereInput
  }


  /**
   * DailyLog upsert
   */
  export type DailyLogUpsertArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * The filter to search for the DailyLog to update in case it exists.
     * 
    **/
    where: DailyLogWhereUniqueInput
    /**
     * In case the DailyLog found by the `where` argument doesn't exist, create a new DailyLog with this data.
     * 
    **/
    create: XOR<DailyLogCreateInput, DailyLogUncheckedCreateInput>
    /**
     * In case the DailyLog was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DailyLogUpdateInput, DailyLogUncheckedUpdateInput>
  }


  /**
   * DailyLog delete
   */
  export type DailyLogDeleteArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    /**
     * Filter which DailyLog to delete.
     * 
    **/
    where: DailyLogWhereUniqueInput
  }


  /**
   * DailyLog deleteMany
   */
  export type DailyLogDeleteManyArgs = {
    /**
     * Filter which DailyLogs to delete
     * 
    **/
    where?: DailyLogWhereInput
  }


  /**
   * DailyLog.DailyLogItem
   */
  export type DailyLog$DailyLogItemArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    where?: DailyLogItemWhereInput
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    cursor?: DailyLogItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * DailyLog.File
   */
  export type DailyLog$FileArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    where?: FileWhereInput
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * DailyLog.LocationEntry
   */
  export type DailyLog$LocationEntryArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    where?: LocationEntryWhereInput
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    cursor?: LocationEntryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LocationEntryScalarFieldEnum>
  }


  /**
   * DailyLog without action
   */
  export type DailyLogArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
  }



  /**
   * Model DailyLogItem
   */


  export type AggregateDailyLogItem = {
    _count: DailyLogItemCountAggregateOutputType | null
    _min: DailyLogItemMinAggregateOutputType | null
    _max: DailyLogItemMaxAggregateOutputType | null
  }

  export type DailyLogItemMinAggregateOutputType = {
    id: string | null
    note: string | null
    isNoteVisible: boolean | null
    itemType: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskId: string | null
    dailyLogId: string | null
    tenantId: string | null
    equipmentId: string | null
  }

  export type DailyLogItemMaxAggregateOutputType = {
    id: string | null
    note: string | null
    isNoteVisible: boolean | null
    itemType: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskId: string | null
    dailyLogId: string | null
    tenantId: string | null
    equipmentId: string | null
  }

  export type DailyLogItemCountAggregateOutputType = {
    id: number
    note: number
    isNoteVisible: number
    itemType: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    taskId: number
    dailyLogId: number
    tenantId: number
    equipmentId: number
    _all: number
  }


  export type DailyLogItemMinAggregateInputType = {
    id?: true
    note?: true
    isNoteVisible?: true
    itemType?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskId?: true
    dailyLogId?: true
    tenantId?: true
    equipmentId?: true
  }

  export type DailyLogItemMaxAggregateInputType = {
    id?: true
    note?: true
    isNoteVisible?: true
    itemType?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskId?: true
    dailyLogId?: true
    tenantId?: true
    equipmentId?: true
  }

  export type DailyLogItemCountAggregateInputType = {
    id?: true
    note?: true
    isNoteVisible?: true
    itemType?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskId?: true
    dailyLogId?: true
    tenantId?: true
    equipmentId?: true
    _all?: true
  }

  export type DailyLogItemAggregateArgs = {
    /**
     * Filter which DailyLogItem to aggregate.
     * 
    **/
    where?: DailyLogItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogItems to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: DailyLogItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DailyLogItems
    **/
    _count?: true | DailyLogItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DailyLogItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DailyLogItemMaxAggregateInputType
  }

  export type GetDailyLogItemAggregateType<T extends DailyLogItemAggregateArgs> = {
        [P in keyof T & keyof AggregateDailyLogItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDailyLogItem[P]>
      : GetScalarType<T[P], AggregateDailyLogItem[P]>
  }




  export type DailyLogItemGroupByArgs = {
    where?: DailyLogItemWhereInput
    orderBy?: Enumerable<DailyLogItemOrderByWithAggregationInput>
    by: Array<DailyLogItemScalarFieldEnum>
    having?: DailyLogItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DailyLogItemCountAggregateInputType | true
    _min?: DailyLogItemMinAggregateInputType
    _max?: DailyLogItemMaxAggregateInputType
  }


  export type DailyLogItemGroupByOutputType = {
    id: string
    note: string | null
    isNoteVisible: boolean | null
    itemType: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskId: string | null
    dailyLogId: string
    tenantId: string
    equipmentId: string | null
    _count: DailyLogItemCountAggregateOutputType | null
    _min: DailyLogItemMinAggregateOutputType | null
    _max: DailyLogItemMaxAggregateOutputType | null
  }

  type GetDailyLogItemGroupByPayload<T extends DailyLogItemGroupByArgs> = PrismaPromise<
    Array<
      PickArray<DailyLogItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DailyLogItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DailyLogItemGroupByOutputType[P]>
            : GetScalarType<T[P], DailyLogItemGroupByOutputType[P]>
        }
      >
    >


  export type DailyLogItemSelect = {
    id?: boolean
    note?: boolean
    isNoteVisible?: boolean
    itemType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    taskId?: boolean
    dailyLogId?: boolean
    tenantId?: boolean
    equipmentId?: boolean
    User?: boolean | UserArgs
    DailyLog?: boolean | DailyLogArgs
    Equipment?: boolean | EquipmentArgs
    Task?: boolean | TaskArgs
    Tenant?: boolean | TenantArgs
    TimeBlock?: boolean | DailyLogItem$TimeBlockArgs
    _count?: boolean | DailyLogItemCountOutputTypeArgs
  }


  export type DailyLogItemInclude = {
    User?: boolean | UserArgs
    DailyLog?: boolean | DailyLogArgs
    Equipment?: boolean | EquipmentArgs
    Task?: boolean | TaskArgs
    Tenant?: boolean | TenantArgs
    TimeBlock?: boolean | DailyLogItem$TimeBlockArgs
    _count?: boolean | DailyLogItemCountOutputTypeArgs
  } 

  export type DailyLogItemGetPayload<S extends boolean | null | undefined | DailyLogItemArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? DailyLogItem :
    S extends undefined ? never :
    S extends { include: any } & (DailyLogItemArgs | DailyLogItemFindManyArgs)
    ? DailyLogItem  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'DailyLog' ? DailyLogGetPayload<S['include'][P]> :
        P extends 'Equipment' ? EquipmentGetPayload<S['include'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'TimeBlock' ? Array < TimeBlockGetPayload<S['include'][P]>>  :
        P extends '_count' ? DailyLogItemCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (DailyLogItemArgs | DailyLogItemFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'DailyLog' ? DailyLogGetPayload<S['select'][P]> :
        P extends 'Equipment' ? EquipmentGetPayload<S['select'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'TimeBlock' ? Array < TimeBlockGetPayload<S['select'][P]>>  :
        P extends '_count' ? DailyLogItemCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof DailyLogItem ? DailyLogItem[P] : never
  } 
      : DailyLogItem


  type DailyLogItemCountArgs = Merge<
    Omit<DailyLogItemFindManyArgs, 'select' | 'include'> & {
      select?: DailyLogItemCountAggregateInputType | true
    }
  >

  export interface DailyLogItemDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one DailyLogItem that matches the filter.
     * @param {DailyLogItemFindUniqueArgs} args - Arguments to find a DailyLogItem
     * @example
     * // Get one DailyLogItem
     * const dailyLogItem = await prisma.dailyLogItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends DailyLogItemFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, DailyLogItemFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'DailyLogItem'> extends True ? Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>> : Prisma__DailyLogItemClient<DailyLogItemGetPayload<T> | null, null>

    /**
     * Find one DailyLogItem that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {DailyLogItemFindUniqueOrThrowArgs} args - Arguments to find a DailyLogItem
     * @example
     * // Get one DailyLogItem
     * const dailyLogItem = await prisma.dailyLogItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends DailyLogItemFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, DailyLogItemFindUniqueOrThrowArgs>
    ): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>>

    /**
     * Find the first DailyLogItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemFindFirstArgs} args - Arguments to find a DailyLogItem
     * @example
     * // Get one DailyLogItem
     * const dailyLogItem = await prisma.dailyLogItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends DailyLogItemFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, DailyLogItemFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'DailyLogItem'> extends True ? Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>> : Prisma__DailyLogItemClient<DailyLogItemGetPayload<T> | null, null>

    /**
     * Find the first DailyLogItem that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemFindFirstOrThrowArgs} args - Arguments to find a DailyLogItem
     * @example
     * // Get one DailyLogItem
     * const dailyLogItem = await prisma.dailyLogItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends DailyLogItemFindFirstOrThrowArgs>(
      args?: SelectSubset<T, DailyLogItemFindFirstOrThrowArgs>
    ): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>>

    /**
     * Find zero or more DailyLogItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DailyLogItems
     * const dailyLogItems = await prisma.dailyLogItem.findMany()
     * 
     * // Get first 10 DailyLogItems
     * const dailyLogItems = await prisma.dailyLogItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dailyLogItemWithIdOnly = await prisma.dailyLogItem.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends DailyLogItemFindManyArgs>(
      args?: SelectSubset<T, DailyLogItemFindManyArgs>
    ): PrismaPromise<Array<DailyLogItemGetPayload<T>>>

    /**
     * Create a DailyLogItem.
     * @param {DailyLogItemCreateArgs} args - Arguments to create a DailyLogItem.
     * @example
     * // Create one DailyLogItem
     * const DailyLogItem = await prisma.dailyLogItem.create({
     *   data: {
     *     // ... data to create a DailyLogItem
     *   }
     * })
     * 
    **/
    create<T extends DailyLogItemCreateArgs>(
      args: SelectSubset<T, DailyLogItemCreateArgs>
    ): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>>

    /**
     * Create many DailyLogItems.
     *     @param {DailyLogItemCreateManyArgs} args - Arguments to create many DailyLogItems.
     *     @example
     *     // Create many DailyLogItems
     *     const dailyLogItem = await prisma.dailyLogItem.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends DailyLogItemCreateManyArgs>(
      args?: SelectSubset<T, DailyLogItemCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a DailyLogItem.
     * @param {DailyLogItemDeleteArgs} args - Arguments to delete one DailyLogItem.
     * @example
     * // Delete one DailyLogItem
     * const DailyLogItem = await prisma.dailyLogItem.delete({
     *   where: {
     *     // ... filter to delete one DailyLogItem
     *   }
     * })
     * 
    **/
    delete<T extends DailyLogItemDeleteArgs>(
      args: SelectSubset<T, DailyLogItemDeleteArgs>
    ): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>>

    /**
     * Update one DailyLogItem.
     * @param {DailyLogItemUpdateArgs} args - Arguments to update one DailyLogItem.
     * @example
     * // Update one DailyLogItem
     * const dailyLogItem = await prisma.dailyLogItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends DailyLogItemUpdateArgs>(
      args: SelectSubset<T, DailyLogItemUpdateArgs>
    ): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>>

    /**
     * Delete zero or more DailyLogItems.
     * @param {DailyLogItemDeleteManyArgs} args - Arguments to filter DailyLogItems to delete.
     * @example
     * // Delete a few DailyLogItems
     * const { count } = await prisma.dailyLogItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends DailyLogItemDeleteManyArgs>(
      args?: SelectSubset<T, DailyLogItemDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more DailyLogItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DailyLogItems
     * const dailyLogItem = await prisma.dailyLogItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends DailyLogItemUpdateManyArgs>(
      args: SelectSubset<T, DailyLogItemUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one DailyLogItem.
     * @param {DailyLogItemUpsertArgs} args - Arguments to update or create a DailyLogItem.
     * @example
     * // Update or create a DailyLogItem
     * const dailyLogItem = await prisma.dailyLogItem.upsert({
     *   create: {
     *     // ... data to create a DailyLogItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DailyLogItem we want to update
     *   }
     * })
    **/
    upsert<T extends DailyLogItemUpsertArgs>(
      args: SelectSubset<T, DailyLogItemUpsertArgs>
    ): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T>>

    /**
     * Count the number of DailyLogItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemCountArgs} args - Arguments to filter DailyLogItems to count.
     * @example
     * // Count the number of DailyLogItems
     * const count = await prisma.dailyLogItem.count({
     *   where: {
     *     // ... the filter for the DailyLogItems we want to count
     *   }
     * })
    **/
    count<T extends DailyLogItemCountArgs>(
      args?: Subset<T, DailyLogItemCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DailyLogItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DailyLogItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DailyLogItemAggregateArgs>(args: Subset<T, DailyLogItemAggregateArgs>): PrismaPromise<GetDailyLogItemAggregateType<T>>

    /**
     * Group by DailyLogItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DailyLogItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DailyLogItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DailyLogItemGroupByArgs['orderBy'] }
        : { orderBy?: DailyLogItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DailyLogItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDailyLogItemGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for DailyLogItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__DailyLogItemClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    DailyLog<T extends DailyLogArgs= {}>(args?: Subset<T, DailyLogArgs>): Prisma__DailyLogClient<DailyLogGetPayload<T> | Null>;

    Equipment<T extends EquipmentArgs= {}>(args?: Subset<T, EquipmentArgs>): Prisma__EquipmentClient<EquipmentGetPayload<T> | Null>;

    Task<T extends TaskArgs= {}>(args?: Subset<T, TaskArgs>): Prisma__TaskClient<TaskGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    TimeBlock<T extends DailyLogItem$TimeBlockArgs= {}>(args?: Subset<T, DailyLogItem$TimeBlockArgs>): PrismaPromise<Array<TimeBlockGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * DailyLogItem base type for findUnique actions
   */
  export type DailyLogItemFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * Filter, which DailyLogItem to fetch.
     * 
    **/
    where: DailyLogItemWhereUniqueInput
  }

  /**
   * DailyLogItem findUnique
   */
  export interface DailyLogItemFindUniqueArgs extends DailyLogItemFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * DailyLogItem findUniqueOrThrow
   */
  export type DailyLogItemFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * Filter, which DailyLogItem to fetch.
     * 
    **/
    where: DailyLogItemWhereUniqueInput
  }


  /**
   * DailyLogItem base type for findFirst actions
   */
  export type DailyLogItemFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * Filter, which DailyLogItem to fetch.
     * 
    **/
    where?: DailyLogItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogItems to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DailyLogItems.
     * 
    **/
    cursor?: DailyLogItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DailyLogItems.
     * 
    **/
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }

  /**
   * DailyLogItem findFirst
   */
  export interface DailyLogItemFindFirstArgs extends DailyLogItemFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * DailyLogItem findFirstOrThrow
   */
  export type DailyLogItemFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * Filter, which DailyLogItem to fetch.
     * 
    **/
    where?: DailyLogItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogItems to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DailyLogItems.
     * 
    **/
    cursor?: DailyLogItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogItems.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DailyLogItems.
     * 
    **/
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * DailyLogItem findMany
   */
  export type DailyLogItemFindManyArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * Filter, which DailyLogItems to fetch.
     * 
    **/
    where?: DailyLogItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DailyLogItems to fetch.
     * 
    **/
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DailyLogItems.
     * 
    **/
    cursor?: DailyLogItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DailyLogItems from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DailyLogItems.
     * 
    **/
    skip?: number
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * DailyLogItem create
   */
  export type DailyLogItemCreateArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * The data needed to create a DailyLogItem.
     * 
    **/
    data: XOR<DailyLogItemCreateInput, DailyLogItemUncheckedCreateInput>
  }


  /**
   * DailyLogItem createMany
   */
  export type DailyLogItemCreateManyArgs = {
    /**
     * The data used to create many DailyLogItems.
     * 
    **/
    data: Enumerable<DailyLogItemCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * DailyLogItem update
   */
  export type DailyLogItemUpdateArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * The data needed to update a DailyLogItem.
     * 
    **/
    data: XOR<DailyLogItemUpdateInput, DailyLogItemUncheckedUpdateInput>
    /**
     * Choose, which DailyLogItem to update.
     * 
    **/
    where: DailyLogItemWhereUniqueInput
  }


  /**
   * DailyLogItem updateMany
   */
  export type DailyLogItemUpdateManyArgs = {
    /**
     * The data used to update DailyLogItems.
     * 
    **/
    data: XOR<DailyLogItemUpdateManyMutationInput, DailyLogItemUncheckedUpdateManyInput>
    /**
     * Filter which DailyLogItems to update
     * 
    **/
    where?: DailyLogItemWhereInput
  }


  /**
   * DailyLogItem upsert
   */
  export type DailyLogItemUpsertArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * The filter to search for the DailyLogItem to update in case it exists.
     * 
    **/
    where: DailyLogItemWhereUniqueInput
    /**
     * In case the DailyLogItem found by the `where` argument doesn't exist, create a new DailyLogItem with this data.
     * 
    **/
    create: XOR<DailyLogItemCreateInput, DailyLogItemUncheckedCreateInput>
    /**
     * In case the DailyLogItem was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<DailyLogItemUpdateInput, DailyLogItemUncheckedUpdateInput>
  }


  /**
   * DailyLogItem delete
   */
  export type DailyLogItemDeleteArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    /**
     * Filter which DailyLogItem to delete.
     * 
    **/
    where: DailyLogItemWhereUniqueInput
  }


  /**
   * DailyLogItem deleteMany
   */
  export type DailyLogItemDeleteManyArgs = {
    /**
     * Filter which DailyLogItems to delete
     * 
    **/
    where?: DailyLogItemWhereInput
  }


  /**
   * DailyLogItem.TimeBlock
   */
  export type DailyLogItem$TimeBlockArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    where?: TimeBlockWhereInput
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    cursor?: TimeBlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TimeBlockScalarFieldEnum>
  }


  /**
   * DailyLogItem without action
   */
  export type DailyLogItemArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
  }



  /**
   * Model Equipment
   */


  export type AggregateEquipment = {
    _count: EquipmentCountAggregateOutputType | null
    _min: EquipmentMinAggregateOutputType | null
    _max: EquipmentMaxAggregateOutputType | null
  }

  export type EquipmentMinAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    organization: string | null
    description: string | null
    updatedAt: Date | null
    createdAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
    userId: string | null
  }

  export type EquipmentMaxAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    organization: string | null
    description: string | null
    updatedAt: Date | null
    createdAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
    userId: string | null
  }

  export type EquipmentCountAggregateOutputType = {
    id: number
    name: number
    type: number
    organization: number
    description: number
    updatedAt: number
    createdAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    userId: number
    _all: number
  }


  export type EquipmentMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    organization?: true
    description?: true
    updatedAt?: true
    createdAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    userId?: true
  }

  export type EquipmentMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    organization?: true
    description?: true
    updatedAt?: true
    createdAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    userId?: true
  }

  export type EquipmentCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    organization?: true
    description?: true
    updatedAt?: true
    createdAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    userId?: true
    _all?: true
  }

  export type EquipmentAggregateArgs = {
    /**
     * Filter which Equipment to aggregate.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Equipment
    **/
    _count?: true | EquipmentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipmentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipmentMaxAggregateInputType
  }

  export type GetEquipmentAggregateType<T extends EquipmentAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipment[P]>
      : GetScalarType<T[P], AggregateEquipment[P]>
  }




  export type EquipmentGroupByArgs = {
    where?: EquipmentWhereInput
    orderBy?: Enumerable<EquipmentOrderByWithAggregationInput>
    by: Array<EquipmentScalarFieldEnum>
    having?: EquipmentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipmentCountAggregateInputType | true
    _min?: EquipmentMinAggregateInputType
    _max?: EquipmentMaxAggregateInputType
  }


  export type EquipmentGroupByOutputType = {
    id: string
    name: string | null
    type: string | null
    organization: string | null
    description: string | null
    updatedAt: Date
    createdAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    userId: string | null
    _count: EquipmentCountAggregateOutputType | null
    _min: EquipmentMinAggregateOutputType | null
    _max: EquipmentMaxAggregateOutputType | null
  }

  type GetEquipmentGroupByPayload<T extends EquipmentGroupByArgs> = PrismaPromise<
    Array<
      PickArray<EquipmentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipmentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipmentGroupByOutputType[P]>
            : GetScalarType<T[P], EquipmentGroupByOutputType[P]>
        }
      >
    >


  export type EquipmentSelect = {
    id?: boolean
    name?: boolean
    type?: boolean
    organization?: boolean
    description?: boolean
    updatedAt?: boolean
    createdAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    userId?: boolean
    DailyLogItem?: boolean | Equipment$DailyLogItemArgs
    User_Equipment_createdByToUser?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    User_Equipment_userIdToUser?: boolean | UserArgs
    EquipmentPropertyValue?: boolean | Equipment$EquipmentPropertyValueArgs
    _count?: boolean | EquipmentCountOutputTypeArgs
  }


  export type EquipmentInclude = {
    DailyLogItem?: boolean | Equipment$DailyLogItemArgs
    User_Equipment_createdByToUser?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    User_Equipment_userIdToUser?: boolean | UserArgs
    EquipmentPropertyValue?: boolean | Equipment$EquipmentPropertyValueArgs
    _count?: boolean | EquipmentCountOutputTypeArgs
  } 

  export type EquipmentGetPayload<S extends boolean | null | undefined | EquipmentArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Equipment :
    S extends undefined ? never :
    S extends { include: any } & (EquipmentArgs | EquipmentFindManyArgs)
    ? Equipment  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['include'][P]>>  :
        P extends 'User_Equipment_createdByToUser' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'User_Equipment_userIdToUser' ? UserGetPayload<S['include'][P]> | null :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['include'][P]>>  :
        P extends '_count' ? EquipmentCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (EquipmentArgs | EquipmentFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['select'][P]>>  :
        P extends 'User_Equipment_createdByToUser' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'User_Equipment_userIdToUser' ? UserGetPayload<S['select'][P]> | null :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['select'][P]>>  :
        P extends '_count' ? EquipmentCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Equipment ? Equipment[P] : never
  } 
      : Equipment


  type EquipmentCountArgs = Merge<
    Omit<EquipmentFindManyArgs, 'select' | 'include'> & {
      select?: EquipmentCountAggregateInputType | true
    }
  >

  export interface EquipmentDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Equipment that matches the filter.
     * @param {EquipmentFindUniqueArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EquipmentFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, EquipmentFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Equipment'> extends True ? Prisma__EquipmentClient<EquipmentGetPayload<T>> : Prisma__EquipmentClient<EquipmentGetPayload<T> | null, null>

    /**
     * Find one Equipment that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EquipmentFindUniqueOrThrowArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EquipmentFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, EquipmentFindUniqueOrThrowArgs>
    ): Prisma__EquipmentClient<EquipmentGetPayload<T>>

    /**
     * Find the first Equipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindFirstArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EquipmentFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, EquipmentFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Equipment'> extends True ? Prisma__EquipmentClient<EquipmentGetPayload<T>> : Prisma__EquipmentClient<EquipmentGetPayload<T> | null, null>

    /**
     * Find the first Equipment that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindFirstOrThrowArgs} args - Arguments to find a Equipment
     * @example
     * // Get one Equipment
     * const equipment = await prisma.equipment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EquipmentFindFirstOrThrowArgs>(
      args?: SelectSubset<T, EquipmentFindFirstOrThrowArgs>
    ): Prisma__EquipmentClient<EquipmentGetPayload<T>>

    /**
     * Find zero or more Equipment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Equipment
     * const equipment = await prisma.equipment.findMany()
     * 
     * // Get first 10 Equipment
     * const equipment = await prisma.equipment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipmentWithIdOnly = await prisma.equipment.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EquipmentFindManyArgs>(
      args?: SelectSubset<T, EquipmentFindManyArgs>
    ): PrismaPromise<Array<EquipmentGetPayload<T>>>

    /**
     * Create a Equipment.
     * @param {EquipmentCreateArgs} args - Arguments to create a Equipment.
     * @example
     * // Create one Equipment
     * const Equipment = await prisma.equipment.create({
     *   data: {
     *     // ... data to create a Equipment
     *   }
     * })
     * 
    **/
    create<T extends EquipmentCreateArgs>(
      args: SelectSubset<T, EquipmentCreateArgs>
    ): Prisma__EquipmentClient<EquipmentGetPayload<T>>

    /**
     * Create many Equipment.
     *     @param {EquipmentCreateManyArgs} args - Arguments to create many Equipment.
     *     @example
     *     // Create many Equipment
     *     const equipment = await prisma.equipment.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EquipmentCreateManyArgs>(
      args?: SelectSubset<T, EquipmentCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Equipment.
     * @param {EquipmentDeleteArgs} args - Arguments to delete one Equipment.
     * @example
     * // Delete one Equipment
     * const Equipment = await prisma.equipment.delete({
     *   where: {
     *     // ... filter to delete one Equipment
     *   }
     * })
     * 
    **/
    delete<T extends EquipmentDeleteArgs>(
      args: SelectSubset<T, EquipmentDeleteArgs>
    ): Prisma__EquipmentClient<EquipmentGetPayload<T>>

    /**
     * Update one Equipment.
     * @param {EquipmentUpdateArgs} args - Arguments to update one Equipment.
     * @example
     * // Update one Equipment
     * const equipment = await prisma.equipment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EquipmentUpdateArgs>(
      args: SelectSubset<T, EquipmentUpdateArgs>
    ): Prisma__EquipmentClient<EquipmentGetPayload<T>>

    /**
     * Delete zero or more Equipment.
     * @param {EquipmentDeleteManyArgs} args - Arguments to filter Equipment to delete.
     * @example
     * // Delete a few Equipment
     * const { count } = await prisma.equipment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EquipmentDeleteManyArgs>(
      args?: SelectSubset<T, EquipmentDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Equipment
     * const equipment = await prisma.equipment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EquipmentUpdateManyArgs>(
      args: SelectSubset<T, EquipmentUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Equipment.
     * @param {EquipmentUpsertArgs} args - Arguments to update or create a Equipment.
     * @example
     * // Update or create a Equipment
     * const equipment = await prisma.equipment.upsert({
     *   create: {
     *     // ... data to create a Equipment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Equipment we want to update
     *   }
     * })
    **/
    upsert<T extends EquipmentUpsertArgs>(
      args: SelectSubset<T, EquipmentUpsertArgs>
    ): Prisma__EquipmentClient<EquipmentGetPayload<T>>

    /**
     * Count the number of Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentCountArgs} args - Arguments to filter Equipment to count.
     * @example
     * // Count the number of Equipment
     * const count = await prisma.equipment.count({
     *   where: {
     *     // ... the filter for the Equipment we want to count
     *   }
     * })
    **/
    count<T extends EquipmentCountArgs>(
      args?: Subset<T, EquipmentCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipmentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipmentAggregateArgs>(args: Subset<T, EquipmentAggregateArgs>): PrismaPromise<GetEquipmentAggregateType<T>>

    /**
     * Group by Equipment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipmentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipmentGroupByArgs['orderBy'] }
        : { orderBy?: EquipmentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipmentGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Equipment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__EquipmentClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    DailyLogItem<T extends Equipment$DailyLogItemArgs= {}>(args?: Subset<T, Equipment$DailyLogItemArgs>): PrismaPromise<Array<DailyLogItemGetPayload<T>>| Null>;

    User_Equipment_createdByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    User_Equipment_userIdToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    EquipmentPropertyValue<T extends Equipment$EquipmentPropertyValueArgs= {}>(args?: Subset<T, Equipment$EquipmentPropertyValueArgs>): PrismaPromise<Array<EquipmentPropertyValueGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Equipment base type for findUnique actions
   */
  export type EquipmentFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }

  /**
   * Equipment findUnique
   */
  export interface EquipmentFindUniqueArgs extends EquipmentFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Equipment findUniqueOrThrow
   */
  export type EquipmentFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment base type for findFirst actions
   */
  export type EquipmentFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipment.
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipment.
     * 
    **/
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }

  /**
   * Equipment findFirst
   */
  export interface EquipmentFindFirstArgs extends EquipmentFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Equipment findFirstOrThrow
   */
  export type EquipmentFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Equipment.
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Equipment.
     * 
    **/
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Equipment findMany
   */
  export type EquipmentFindManyArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter, which Equipment to fetch.
     * 
    **/
    where?: EquipmentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Equipment to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Equipment.
     * 
    **/
    cursor?: EquipmentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Equipment from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Equipment.
     * 
    **/
    skip?: number
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Equipment create
   */
  export type EquipmentCreateArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * The data needed to create a Equipment.
     * 
    **/
    data: XOR<EquipmentCreateInput, EquipmentUncheckedCreateInput>
  }


  /**
   * Equipment createMany
   */
  export type EquipmentCreateManyArgs = {
    /**
     * The data used to create many Equipment.
     * 
    **/
    data: Enumerable<EquipmentCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Equipment update
   */
  export type EquipmentUpdateArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * The data needed to update a Equipment.
     * 
    **/
    data: XOR<EquipmentUpdateInput, EquipmentUncheckedUpdateInput>
    /**
     * Choose, which Equipment to update.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment updateMany
   */
  export type EquipmentUpdateManyArgs = {
    /**
     * The data used to update Equipment.
     * 
    **/
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyInput>
    /**
     * Filter which Equipment to update
     * 
    **/
    where?: EquipmentWhereInput
  }


  /**
   * Equipment upsert
   */
  export type EquipmentUpsertArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * The filter to search for the Equipment to update in case it exists.
     * 
    **/
    where: EquipmentWhereUniqueInput
    /**
     * In case the Equipment found by the `where` argument doesn't exist, create a new Equipment with this data.
     * 
    **/
    create: XOR<EquipmentCreateInput, EquipmentUncheckedCreateInput>
    /**
     * In case the Equipment was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<EquipmentUpdateInput, EquipmentUncheckedUpdateInput>
  }


  /**
   * Equipment delete
   */
  export type EquipmentDeleteArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    /**
     * Filter which Equipment to delete.
     * 
    **/
    where: EquipmentWhereUniqueInput
  }


  /**
   * Equipment deleteMany
   */
  export type EquipmentDeleteManyArgs = {
    /**
     * Filter which Equipment to delete
     * 
    **/
    where?: EquipmentWhereInput
  }


  /**
   * Equipment.DailyLogItem
   */
  export type Equipment$DailyLogItemArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    where?: DailyLogItemWhereInput
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    cursor?: DailyLogItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * Equipment.EquipmentPropertyValue
   */
  export type Equipment$EquipmentPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    where?: EquipmentPropertyValueWhereInput
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    cursor?: EquipmentPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }


  /**
   * Equipment without action
   */
  export type EquipmentArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
  }



  /**
   * Model EquipmentProperty
   */


  export type AggregateEquipmentProperty = {
    _count: EquipmentPropertyCountAggregateOutputType | null
    _avg: EquipmentPropertyAvgAggregateOutputType | null
    _sum: EquipmentPropertySumAggregateOutputType | null
    _min: EquipmentPropertyMinAggregateOutputType | null
    _max: EquipmentPropertyMaxAggregateOutputType | null
  }

  export type EquipmentPropertyAvgAggregateOutputType = {
    order: number | null
  }

  export type EquipmentPropertySumAggregateOutputType = {
    order: number | null
  }

  export type EquipmentPropertyMinAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type EquipmentPropertyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type EquipmentPropertyCountAggregateOutputType = {
    id: number
    name: number
    order: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type EquipmentPropertyAvgAggregateInputType = {
    order?: true
  }

  export type EquipmentPropertySumAggregateInputType = {
    order?: true
  }

  export type EquipmentPropertyMinAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type EquipmentPropertyMaxAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type EquipmentPropertyCountAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type EquipmentPropertyAggregateArgs = {
    /**
     * Filter which EquipmentProperty to aggregate.
     * 
    **/
    where?: EquipmentPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: EquipmentPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipmentProperties
    **/
    _count?: true | EquipmentPropertyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipmentPropertyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipmentPropertySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipmentPropertyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipmentPropertyMaxAggregateInputType
  }

  export type GetEquipmentPropertyAggregateType<T extends EquipmentPropertyAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipmentProperty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipmentProperty[P]>
      : GetScalarType<T[P], AggregateEquipmentProperty[P]>
  }




  export type EquipmentPropertyGroupByArgs = {
    where?: EquipmentPropertyWhereInput
    orderBy?: Enumerable<EquipmentPropertyOrderByWithAggregationInput>
    by: Array<EquipmentPropertyScalarFieldEnum>
    having?: EquipmentPropertyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipmentPropertyCountAggregateInputType | true
    _avg?: EquipmentPropertyAvgAggregateInputType
    _sum?: EquipmentPropertySumAggregateInputType
    _min?: EquipmentPropertyMinAggregateInputType
    _max?: EquipmentPropertyMaxAggregateInputType
  }


  export type EquipmentPropertyGroupByOutputType = {
    id: string
    name: string
    order: number
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: EquipmentPropertyCountAggregateOutputType | null
    _avg: EquipmentPropertyAvgAggregateOutputType | null
    _sum: EquipmentPropertySumAggregateOutputType | null
    _min: EquipmentPropertyMinAggregateOutputType | null
    _max: EquipmentPropertyMaxAggregateOutputType | null
  }

  type GetEquipmentPropertyGroupByPayload<T extends EquipmentPropertyGroupByArgs> = PrismaPromise<
    Array<
      PickArray<EquipmentPropertyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipmentPropertyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipmentPropertyGroupByOutputType[P]>
            : GetScalarType<T[P], EquipmentPropertyGroupByOutputType[P]>
        }
      >
    >


  export type EquipmentPropertySelect = {
    id?: boolean
    name?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    EquipmentPropertyValue?: boolean | EquipmentProperty$EquipmentPropertyValueArgs
    _count?: boolean | EquipmentPropertyCountOutputTypeArgs
  }


  export type EquipmentPropertyInclude = {
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    EquipmentPropertyValue?: boolean | EquipmentProperty$EquipmentPropertyValueArgs
    _count?: boolean | EquipmentPropertyCountOutputTypeArgs
  } 

  export type EquipmentPropertyGetPayload<S extends boolean | null | undefined | EquipmentPropertyArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? EquipmentProperty :
    S extends undefined ? never :
    S extends { include: any } & (EquipmentPropertyArgs | EquipmentPropertyFindManyArgs)
    ? EquipmentProperty  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['include'][P]>>  :
        P extends '_count' ? EquipmentPropertyCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (EquipmentPropertyArgs | EquipmentPropertyFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['select'][P]>>  :
        P extends '_count' ? EquipmentPropertyCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof EquipmentProperty ? EquipmentProperty[P] : never
  } 
      : EquipmentProperty


  type EquipmentPropertyCountArgs = Merge<
    Omit<EquipmentPropertyFindManyArgs, 'select' | 'include'> & {
      select?: EquipmentPropertyCountAggregateInputType | true
    }
  >

  export interface EquipmentPropertyDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one EquipmentProperty that matches the filter.
     * @param {EquipmentPropertyFindUniqueArgs} args - Arguments to find a EquipmentProperty
     * @example
     * // Get one EquipmentProperty
     * const equipmentProperty = await prisma.equipmentProperty.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EquipmentPropertyFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, EquipmentPropertyFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'EquipmentProperty'> extends True ? Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>> : Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T> | null, null>

    /**
     * Find one EquipmentProperty that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EquipmentPropertyFindUniqueOrThrowArgs} args - Arguments to find a EquipmentProperty
     * @example
     * // Get one EquipmentProperty
     * const equipmentProperty = await prisma.equipmentProperty.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EquipmentPropertyFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, EquipmentPropertyFindUniqueOrThrowArgs>
    ): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>>

    /**
     * Find the first EquipmentProperty that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyFindFirstArgs} args - Arguments to find a EquipmentProperty
     * @example
     * // Get one EquipmentProperty
     * const equipmentProperty = await prisma.equipmentProperty.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EquipmentPropertyFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, EquipmentPropertyFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'EquipmentProperty'> extends True ? Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>> : Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T> | null, null>

    /**
     * Find the first EquipmentProperty that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyFindFirstOrThrowArgs} args - Arguments to find a EquipmentProperty
     * @example
     * // Get one EquipmentProperty
     * const equipmentProperty = await prisma.equipmentProperty.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EquipmentPropertyFindFirstOrThrowArgs>(
      args?: SelectSubset<T, EquipmentPropertyFindFirstOrThrowArgs>
    ): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>>

    /**
     * Find zero or more EquipmentProperties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipmentProperties
     * const equipmentProperties = await prisma.equipmentProperty.findMany()
     * 
     * // Get first 10 EquipmentProperties
     * const equipmentProperties = await prisma.equipmentProperty.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipmentPropertyWithIdOnly = await prisma.equipmentProperty.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EquipmentPropertyFindManyArgs>(
      args?: SelectSubset<T, EquipmentPropertyFindManyArgs>
    ): PrismaPromise<Array<EquipmentPropertyGetPayload<T>>>

    /**
     * Create a EquipmentProperty.
     * @param {EquipmentPropertyCreateArgs} args - Arguments to create a EquipmentProperty.
     * @example
     * // Create one EquipmentProperty
     * const EquipmentProperty = await prisma.equipmentProperty.create({
     *   data: {
     *     // ... data to create a EquipmentProperty
     *   }
     * })
     * 
    **/
    create<T extends EquipmentPropertyCreateArgs>(
      args: SelectSubset<T, EquipmentPropertyCreateArgs>
    ): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>>

    /**
     * Create many EquipmentProperties.
     *     @param {EquipmentPropertyCreateManyArgs} args - Arguments to create many EquipmentProperties.
     *     @example
     *     // Create many EquipmentProperties
     *     const equipmentProperty = await prisma.equipmentProperty.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EquipmentPropertyCreateManyArgs>(
      args?: SelectSubset<T, EquipmentPropertyCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a EquipmentProperty.
     * @param {EquipmentPropertyDeleteArgs} args - Arguments to delete one EquipmentProperty.
     * @example
     * // Delete one EquipmentProperty
     * const EquipmentProperty = await prisma.equipmentProperty.delete({
     *   where: {
     *     // ... filter to delete one EquipmentProperty
     *   }
     * })
     * 
    **/
    delete<T extends EquipmentPropertyDeleteArgs>(
      args: SelectSubset<T, EquipmentPropertyDeleteArgs>
    ): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>>

    /**
     * Update one EquipmentProperty.
     * @param {EquipmentPropertyUpdateArgs} args - Arguments to update one EquipmentProperty.
     * @example
     * // Update one EquipmentProperty
     * const equipmentProperty = await prisma.equipmentProperty.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EquipmentPropertyUpdateArgs>(
      args: SelectSubset<T, EquipmentPropertyUpdateArgs>
    ): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>>

    /**
     * Delete zero or more EquipmentProperties.
     * @param {EquipmentPropertyDeleteManyArgs} args - Arguments to filter EquipmentProperties to delete.
     * @example
     * // Delete a few EquipmentProperties
     * const { count } = await prisma.equipmentProperty.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EquipmentPropertyDeleteManyArgs>(
      args?: SelectSubset<T, EquipmentPropertyDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipmentProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipmentProperties
     * const equipmentProperty = await prisma.equipmentProperty.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EquipmentPropertyUpdateManyArgs>(
      args: SelectSubset<T, EquipmentPropertyUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipmentProperty.
     * @param {EquipmentPropertyUpsertArgs} args - Arguments to update or create a EquipmentProperty.
     * @example
     * // Update or create a EquipmentProperty
     * const equipmentProperty = await prisma.equipmentProperty.upsert({
     *   create: {
     *     // ... data to create a EquipmentProperty
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipmentProperty we want to update
     *   }
     * })
    **/
    upsert<T extends EquipmentPropertyUpsertArgs>(
      args: SelectSubset<T, EquipmentPropertyUpsertArgs>
    ): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T>>

    /**
     * Count the number of EquipmentProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyCountArgs} args - Arguments to filter EquipmentProperties to count.
     * @example
     * // Count the number of EquipmentProperties
     * const count = await prisma.equipmentProperty.count({
     *   where: {
     *     // ... the filter for the EquipmentProperties we want to count
     *   }
     * })
    **/
    count<T extends EquipmentPropertyCountArgs>(
      args?: Subset<T, EquipmentPropertyCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipmentPropertyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipmentProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipmentPropertyAggregateArgs>(args: Subset<T, EquipmentPropertyAggregateArgs>): PrismaPromise<GetEquipmentPropertyAggregateType<T>>

    /**
     * Group by EquipmentProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipmentPropertyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipmentPropertyGroupByArgs['orderBy'] }
        : { orderBy?: EquipmentPropertyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipmentPropertyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipmentPropertyGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipmentProperty.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__EquipmentPropertyClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    EquipmentPropertyValue<T extends EquipmentProperty$EquipmentPropertyValueArgs= {}>(args?: Subset<T, EquipmentProperty$EquipmentPropertyValueArgs>): PrismaPromise<Array<EquipmentPropertyValueGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * EquipmentProperty base type for findUnique actions
   */
  export type EquipmentPropertyFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * Filter, which EquipmentProperty to fetch.
     * 
    **/
    where: EquipmentPropertyWhereUniqueInput
  }

  /**
   * EquipmentProperty findUnique
   */
  export interface EquipmentPropertyFindUniqueArgs extends EquipmentPropertyFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * EquipmentProperty findUniqueOrThrow
   */
  export type EquipmentPropertyFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * Filter, which EquipmentProperty to fetch.
     * 
    **/
    where: EquipmentPropertyWhereUniqueInput
  }


  /**
   * EquipmentProperty base type for findFirst actions
   */
  export type EquipmentPropertyFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * Filter, which EquipmentProperty to fetch.
     * 
    **/
    where?: EquipmentPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipmentProperties.
     * 
    **/
    cursor?: EquipmentPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipmentProperties.
     * 
    **/
    distinct?: Enumerable<EquipmentPropertyScalarFieldEnum>
  }

  /**
   * EquipmentProperty findFirst
   */
  export interface EquipmentPropertyFindFirstArgs extends EquipmentPropertyFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * EquipmentProperty findFirstOrThrow
   */
  export type EquipmentPropertyFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * Filter, which EquipmentProperty to fetch.
     * 
    **/
    where?: EquipmentPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipmentProperties.
     * 
    **/
    cursor?: EquipmentPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipmentProperties.
     * 
    **/
    distinct?: Enumerable<EquipmentPropertyScalarFieldEnum>
  }


  /**
   * EquipmentProperty findMany
   */
  export type EquipmentPropertyFindManyArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * Filter, which EquipmentProperties to fetch.
     * 
    **/
    where?: EquipmentPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipmentProperties.
     * 
    **/
    cursor?: EquipmentPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentProperties.
     * 
    **/
    skip?: number
    distinct?: Enumerable<EquipmentPropertyScalarFieldEnum>
  }


  /**
   * EquipmentProperty create
   */
  export type EquipmentPropertyCreateArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * The data needed to create a EquipmentProperty.
     * 
    **/
    data: XOR<EquipmentPropertyCreateInput, EquipmentPropertyUncheckedCreateInput>
  }


  /**
   * EquipmentProperty createMany
   */
  export type EquipmentPropertyCreateManyArgs = {
    /**
     * The data used to create many EquipmentProperties.
     * 
    **/
    data: Enumerable<EquipmentPropertyCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * EquipmentProperty update
   */
  export type EquipmentPropertyUpdateArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * The data needed to update a EquipmentProperty.
     * 
    **/
    data: XOR<EquipmentPropertyUpdateInput, EquipmentPropertyUncheckedUpdateInput>
    /**
     * Choose, which EquipmentProperty to update.
     * 
    **/
    where: EquipmentPropertyWhereUniqueInput
  }


  /**
   * EquipmentProperty updateMany
   */
  export type EquipmentPropertyUpdateManyArgs = {
    /**
     * The data used to update EquipmentProperties.
     * 
    **/
    data: XOR<EquipmentPropertyUpdateManyMutationInput, EquipmentPropertyUncheckedUpdateManyInput>
    /**
     * Filter which EquipmentProperties to update
     * 
    **/
    where?: EquipmentPropertyWhereInput
  }


  /**
   * EquipmentProperty upsert
   */
  export type EquipmentPropertyUpsertArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * The filter to search for the EquipmentProperty to update in case it exists.
     * 
    **/
    where: EquipmentPropertyWhereUniqueInput
    /**
     * In case the EquipmentProperty found by the `where` argument doesn't exist, create a new EquipmentProperty with this data.
     * 
    **/
    create: XOR<EquipmentPropertyCreateInput, EquipmentPropertyUncheckedCreateInput>
    /**
     * In case the EquipmentProperty was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<EquipmentPropertyUpdateInput, EquipmentPropertyUncheckedUpdateInput>
  }


  /**
   * EquipmentProperty delete
   */
  export type EquipmentPropertyDeleteArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    /**
     * Filter which EquipmentProperty to delete.
     * 
    **/
    where: EquipmentPropertyWhereUniqueInput
  }


  /**
   * EquipmentProperty deleteMany
   */
  export type EquipmentPropertyDeleteManyArgs = {
    /**
     * Filter which EquipmentProperties to delete
     * 
    **/
    where?: EquipmentPropertyWhereInput
  }


  /**
   * EquipmentProperty.EquipmentPropertyValue
   */
  export type EquipmentProperty$EquipmentPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    where?: EquipmentPropertyValueWhereInput
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    cursor?: EquipmentPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }


  /**
   * EquipmentProperty without action
   */
  export type EquipmentPropertyArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
  }



  /**
   * Model EquipmentPropertyValue
   */


  export type AggregateEquipmentPropertyValue = {
    _count: EquipmentPropertyValueCountAggregateOutputType | null
    _min: EquipmentPropertyValueMinAggregateOutputType | null
    _max: EquipmentPropertyValueMaxAggregateOutputType | null
  }

  export type EquipmentPropertyValueMinAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    equipmentId: string | null
    equipmentPropertyId: string | null
    tenantId: string | null
  }

  export type EquipmentPropertyValueMaxAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    equipmentId: string | null
    equipmentPropertyId: string | null
    tenantId: string | null
  }

  export type EquipmentPropertyValueCountAggregateOutputType = {
    id: number
    value: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    equipmentId: number
    equipmentPropertyId: number
    tenantId: number
    _all: number
  }


  export type EquipmentPropertyValueMinAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    equipmentId?: true
    equipmentPropertyId?: true
    tenantId?: true
  }

  export type EquipmentPropertyValueMaxAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    equipmentId?: true
    equipmentPropertyId?: true
    tenantId?: true
  }

  export type EquipmentPropertyValueCountAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    equipmentId?: true
    equipmentPropertyId?: true
    tenantId?: true
    _all?: true
  }

  export type EquipmentPropertyValueAggregateArgs = {
    /**
     * Filter which EquipmentPropertyValue to aggregate.
     * 
    **/
    where?: EquipmentPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: EquipmentPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipmentPropertyValues
    **/
    _count?: true | EquipmentPropertyValueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipmentPropertyValueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipmentPropertyValueMaxAggregateInputType
  }

  export type GetEquipmentPropertyValueAggregateType<T extends EquipmentPropertyValueAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipmentPropertyValue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipmentPropertyValue[P]>
      : GetScalarType<T[P], AggregateEquipmentPropertyValue[P]>
  }




  export type EquipmentPropertyValueGroupByArgs = {
    where?: EquipmentPropertyValueWhereInput
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithAggregationInput>
    by: Array<EquipmentPropertyValueScalarFieldEnum>
    having?: EquipmentPropertyValueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipmentPropertyValueCountAggregateInputType | true
    _min?: EquipmentPropertyValueMinAggregateInputType
    _max?: EquipmentPropertyValueMaxAggregateInputType
  }


  export type EquipmentPropertyValueGroupByOutputType = {
    id: string
    value: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    equipmentId: string
    equipmentPropertyId: string
    tenantId: string
    _count: EquipmentPropertyValueCountAggregateOutputType | null
    _min: EquipmentPropertyValueMinAggregateOutputType | null
    _max: EquipmentPropertyValueMaxAggregateOutputType | null
  }

  type GetEquipmentPropertyValueGroupByPayload<T extends EquipmentPropertyValueGroupByArgs> = PrismaPromise<
    Array<
      PickArray<EquipmentPropertyValueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipmentPropertyValueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipmentPropertyValueGroupByOutputType[P]>
            : GetScalarType<T[P], EquipmentPropertyValueGroupByOutputType[P]>
        }
      >
    >


  export type EquipmentPropertyValueSelect = {
    id?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    equipmentId?: boolean
    equipmentPropertyId?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Equipment?: boolean | EquipmentArgs
    EquipmentProperty?: boolean | EquipmentPropertyArgs
    Tenant?: boolean | TenantArgs
  }


  export type EquipmentPropertyValueInclude = {
    User?: boolean | UserArgs
    Equipment?: boolean | EquipmentArgs
    EquipmentProperty?: boolean | EquipmentPropertyArgs
    Tenant?: boolean | TenantArgs
  } 

  export type EquipmentPropertyValueGetPayload<S extends boolean | null | undefined | EquipmentPropertyValueArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? EquipmentPropertyValue :
    S extends undefined ? never :
    S extends { include: any } & (EquipmentPropertyValueArgs | EquipmentPropertyValueFindManyArgs)
    ? EquipmentPropertyValue  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Equipment' ? EquipmentGetPayload<S['include'][P]> :
        P extends 'EquipmentProperty' ? EquipmentPropertyGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (EquipmentPropertyValueArgs | EquipmentPropertyValueFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Equipment' ? EquipmentGetPayload<S['select'][P]> :
        P extends 'EquipmentProperty' ? EquipmentPropertyGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof EquipmentPropertyValue ? EquipmentPropertyValue[P] : never
  } 
      : EquipmentPropertyValue


  type EquipmentPropertyValueCountArgs = Merge<
    Omit<EquipmentPropertyValueFindManyArgs, 'select' | 'include'> & {
      select?: EquipmentPropertyValueCountAggregateInputType | true
    }
  >

  export interface EquipmentPropertyValueDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one EquipmentPropertyValue that matches the filter.
     * @param {EquipmentPropertyValueFindUniqueArgs} args - Arguments to find a EquipmentPropertyValue
     * @example
     * // Get one EquipmentPropertyValue
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends EquipmentPropertyValueFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, EquipmentPropertyValueFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'EquipmentPropertyValue'> extends True ? Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>> : Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T> | null, null>

    /**
     * Find one EquipmentPropertyValue that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {EquipmentPropertyValueFindUniqueOrThrowArgs} args - Arguments to find a EquipmentPropertyValue
     * @example
     * // Get one EquipmentPropertyValue
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends EquipmentPropertyValueFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, EquipmentPropertyValueFindUniqueOrThrowArgs>
    ): Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>>

    /**
     * Find the first EquipmentPropertyValue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueFindFirstArgs} args - Arguments to find a EquipmentPropertyValue
     * @example
     * // Get one EquipmentPropertyValue
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends EquipmentPropertyValueFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, EquipmentPropertyValueFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'EquipmentPropertyValue'> extends True ? Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>> : Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T> | null, null>

    /**
     * Find the first EquipmentPropertyValue that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueFindFirstOrThrowArgs} args - Arguments to find a EquipmentPropertyValue
     * @example
     * // Get one EquipmentPropertyValue
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends EquipmentPropertyValueFindFirstOrThrowArgs>(
      args?: SelectSubset<T, EquipmentPropertyValueFindFirstOrThrowArgs>
    ): Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>>

    /**
     * Find zero or more EquipmentPropertyValues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipmentPropertyValues
     * const equipmentPropertyValues = await prisma.equipmentPropertyValue.findMany()
     * 
     * // Get first 10 EquipmentPropertyValues
     * const equipmentPropertyValues = await prisma.equipmentPropertyValue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipmentPropertyValueWithIdOnly = await prisma.equipmentPropertyValue.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends EquipmentPropertyValueFindManyArgs>(
      args?: SelectSubset<T, EquipmentPropertyValueFindManyArgs>
    ): PrismaPromise<Array<EquipmentPropertyValueGetPayload<T>>>

    /**
     * Create a EquipmentPropertyValue.
     * @param {EquipmentPropertyValueCreateArgs} args - Arguments to create a EquipmentPropertyValue.
     * @example
     * // Create one EquipmentPropertyValue
     * const EquipmentPropertyValue = await prisma.equipmentPropertyValue.create({
     *   data: {
     *     // ... data to create a EquipmentPropertyValue
     *   }
     * })
     * 
    **/
    create<T extends EquipmentPropertyValueCreateArgs>(
      args: SelectSubset<T, EquipmentPropertyValueCreateArgs>
    ): Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>>

    /**
     * Create many EquipmentPropertyValues.
     *     @param {EquipmentPropertyValueCreateManyArgs} args - Arguments to create many EquipmentPropertyValues.
     *     @example
     *     // Create many EquipmentPropertyValues
     *     const equipmentPropertyValue = await prisma.equipmentPropertyValue.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends EquipmentPropertyValueCreateManyArgs>(
      args?: SelectSubset<T, EquipmentPropertyValueCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a EquipmentPropertyValue.
     * @param {EquipmentPropertyValueDeleteArgs} args - Arguments to delete one EquipmentPropertyValue.
     * @example
     * // Delete one EquipmentPropertyValue
     * const EquipmentPropertyValue = await prisma.equipmentPropertyValue.delete({
     *   where: {
     *     // ... filter to delete one EquipmentPropertyValue
     *   }
     * })
     * 
    **/
    delete<T extends EquipmentPropertyValueDeleteArgs>(
      args: SelectSubset<T, EquipmentPropertyValueDeleteArgs>
    ): Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>>

    /**
     * Update one EquipmentPropertyValue.
     * @param {EquipmentPropertyValueUpdateArgs} args - Arguments to update one EquipmentPropertyValue.
     * @example
     * // Update one EquipmentPropertyValue
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends EquipmentPropertyValueUpdateArgs>(
      args: SelectSubset<T, EquipmentPropertyValueUpdateArgs>
    ): Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>>

    /**
     * Delete zero or more EquipmentPropertyValues.
     * @param {EquipmentPropertyValueDeleteManyArgs} args - Arguments to filter EquipmentPropertyValues to delete.
     * @example
     * // Delete a few EquipmentPropertyValues
     * const { count } = await prisma.equipmentPropertyValue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends EquipmentPropertyValueDeleteManyArgs>(
      args?: SelectSubset<T, EquipmentPropertyValueDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipmentPropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipmentPropertyValues
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends EquipmentPropertyValueUpdateManyArgs>(
      args: SelectSubset<T, EquipmentPropertyValueUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipmentPropertyValue.
     * @param {EquipmentPropertyValueUpsertArgs} args - Arguments to update or create a EquipmentPropertyValue.
     * @example
     * // Update or create a EquipmentPropertyValue
     * const equipmentPropertyValue = await prisma.equipmentPropertyValue.upsert({
     *   create: {
     *     // ... data to create a EquipmentPropertyValue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipmentPropertyValue we want to update
     *   }
     * })
    **/
    upsert<T extends EquipmentPropertyValueUpsertArgs>(
      args: SelectSubset<T, EquipmentPropertyValueUpsertArgs>
    ): Prisma__EquipmentPropertyValueClient<EquipmentPropertyValueGetPayload<T>>

    /**
     * Count the number of EquipmentPropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueCountArgs} args - Arguments to filter EquipmentPropertyValues to count.
     * @example
     * // Count the number of EquipmentPropertyValues
     * const count = await prisma.equipmentPropertyValue.count({
     *   where: {
     *     // ... the filter for the EquipmentPropertyValues we want to count
     *   }
     * })
    **/
    count<T extends EquipmentPropertyValueCountArgs>(
      args?: Subset<T, EquipmentPropertyValueCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipmentPropertyValueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipmentPropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipmentPropertyValueAggregateArgs>(args: Subset<T, EquipmentPropertyValueAggregateArgs>): PrismaPromise<GetEquipmentPropertyValueAggregateType<T>>

    /**
     * Group by EquipmentPropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipmentPropertyValueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipmentPropertyValueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipmentPropertyValueGroupByArgs['orderBy'] }
        : { orderBy?: EquipmentPropertyValueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipmentPropertyValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipmentPropertyValueGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipmentPropertyValue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__EquipmentPropertyValueClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Equipment<T extends EquipmentArgs= {}>(args?: Subset<T, EquipmentArgs>): Prisma__EquipmentClient<EquipmentGetPayload<T> | Null>;

    EquipmentProperty<T extends EquipmentPropertyArgs= {}>(args?: Subset<T, EquipmentPropertyArgs>): Prisma__EquipmentPropertyClient<EquipmentPropertyGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * EquipmentPropertyValue base type for findUnique actions
   */
  export type EquipmentPropertyValueFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * Filter, which EquipmentPropertyValue to fetch.
     * 
    **/
    where: EquipmentPropertyValueWhereUniqueInput
  }

  /**
   * EquipmentPropertyValue findUnique
   */
  export interface EquipmentPropertyValueFindUniqueArgs extends EquipmentPropertyValueFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * EquipmentPropertyValue findUniqueOrThrow
   */
  export type EquipmentPropertyValueFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * Filter, which EquipmentPropertyValue to fetch.
     * 
    **/
    where: EquipmentPropertyValueWhereUniqueInput
  }


  /**
   * EquipmentPropertyValue base type for findFirst actions
   */
  export type EquipmentPropertyValueFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * Filter, which EquipmentPropertyValue to fetch.
     * 
    **/
    where?: EquipmentPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipmentPropertyValues.
     * 
    **/
    cursor?: EquipmentPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipmentPropertyValues.
     * 
    **/
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }

  /**
   * EquipmentPropertyValue findFirst
   */
  export interface EquipmentPropertyValueFindFirstArgs extends EquipmentPropertyValueFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * EquipmentPropertyValue findFirstOrThrow
   */
  export type EquipmentPropertyValueFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * Filter, which EquipmentPropertyValue to fetch.
     * 
    **/
    where?: EquipmentPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipmentPropertyValues.
     * 
    **/
    cursor?: EquipmentPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipmentPropertyValues.
     * 
    **/
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }


  /**
   * EquipmentPropertyValue findMany
   */
  export type EquipmentPropertyValueFindManyArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * Filter, which EquipmentPropertyValues to fetch.
     * 
    **/
    where?: EquipmentPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipmentPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipmentPropertyValues.
     * 
    **/
    cursor?: EquipmentPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipmentPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipmentPropertyValues.
     * 
    **/
    skip?: number
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }


  /**
   * EquipmentPropertyValue create
   */
  export type EquipmentPropertyValueCreateArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * The data needed to create a EquipmentPropertyValue.
     * 
    **/
    data: XOR<EquipmentPropertyValueCreateInput, EquipmentPropertyValueUncheckedCreateInput>
  }


  /**
   * EquipmentPropertyValue createMany
   */
  export type EquipmentPropertyValueCreateManyArgs = {
    /**
     * The data used to create many EquipmentPropertyValues.
     * 
    **/
    data: Enumerable<EquipmentPropertyValueCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * EquipmentPropertyValue update
   */
  export type EquipmentPropertyValueUpdateArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * The data needed to update a EquipmentPropertyValue.
     * 
    **/
    data: XOR<EquipmentPropertyValueUpdateInput, EquipmentPropertyValueUncheckedUpdateInput>
    /**
     * Choose, which EquipmentPropertyValue to update.
     * 
    **/
    where: EquipmentPropertyValueWhereUniqueInput
  }


  /**
   * EquipmentPropertyValue updateMany
   */
  export type EquipmentPropertyValueUpdateManyArgs = {
    /**
     * The data used to update EquipmentPropertyValues.
     * 
    **/
    data: XOR<EquipmentPropertyValueUpdateManyMutationInput, EquipmentPropertyValueUncheckedUpdateManyInput>
    /**
     * Filter which EquipmentPropertyValues to update
     * 
    **/
    where?: EquipmentPropertyValueWhereInput
  }


  /**
   * EquipmentPropertyValue upsert
   */
  export type EquipmentPropertyValueUpsertArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * The filter to search for the EquipmentPropertyValue to update in case it exists.
     * 
    **/
    where: EquipmentPropertyValueWhereUniqueInput
    /**
     * In case the EquipmentPropertyValue found by the `where` argument doesn't exist, create a new EquipmentPropertyValue with this data.
     * 
    **/
    create: XOR<EquipmentPropertyValueCreateInput, EquipmentPropertyValueUncheckedCreateInput>
    /**
     * In case the EquipmentPropertyValue was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<EquipmentPropertyValueUpdateInput, EquipmentPropertyValueUncheckedUpdateInput>
  }


  /**
   * EquipmentPropertyValue delete
   */
  export type EquipmentPropertyValueDeleteArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    /**
     * Filter which EquipmentPropertyValue to delete.
     * 
    **/
    where: EquipmentPropertyValueWhereUniqueInput
  }


  /**
   * EquipmentPropertyValue deleteMany
   */
  export type EquipmentPropertyValueDeleteManyArgs = {
    /**
     * Filter which EquipmentPropertyValues to delete
     * 
    **/
    where?: EquipmentPropertyValueWhereInput
  }


  /**
   * EquipmentPropertyValue without action
   */
  export type EquipmentPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
  }



  /**
   * Model Feedback
   */


  export type AggregateFeedback = {
    _count: FeedbackCountAggregateOutputType | null
    _min: FeedbackMinAggregateOutputType | null
    _max: FeedbackMaxAggregateOutputType | null
  }

  export type FeedbackMinAggregateOutputType = {
    id: string | null
    text: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type FeedbackMaxAggregateOutputType = {
    id: string | null
    text: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type FeedbackCountAggregateOutputType = {
    id: number
    text: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type FeedbackMinAggregateInputType = {
    id?: true
    text?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type FeedbackMaxAggregateInputType = {
    id?: true
    text?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type FeedbackCountAggregateInputType = {
    id?: true
    text?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type FeedbackAggregateArgs = {
    /**
     * Filter which Feedback to aggregate.
     * 
    **/
    where?: FeedbackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Feedbacks to fetch.
     * 
    **/
    orderBy?: Enumerable<FeedbackOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: FeedbackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Feedbacks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Feedbacks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Feedbacks
    **/
    _count?: true | FeedbackCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FeedbackMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FeedbackMaxAggregateInputType
  }

  export type GetFeedbackAggregateType<T extends FeedbackAggregateArgs> = {
        [P in keyof T & keyof AggregateFeedback]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFeedback[P]>
      : GetScalarType<T[P], AggregateFeedback[P]>
  }




  export type FeedbackGroupByArgs = {
    where?: FeedbackWhereInput
    orderBy?: Enumerable<FeedbackOrderByWithAggregationInput>
    by: Array<FeedbackScalarFieldEnum>
    having?: FeedbackScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FeedbackCountAggregateInputType | true
    _min?: FeedbackMinAggregateInputType
    _max?: FeedbackMaxAggregateInputType
  }


  export type FeedbackGroupByOutputType = {
    id: string
    text: string | null
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: FeedbackCountAggregateOutputType | null
    _min: FeedbackMinAggregateOutputType | null
    _max: FeedbackMaxAggregateOutputType | null
  }

  type GetFeedbackGroupByPayload<T extends FeedbackGroupByArgs> = PrismaPromise<
    Array<
      PickArray<FeedbackGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FeedbackGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FeedbackGroupByOutputType[P]>
            : GetScalarType<T[P], FeedbackGroupByOutputType[P]>
        }
      >
    >


  export type FeedbackSelect = {
    id?: boolean
    text?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
  }


  export type FeedbackInclude = {
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
  } 

  export type FeedbackGetPayload<S extends boolean | null | undefined | FeedbackArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Feedback :
    S extends undefined ? never :
    S extends { include: any } & (FeedbackArgs | FeedbackFindManyArgs)
    ? Feedback  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (FeedbackArgs | FeedbackFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof Feedback ? Feedback[P] : never
  } 
      : Feedback


  type FeedbackCountArgs = Merge<
    Omit<FeedbackFindManyArgs, 'select' | 'include'> & {
      select?: FeedbackCountAggregateInputType | true
    }
  >

  export interface FeedbackDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Feedback that matches the filter.
     * @param {FeedbackFindUniqueArgs} args - Arguments to find a Feedback
     * @example
     * // Get one Feedback
     * const feedback = await prisma.feedback.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FeedbackFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, FeedbackFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Feedback'> extends True ? Prisma__FeedbackClient<FeedbackGetPayload<T>> : Prisma__FeedbackClient<FeedbackGetPayload<T> | null, null>

    /**
     * Find one Feedback that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FeedbackFindUniqueOrThrowArgs} args - Arguments to find a Feedback
     * @example
     * // Get one Feedback
     * const feedback = await prisma.feedback.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FeedbackFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, FeedbackFindUniqueOrThrowArgs>
    ): Prisma__FeedbackClient<FeedbackGetPayload<T>>

    /**
     * Find the first Feedback that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackFindFirstArgs} args - Arguments to find a Feedback
     * @example
     * // Get one Feedback
     * const feedback = await prisma.feedback.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FeedbackFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, FeedbackFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Feedback'> extends True ? Prisma__FeedbackClient<FeedbackGetPayload<T>> : Prisma__FeedbackClient<FeedbackGetPayload<T> | null, null>

    /**
     * Find the first Feedback that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackFindFirstOrThrowArgs} args - Arguments to find a Feedback
     * @example
     * // Get one Feedback
     * const feedback = await prisma.feedback.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FeedbackFindFirstOrThrowArgs>(
      args?: SelectSubset<T, FeedbackFindFirstOrThrowArgs>
    ): Prisma__FeedbackClient<FeedbackGetPayload<T>>

    /**
     * Find zero or more Feedbacks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Feedbacks
     * const feedbacks = await prisma.feedback.findMany()
     * 
     * // Get first 10 Feedbacks
     * const feedbacks = await prisma.feedback.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const feedbackWithIdOnly = await prisma.feedback.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FeedbackFindManyArgs>(
      args?: SelectSubset<T, FeedbackFindManyArgs>
    ): PrismaPromise<Array<FeedbackGetPayload<T>>>

    /**
     * Create a Feedback.
     * @param {FeedbackCreateArgs} args - Arguments to create a Feedback.
     * @example
     * // Create one Feedback
     * const Feedback = await prisma.feedback.create({
     *   data: {
     *     // ... data to create a Feedback
     *   }
     * })
     * 
    **/
    create<T extends FeedbackCreateArgs>(
      args: SelectSubset<T, FeedbackCreateArgs>
    ): Prisma__FeedbackClient<FeedbackGetPayload<T>>

    /**
     * Create many Feedbacks.
     *     @param {FeedbackCreateManyArgs} args - Arguments to create many Feedbacks.
     *     @example
     *     // Create many Feedbacks
     *     const feedback = await prisma.feedback.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FeedbackCreateManyArgs>(
      args?: SelectSubset<T, FeedbackCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Feedback.
     * @param {FeedbackDeleteArgs} args - Arguments to delete one Feedback.
     * @example
     * // Delete one Feedback
     * const Feedback = await prisma.feedback.delete({
     *   where: {
     *     // ... filter to delete one Feedback
     *   }
     * })
     * 
    **/
    delete<T extends FeedbackDeleteArgs>(
      args: SelectSubset<T, FeedbackDeleteArgs>
    ): Prisma__FeedbackClient<FeedbackGetPayload<T>>

    /**
     * Update one Feedback.
     * @param {FeedbackUpdateArgs} args - Arguments to update one Feedback.
     * @example
     * // Update one Feedback
     * const feedback = await prisma.feedback.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FeedbackUpdateArgs>(
      args: SelectSubset<T, FeedbackUpdateArgs>
    ): Prisma__FeedbackClient<FeedbackGetPayload<T>>

    /**
     * Delete zero or more Feedbacks.
     * @param {FeedbackDeleteManyArgs} args - Arguments to filter Feedbacks to delete.
     * @example
     * // Delete a few Feedbacks
     * const { count } = await prisma.feedback.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FeedbackDeleteManyArgs>(
      args?: SelectSubset<T, FeedbackDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Feedbacks
     * const feedback = await prisma.feedback.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FeedbackUpdateManyArgs>(
      args: SelectSubset<T, FeedbackUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Feedback.
     * @param {FeedbackUpsertArgs} args - Arguments to update or create a Feedback.
     * @example
     * // Update or create a Feedback
     * const feedback = await prisma.feedback.upsert({
     *   create: {
     *     // ... data to create a Feedback
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Feedback we want to update
     *   }
     * })
    **/
    upsert<T extends FeedbackUpsertArgs>(
      args: SelectSubset<T, FeedbackUpsertArgs>
    ): Prisma__FeedbackClient<FeedbackGetPayload<T>>

    /**
     * Count the number of Feedbacks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackCountArgs} args - Arguments to filter Feedbacks to count.
     * @example
     * // Count the number of Feedbacks
     * const count = await prisma.feedback.count({
     *   where: {
     *     // ... the filter for the Feedbacks we want to count
     *   }
     * })
    **/
    count<T extends FeedbackCountArgs>(
      args?: Subset<T, FeedbackCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FeedbackCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Feedback.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FeedbackAggregateArgs>(args: Subset<T, FeedbackAggregateArgs>): PrismaPromise<GetFeedbackAggregateType<T>>

    /**
     * Group by Feedback.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FeedbackGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FeedbackGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FeedbackGroupByArgs['orderBy'] }
        : { orderBy?: FeedbackGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FeedbackGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFeedbackGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Feedback.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__FeedbackClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Feedback base type for findUnique actions
   */
  export type FeedbackFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * Filter, which Feedback to fetch.
     * 
    **/
    where: FeedbackWhereUniqueInput
  }

  /**
   * Feedback findUnique
   */
  export interface FeedbackFindUniqueArgs extends FeedbackFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Feedback findUniqueOrThrow
   */
  export type FeedbackFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * Filter, which Feedback to fetch.
     * 
    **/
    where: FeedbackWhereUniqueInput
  }


  /**
   * Feedback base type for findFirst actions
   */
  export type FeedbackFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * Filter, which Feedback to fetch.
     * 
    **/
    where?: FeedbackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Feedbacks to fetch.
     * 
    **/
    orderBy?: Enumerable<FeedbackOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Feedbacks.
     * 
    **/
    cursor?: FeedbackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Feedbacks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Feedbacks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Feedbacks.
     * 
    **/
    distinct?: Enumerable<FeedbackScalarFieldEnum>
  }

  /**
   * Feedback findFirst
   */
  export interface FeedbackFindFirstArgs extends FeedbackFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Feedback findFirstOrThrow
   */
  export type FeedbackFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * Filter, which Feedback to fetch.
     * 
    **/
    where?: FeedbackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Feedbacks to fetch.
     * 
    **/
    orderBy?: Enumerable<FeedbackOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Feedbacks.
     * 
    **/
    cursor?: FeedbackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Feedbacks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Feedbacks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Feedbacks.
     * 
    **/
    distinct?: Enumerable<FeedbackScalarFieldEnum>
  }


  /**
   * Feedback findMany
   */
  export type FeedbackFindManyArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * Filter, which Feedbacks to fetch.
     * 
    **/
    where?: FeedbackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Feedbacks to fetch.
     * 
    **/
    orderBy?: Enumerable<FeedbackOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Feedbacks.
     * 
    **/
    cursor?: FeedbackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Feedbacks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Feedbacks.
     * 
    **/
    skip?: number
    distinct?: Enumerable<FeedbackScalarFieldEnum>
  }


  /**
   * Feedback create
   */
  export type FeedbackCreateArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * The data needed to create a Feedback.
     * 
    **/
    data: XOR<FeedbackCreateInput, FeedbackUncheckedCreateInput>
  }


  /**
   * Feedback createMany
   */
  export type FeedbackCreateManyArgs = {
    /**
     * The data used to create many Feedbacks.
     * 
    **/
    data: Enumerable<FeedbackCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Feedback update
   */
  export type FeedbackUpdateArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * The data needed to update a Feedback.
     * 
    **/
    data: XOR<FeedbackUpdateInput, FeedbackUncheckedUpdateInput>
    /**
     * Choose, which Feedback to update.
     * 
    **/
    where: FeedbackWhereUniqueInput
  }


  /**
   * Feedback updateMany
   */
  export type FeedbackUpdateManyArgs = {
    /**
     * The data used to update Feedbacks.
     * 
    **/
    data: XOR<FeedbackUpdateManyMutationInput, FeedbackUncheckedUpdateManyInput>
    /**
     * Filter which Feedbacks to update
     * 
    **/
    where?: FeedbackWhereInput
  }


  /**
   * Feedback upsert
   */
  export type FeedbackUpsertArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * The filter to search for the Feedback to update in case it exists.
     * 
    **/
    where: FeedbackWhereUniqueInput
    /**
     * In case the Feedback found by the `where` argument doesn't exist, create a new Feedback with this data.
     * 
    **/
    create: XOR<FeedbackCreateInput, FeedbackUncheckedCreateInput>
    /**
     * In case the Feedback was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<FeedbackUpdateInput, FeedbackUncheckedUpdateInput>
  }


  /**
   * Feedback delete
   */
  export type FeedbackDeleteArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    /**
     * Filter which Feedback to delete.
     * 
    **/
    where: FeedbackWhereUniqueInput
  }


  /**
   * Feedback deleteMany
   */
  export type FeedbackDeleteManyArgs = {
    /**
     * Filter which Feedbacks to delete
     * 
    **/
    where?: FeedbackWhereInput
  }


  /**
   * Feedback without action
   */
  export type FeedbackArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
  }



  /**
   * Model File
   */


  export type AggregateFile = {
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  export type FileAvgAggregateOutputType = {
    locationLatitude: number | null
    locationLongitude: number | null
  }

  export type FileSumAggregateOutputType = {
    locationLatitude: number | null
    locationLongitude: number | null
  }

  export type FileMinAggregateOutputType = {
    id: string | null
    description: string | null
    locationLabel: string | null
    locationLatitude: number | null
    locationLongitude: number | null
    name: string | null
    type: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    imageId: string | null
    createdBy: string | null
    tenantId: string | null
    projectId: string | null
    dailyLogId: string | null
  }

  export type FileMaxAggregateOutputType = {
    id: string | null
    description: string | null
    locationLabel: string | null
    locationLatitude: number | null
    locationLongitude: number | null
    name: string | null
    type: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    imageId: string | null
    createdBy: string | null
    tenantId: string | null
    projectId: string | null
    dailyLogId: string | null
  }

  export type FileCountAggregateOutputType = {
    id: number
    description: number
    locationLabel: number
    locationLatitude: number
    locationLongitude: number
    name: number
    type: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    imageId: number
    createdBy: number
    tenantId: number
    projectId: number
    dailyLogId: number
    _all: number
  }


  export type FileAvgAggregateInputType = {
    locationLatitude?: true
    locationLongitude?: true
  }

  export type FileSumAggregateInputType = {
    locationLatitude?: true
    locationLongitude?: true
  }

  export type FileMinAggregateInputType = {
    id?: true
    description?: true
    locationLabel?: true
    locationLatitude?: true
    locationLongitude?: true
    name?: true
    type?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    imageId?: true
    createdBy?: true
    tenantId?: true
    projectId?: true
    dailyLogId?: true
  }

  export type FileMaxAggregateInputType = {
    id?: true
    description?: true
    locationLabel?: true
    locationLatitude?: true
    locationLongitude?: true
    name?: true
    type?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    imageId?: true
    createdBy?: true
    tenantId?: true
    projectId?: true
    dailyLogId?: true
  }

  export type FileCountAggregateInputType = {
    id?: true
    description?: true
    locationLabel?: true
    locationLatitude?: true
    locationLongitude?: true
    name?: true
    type?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    imageId?: true
    createdBy?: true
    tenantId?: true
    projectId?: true
    dailyLogId?: true
    _all?: true
  }

  export type FileAggregateArgs = {
    /**
     * Filter which File to aggregate.
     * 
    **/
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     * 
    **/
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Files
    **/
    _count?: true | FileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FileMaxAggregateInputType
  }

  export type GetFileAggregateType<T extends FileAggregateArgs> = {
        [P in keyof T & keyof AggregateFile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFile[P]>
      : GetScalarType<T[P], AggregateFile[P]>
  }




  export type FileGroupByArgs = {
    where?: FileWhereInput
    orderBy?: Enumerable<FileOrderByWithAggregationInput>
    by: Array<FileScalarFieldEnum>
    having?: FileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FileCountAggregateInputType | true
    _avg?: FileAvgAggregateInputType
    _sum?: FileSumAggregateInputType
    _min?: FileMinAggregateInputType
    _max?: FileMaxAggregateInputType
  }


  export type FileGroupByOutputType = {
    id: string
    description: string | null
    locationLabel: string | null
    locationLatitude: number | null
    locationLongitude: number | null
    name: string | null
    type: string | null
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    imageId: string
    createdBy: string | null
    tenantId: string
    projectId: string | null
    dailyLogId: string | null
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  type GetFileGroupByPayload<T extends FileGroupByArgs> = PrismaPromise<
    Array<
      PickArray<FileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FileGroupByOutputType[P]>
            : GetScalarType<T[P], FileGroupByOutputType[P]>
        }
      >
    >


  export type FileSelect = {
    id?: boolean
    description?: boolean
    locationLabel?: boolean
    locationLatitude?: boolean
    locationLongitude?: boolean
    name?: boolean
    type?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    imageId?: boolean
    createdBy?: boolean
    tenantId?: boolean
    projectId?: boolean
    dailyLogId?: boolean
    User?: boolean | UserArgs
    DailyLog?: boolean | DailyLogArgs
    Image?: boolean | ImageArgs
    Project?: boolean | ProjectArgs
    Tenant?: boolean | TenantArgs
    FilePropertyValue?: boolean | File$FilePropertyValueArgs
    _count?: boolean | FileCountOutputTypeArgs
  }


  export type FileInclude = {
    User?: boolean | UserArgs
    DailyLog?: boolean | DailyLogArgs
    Image?: boolean | ImageArgs
    Project?: boolean | ProjectArgs
    Tenant?: boolean | TenantArgs
    FilePropertyValue?: boolean | File$FilePropertyValueArgs
    _count?: boolean | FileCountOutputTypeArgs
  } 

  export type FileGetPayload<S extends boolean | null | undefined | FileArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? File :
    S extends undefined ? never :
    S extends { include: any } & (FileArgs | FileFindManyArgs)
    ? File  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'DailyLog' ? DailyLogGetPayload<S['include'][P]> | null :
        P extends 'Image' ? ImageGetPayload<S['include'][P]> :
        P extends 'Project' ? ProjectGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['include'][P]>>  :
        P extends '_count' ? FileCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (FileArgs | FileFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'DailyLog' ? DailyLogGetPayload<S['select'][P]> | null :
        P extends 'Image' ? ImageGetPayload<S['select'][P]> :
        P extends 'Project' ? ProjectGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['select'][P]>>  :
        P extends '_count' ? FileCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof File ? File[P] : never
  } 
      : File


  type FileCountArgs = Merge<
    Omit<FileFindManyArgs, 'select' | 'include'> & {
      select?: FileCountAggregateInputType | true
    }
  >

  export interface FileDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one File that matches the filter.
     * @param {FileFindUniqueArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FileFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, FileFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'File'> extends True ? Prisma__FileClient<FileGetPayload<T>> : Prisma__FileClient<FileGetPayload<T> | null, null>

    /**
     * Find one File that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FileFindUniqueOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FileFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, FileFindUniqueOrThrowArgs>
    ): Prisma__FileClient<FileGetPayload<T>>

    /**
     * Find the first File that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FileFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, FileFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'File'> extends True ? Prisma__FileClient<FileGetPayload<T>> : Prisma__FileClient<FileGetPayload<T> | null, null>

    /**
     * Find the first File that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FileFindFirstOrThrowArgs>(
      args?: SelectSubset<T, FileFindFirstOrThrowArgs>
    ): Prisma__FileClient<FileGetPayload<T>>

    /**
     * Find zero or more Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Files
     * const files = await prisma.file.findMany()
     * 
     * // Get first 10 Files
     * const files = await prisma.file.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fileWithIdOnly = await prisma.file.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FileFindManyArgs>(
      args?: SelectSubset<T, FileFindManyArgs>
    ): PrismaPromise<Array<FileGetPayload<T>>>

    /**
     * Create a File.
     * @param {FileCreateArgs} args - Arguments to create a File.
     * @example
     * // Create one File
     * const File = await prisma.file.create({
     *   data: {
     *     // ... data to create a File
     *   }
     * })
     * 
    **/
    create<T extends FileCreateArgs>(
      args: SelectSubset<T, FileCreateArgs>
    ): Prisma__FileClient<FileGetPayload<T>>

    /**
     * Create many Files.
     *     @param {FileCreateManyArgs} args - Arguments to create many Files.
     *     @example
     *     // Create many Files
     *     const file = await prisma.file.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FileCreateManyArgs>(
      args?: SelectSubset<T, FileCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a File.
     * @param {FileDeleteArgs} args - Arguments to delete one File.
     * @example
     * // Delete one File
     * const File = await prisma.file.delete({
     *   where: {
     *     // ... filter to delete one File
     *   }
     * })
     * 
    **/
    delete<T extends FileDeleteArgs>(
      args: SelectSubset<T, FileDeleteArgs>
    ): Prisma__FileClient<FileGetPayload<T>>

    /**
     * Update one File.
     * @param {FileUpdateArgs} args - Arguments to update one File.
     * @example
     * // Update one File
     * const file = await prisma.file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FileUpdateArgs>(
      args: SelectSubset<T, FileUpdateArgs>
    ): Prisma__FileClient<FileGetPayload<T>>

    /**
     * Delete zero or more Files.
     * @param {FileDeleteManyArgs} args - Arguments to filter Files to delete.
     * @example
     * // Delete a few Files
     * const { count } = await prisma.file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FileDeleteManyArgs>(
      args?: SelectSubset<T, FileDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Files
     * const file = await prisma.file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FileUpdateManyArgs>(
      args: SelectSubset<T, FileUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one File.
     * @param {FileUpsertArgs} args - Arguments to update or create a File.
     * @example
     * // Update or create a File
     * const file = await prisma.file.upsert({
     *   create: {
     *     // ... data to create a File
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the File we want to update
     *   }
     * })
    **/
    upsert<T extends FileUpsertArgs>(
      args: SelectSubset<T, FileUpsertArgs>
    ): Prisma__FileClient<FileGetPayload<T>>

    /**
     * Count the number of Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileCountArgs} args - Arguments to filter Files to count.
     * @example
     * // Count the number of Files
     * const count = await prisma.file.count({
     *   where: {
     *     // ... the filter for the Files we want to count
     *   }
     * })
    **/
    count<T extends FileCountArgs>(
      args?: Subset<T, FileCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FileAggregateArgs>(args: Subset<T, FileAggregateArgs>): PrismaPromise<GetFileAggregateType<T>>

    /**
     * Group by File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FileGroupByArgs['orderBy'] }
        : { orderBy?: FileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFileGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for File.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__FileClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    DailyLog<T extends DailyLogArgs= {}>(args?: Subset<T, DailyLogArgs>): Prisma__DailyLogClient<DailyLogGetPayload<T> | Null>;

    Image<T extends ImageArgs= {}>(args?: Subset<T, ImageArgs>): Prisma__ImageClient<ImageGetPayload<T> | Null>;

    Project<T extends ProjectArgs= {}>(args?: Subset<T, ProjectArgs>): Prisma__ProjectClient<ProjectGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    FilePropertyValue<T extends File$FilePropertyValueArgs= {}>(args?: Subset<T, File$FilePropertyValueArgs>): PrismaPromise<Array<FilePropertyValueGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * File base type for findUnique actions
   */
  export type FileFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * Filter, which File to fetch.
     * 
    **/
    where: FileWhereUniqueInput
  }

  /**
   * File findUnique
   */
  export interface FileFindUniqueArgs extends FileFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * File findUniqueOrThrow
   */
  export type FileFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * Filter, which File to fetch.
     * 
    **/
    where: FileWhereUniqueInput
  }


  /**
   * File base type for findFirst actions
   */
  export type FileFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * Filter, which File to fetch.
     * 
    **/
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     * 
    **/
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     * 
    **/
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     * 
    **/
    distinct?: Enumerable<FileScalarFieldEnum>
  }

  /**
   * File findFirst
   */
  export interface FileFindFirstArgs extends FileFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * File findFirstOrThrow
   */
  export type FileFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * Filter, which File to fetch.
     * 
    **/
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     * 
    **/
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     * 
    **/
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     * 
    **/
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * File findMany
   */
  export type FileFindManyArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * Filter, which Files to fetch.
     * 
    **/
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     * 
    **/
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Files.
     * 
    **/
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     * 
    **/
    skip?: number
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * File create
   */
  export type FileCreateArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * The data needed to create a File.
     * 
    **/
    data: XOR<FileCreateInput, FileUncheckedCreateInput>
  }


  /**
   * File createMany
   */
  export type FileCreateManyArgs = {
    /**
     * The data used to create many Files.
     * 
    **/
    data: Enumerable<FileCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * File update
   */
  export type FileUpdateArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * The data needed to update a File.
     * 
    **/
    data: XOR<FileUpdateInput, FileUncheckedUpdateInput>
    /**
     * Choose, which File to update.
     * 
    **/
    where: FileWhereUniqueInput
  }


  /**
   * File updateMany
   */
  export type FileUpdateManyArgs = {
    /**
     * The data used to update Files.
     * 
    **/
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     * 
    **/
    where?: FileWhereInput
  }


  /**
   * File upsert
   */
  export type FileUpsertArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * The filter to search for the File to update in case it exists.
     * 
    **/
    where: FileWhereUniqueInput
    /**
     * In case the File found by the `where` argument doesn't exist, create a new File with this data.
     * 
    **/
    create: XOR<FileCreateInput, FileUncheckedCreateInput>
    /**
     * In case the File was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<FileUpdateInput, FileUncheckedUpdateInput>
  }


  /**
   * File delete
   */
  export type FileDeleteArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    /**
     * Filter which File to delete.
     * 
    **/
    where: FileWhereUniqueInput
  }


  /**
   * File deleteMany
   */
  export type FileDeleteManyArgs = {
    /**
     * Filter which Files to delete
     * 
    **/
    where?: FileWhereInput
  }


  /**
   * File.FilePropertyValue
   */
  export type File$FilePropertyValueArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    where?: FilePropertyValueWhereInput
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    cursor?: FilePropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }


  /**
   * File without action
   */
  export type FileArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
  }



  /**
   * Model FileProperty
   */


  export type AggregateFileProperty = {
    _count: FilePropertyCountAggregateOutputType | null
    _avg: FilePropertyAvgAggregateOutputType | null
    _sum: FilePropertySumAggregateOutputType | null
    _min: FilePropertyMinAggregateOutputType | null
    _max: FilePropertyMaxAggregateOutputType | null
  }

  export type FilePropertyAvgAggregateOutputType = {
    order: number | null
  }

  export type FilePropertySumAggregateOutputType = {
    order: number | null
  }

  export type FilePropertyMinAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type FilePropertyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type FilePropertyCountAggregateOutputType = {
    id: number
    name: number
    order: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type FilePropertyAvgAggregateInputType = {
    order?: true
  }

  export type FilePropertySumAggregateInputType = {
    order?: true
  }

  export type FilePropertyMinAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type FilePropertyMaxAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type FilePropertyCountAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type FilePropertyAggregateArgs = {
    /**
     * Filter which FileProperty to aggregate.
     * 
    **/
    where?: FilePropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: FilePropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FileProperties
    **/
    _count?: true | FilePropertyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FilePropertyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FilePropertySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FilePropertyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FilePropertyMaxAggregateInputType
  }

  export type GetFilePropertyAggregateType<T extends FilePropertyAggregateArgs> = {
        [P in keyof T & keyof AggregateFileProperty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFileProperty[P]>
      : GetScalarType<T[P], AggregateFileProperty[P]>
  }




  export type FilePropertyGroupByArgs = {
    where?: FilePropertyWhereInput
    orderBy?: Enumerable<FilePropertyOrderByWithAggregationInput>
    by: Array<FilePropertyScalarFieldEnum>
    having?: FilePropertyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FilePropertyCountAggregateInputType | true
    _avg?: FilePropertyAvgAggregateInputType
    _sum?: FilePropertySumAggregateInputType
    _min?: FilePropertyMinAggregateInputType
    _max?: FilePropertyMaxAggregateInputType
  }


  export type FilePropertyGroupByOutputType = {
    id: string
    name: string
    order: number
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: FilePropertyCountAggregateOutputType | null
    _avg: FilePropertyAvgAggregateOutputType | null
    _sum: FilePropertySumAggregateOutputType | null
    _min: FilePropertyMinAggregateOutputType | null
    _max: FilePropertyMaxAggregateOutputType | null
  }

  type GetFilePropertyGroupByPayload<T extends FilePropertyGroupByArgs> = PrismaPromise<
    Array<
      PickArray<FilePropertyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FilePropertyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FilePropertyGroupByOutputType[P]>
            : GetScalarType<T[P], FilePropertyGroupByOutputType[P]>
        }
      >
    >


  export type FilePropertySelect = {
    id?: boolean
    name?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    FilePropertyValue?: boolean | FileProperty$FilePropertyValueArgs
    _count?: boolean | FilePropertyCountOutputTypeArgs
  }


  export type FilePropertyInclude = {
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    FilePropertyValue?: boolean | FileProperty$FilePropertyValueArgs
    _count?: boolean | FilePropertyCountOutputTypeArgs
  } 

  export type FilePropertyGetPayload<S extends boolean | null | undefined | FilePropertyArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? FileProperty :
    S extends undefined ? never :
    S extends { include: any } & (FilePropertyArgs | FilePropertyFindManyArgs)
    ? FileProperty  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['include'][P]>>  :
        P extends '_count' ? FilePropertyCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (FilePropertyArgs | FilePropertyFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['select'][P]>>  :
        P extends '_count' ? FilePropertyCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof FileProperty ? FileProperty[P] : never
  } 
      : FileProperty


  type FilePropertyCountArgs = Merge<
    Omit<FilePropertyFindManyArgs, 'select' | 'include'> & {
      select?: FilePropertyCountAggregateInputType | true
    }
  >

  export interface FilePropertyDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one FileProperty that matches the filter.
     * @param {FilePropertyFindUniqueArgs} args - Arguments to find a FileProperty
     * @example
     * // Get one FileProperty
     * const fileProperty = await prisma.fileProperty.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FilePropertyFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, FilePropertyFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'FileProperty'> extends True ? Prisma__FilePropertyClient<FilePropertyGetPayload<T>> : Prisma__FilePropertyClient<FilePropertyGetPayload<T> | null, null>

    /**
     * Find one FileProperty that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FilePropertyFindUniqueOrThrowArgs} args - Arguments to find a FileProperty
     * @example
     * // Get one FileProperty
     * const fileProperty = await prisma.fileProperty.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FilePropertyFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, FilePropertyFindUniqueOrThrowArgs>
    ): Prisma__FilePropertyClient<FilePropertyGetPayload<T>>

    /**
     * Find the first FileProperty that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyFindFirstArgs} args - Arguments to find a FileProperty
     * @example
     * // Get one FileProperty
     * const fileProperty = await prisma.fileProperty.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FilePropertyFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, FilePropertyFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'FileProperty'> extends True ? Prisma__FilePropertyClient<FilePropertyGetPayload<T>> : Prisma__FilePropertyClient<FilePropertyGetPayload<T> | null, null>

    /**
     * Find the first FileProperty that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyFindFirstOrThrowArgs} args - Arguments to find a FileProperty
     * @example
     * // Get one FileProperty
     * const fileProperty = await prisma.fileProperty.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FilePropertyFindFirstOrThrowArgs>(
      args?: SelectSubset<T, FilePropertyFindFirstOrThrowArgs>
    ): Prisma__FilePropertyClient<FilePropertyGetPayload<T>>

    /**
     * Find zero or more FileProperties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FileProperties
     * const fileProperties = await prisma.fileProperty.findMany()
     * 
     * // Get first 10 FileProperties
     * const fileProperties = await prisma.fileProperty.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filePropertyWithIdOnly = await prisma.fileProperty.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FilePropertyFindManyArgs>(
      args?: SelectSubset<T, FilePropertyFindManyArgs>
    ): PrismaPromise<Array<FilePropertyGetPayload<T>>>

    /**
     * Create a FileProperty.
     * @param {FilePropertyCreateArgs} args - Arguments to create a FileProperty.
     * @example
     * // Create one FileProperty
     * const FileProperty = await prisma.fileProperty.create({
     *   data: {
     *     // ... data to create a FileProperty
     *   }
     * })
     * 
    **/
    create<T extends FilePropertyCreateArgs>(
      args: SelectSubset<T, FilePropertyCreateArgs>
    ): Prisma__FilePropertyClient<FilePropertyGetPayload<T>>

    /**
     * Create many FileProperties.
     *     @param {FilePropertyCreateManyArgs} args - Arguments to create many FileProperties.
     *     @example
     *     // Create many FileProperties
     *     const fileProperty = await prisma.fileProperty.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FilePropertyCreateManyArgs>(
      args?: SelectSubset<T, FilePropertyCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a FileProperty.
     * @param {FilePropertyDeleteArgs} args - Arguments to delete one FileProperty.
     * @example
     * // Delete one FileProperty
     * const FileProperty = await prisma.fileProperty.delete({
     *   where: {
     *     // ... filter to delete one FileProperty
     *   }
     * })
     * 
    **/
    delete<T extends FilePropertyDeleteArgs>(
      args: SelectSubset<T, FilePropertyDeleteArgs>
    ): Prisma__FilePropertyClient<FilePropertyGetPayload<T>>

    /**
     * Update one FileProperty.
     * @param {FilePropertyUpdateArgs} args - Arguments to update one FileProperty.
     * @example
     * // Update one FileProperty
     * const fileProperty = await prisma.fileProperty.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FilePropertyUpdateArgs>(
      args: SelectSubset<T, FilePropertyUpdateArgs>
    ): Prisma__FilePropertyClient<FilePropertyGetPayload<T>>

    /**
     * Delete zero or more FileProperties.
     * @param {FilePropertyDeleteManyArgs} args - Arguments to filter FileProperties to delete.
     * @example
     * // Delete a few FileProperties
     * const { count } = await prisma.fileProperty.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FilePropertyDeleteManyArgs>(
      args?: SelectSubset<T, FilePropertyDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more FileProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FileProperties
     * const fileProperty = await prisma.fileProperty.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FilePropertyUpdateManyArgs>(
      args: SelectSubset<T, FilePropertyUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one FileProperty.
     * @param {FilePropertyUpsertArgs} args - Arguments to update or create a FileProperty.
     * @example
     * // Update or create a FileProperty
     * const fileProperty = await prisma.fileProperty.upsert({
     *   create: {
     *     // ... data to create a FileProperty
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FileProperty we want to update
     *   }
     * })
    **/
    upsert<T extends FilePropertyUpsertArgs>(
      args: SelectSubset<T, FilePropertyUpsertArgs>
    ): Prisma__FilePropertyClient<FilePropertyGetPayload<T>>

    /**
     * Count the number of FileProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyCountArgs} args - Arguments to filter FileProperties to count.
     * @example
     * // Count the number of FileProperties
     * const count = await prisma.fileProperty.count({
     *   where: {
     *     // ... the filter for the FileProperties we want to count
     *   }
     * })
    **/
    count<T extends FilePropertyCountArgs>(
      args?: Subset<T, FilePropertyCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FilePropertyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FileProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FilePropertyAggregateArgs>(args: Subset<T, FilePropertyAggregateArgs>): PrismaPromise<GetFilePropertyAggregateType<T>>

    /**
     * Group by FileProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FilePropertyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FilePropertyGroupByArgs['orderBy'] }
        : { orderBy?: FilePropertyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FilePropertyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilePropertyGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for FileProperty.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__FilePropertyClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    FilePropertyValue<T extends FileProperty$FilePropertyValueArgs= {}>(args?: Subset<T, FileProperty$FilePropertyValueArgs>): PrismaPromise<Array<FilePropertyValueGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * FileProperty base type for findUnique actions
   */
  export type FilePropertyFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * Filter, which FileProperty to fetch.
     * 
    **/
    where: FilePropertyWhereUniqueInput
  }

  /**
   * FileProperty findUnique
   */
  export interface FilePropertyFindUniqueArgs extends FilePropertyFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * FileProperty findUniqueOrThrow
   */
  export type FilePropertyFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * Filter, which FileProperty to fetch.
     * 
    **/
    where: FilePropertyWhereUniqueInput
  }


  /**
   * FileProperty base type for findFirst actions
   */
  export type FilePropertyFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * Filter, which FileProperty to fetch.
     * 
    **/
    where?: FilePropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FileProperties.
     * 
    **/
    cursor?: FilePropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FileProperties.
     * 
    **/
    distinct?: Enumerable<FilePropertyScalarFieldEnum>
  }

  /**
   * FileProperty findFirst
   */
  export interface FilePropertyFindFirstArgs extends FilePropertyFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * FileProperty findFirstOrThrow
   */
  export type FilePropertyFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * Filter, which FileProperty to fetch.
     * 
    **/
    where?: FilePropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FileProperties.
     * 
    **/
    cursor?: FilePropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FileProperties.
     * 
    **/
    distinct?: Enumerable<FilePropertyScalarFieldEnum>
  }


  /**
   * FileProperty findMany
   */
  export type FilePropertyFindManyArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * Filter, which FileProperties to fetch.
     * 
    **/
    where?: FilePropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FileProperties.
     * 
    **/
    cursor?: FilePropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileProperties.
     * 
    **/
    skip?: number
    distinct?: Enumerable<FilePropertyScalarFieldEnum>
  }


  /**
   * FileProperty create
   */
  export type FilePropertyCreateArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * The data needed to create a FileProperty.
     * 
    **/
    data: XOR<FilePropertyCreateInput, FilePropertyUncheckedCreateInput>
  }


  /**
   * FileProperty createMany
   */
  export type FilePropertyCreateManyArgs = {
    /**
     * The data used to create many FileProperties.
     * 
    **/
    data: Enumerable<FilePropertyCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * FileProperty update
   */
  export type FilePropertyUpdateArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * The data needed to update a FileProperty.
     * 
    **/
    data: XOR<FilePropertyUpdateInput, FilePropertyUncheckedUpdateInput>
    /**
     * Choose, which FileProperty to update.
     * 
    **/
    where: FilePropertyWhereUniqueInput
  }


  /**
   * FileProperty updateMany
   */
  export type FilePropertyUpdateManyArgs = {
    /**
     * The data used to update FileProperties.
     * 
    **/
    data: XOR<FilePropertyUpdateManyMutationInput, FilePropertyUncheckedUpdateManyInput>
    /**
     * Filter which FileProperties to update
     * 
    **/
    where?: FilePropertyWhereInput
  }


  /**
   * FileProperty upsert
   */
  export type FilePropertyUpsertArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * The filter to search for the FileProperty to update in case it exists.
     * 
    **/
    where: FilePropertyWhereUniqueInput
    /**
     * In case the FileProperty found by the `where` argument doesn't exist, create a new FileProperty with this data.
     * 
    **/
    create: XOR<FilePropertyCreateInput, FilePropertyUncheckedCreateInput>
    /**
     * In case the FileProperty was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<FilePropertyUpdateInput, FilePropertyUncheckedUpdateInput>
  }


  /**
   * FileProperty delete
   */
  export type FilePropertyDeleteArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    /**
     * Filter which FileProperty to delete.
     * 
    **/
    where: FilePropertyWhereUniqueInput
  }


  /**
   * FileProperty deleteMany
   */
  export type FilePropertyDeleteManyArgs = {
    /**
     * Filter which FileProperties to delete
     * 
    **/
    where?: FilePropertyWhereInput
  }


  /**
   * FileProperty.FilePropertyValue
   */
  export type FileProperty$FilePropertyValueArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    where?: FilePropertyValueWhereInput
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    cursor?: FilePropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }


  /**
   * FileProperty without action
   */
  export type FilePropertyArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
  }



  /**
   * Model FilePropertyValue
   */


  export type AggregateFilePropertyValue = {
    _count: FilePropertyValueCountAggregateOutputType | null
    _min: FilePropertyValueMinAggregateOutputType | null
    _max: FilePropertyValueMaxAggregateOutputType | null
  }

  export type FilePropertyValueMinAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    fileId: string | null
    propertyId: string | null
    tenantId: string | null
  }

  export type FilePropertyValueMaxAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    fileId: string | null
    propertyId: string | null
    tenantId: string | null
  }

  export type FilePropertyValueCountAggregateOutputType = {
    id: number
    value: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    fileId: number
    propertyId: number
    tenantId: number
    _all: number
  }


  export type FilePropertyValueMinAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    fileId?: true
    propertyId?: true
    tenantId?: true
  }

  export type FilePropertyValueMaxAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    fileId?: true
    propertyId?: true
    tenantId?: true
  }

  export type FilePropertyValueCountAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    fileId?: true
    propertyId?: true
    tenantId?: true
    _all?: true
  }

  export type FilePropertyValueAggregateArgs = {
    /**
     * Filter which FilePropertyValue to aggregate.
     * 
    **/
    where?: FilePropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FilePropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: FilePropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FilePropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FilePropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FilePropertyValues
    **/
    _count?: true | FilePropertyValueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FilePropertyValueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FilePropertyValueMaxAggregateInputType
  }

  export type GetFilePropertyValueAggregateType<T extends FilePropertyValueAggregateArgs> = {
        [P in keyof T & keyof AggregateFilePropertyValue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFilePropertyValue[P]>
      : GetScalarType<T[P], AggregateFilePropertyValue[P]>
  }




  export type FilePropertyValueGroupByArgs = {
    where?: FilePropertyValueWhereInput
    orderBy?: Enumerable<FilePropertyValueOrderByWithAggregationInput>
    by: Array<FilePropertyValueScalarFieldEnum>
    having?: FilePropertyValueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FilePropertyValueCountAggregateInputType | true
    _min?: FilePropertyValueMinAggregateInputType
    _max?: FilePropertyValueMaxAggregateInputType
  }


  export type FilePropertyValueGroupByOutputType = {
    id: string
    value: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    fileId: string
    propertyId: string
    tenantId: string
    _count: FilePropertyValueCountAggregateOutputType | null
    _min: FilePropertyValueMinAggregateOutputType | null
    _max: FilePropertyValueMaxAggregateOutputType | null
  }

  type GetFilePropertyValueGroupByPayload<T extends FilePropertyValueGroupByArgs> = PrismaPromise<
    Array<
      PickArray<FilePropertyValueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FilePropertyValueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FilePropertyValueGroupByOutputType[P]>
            : GetScalarType<T[P], FilePropertyValueGroupByOutputType[P]>
        }
      >
    >


  export type FilePropertyValueSelect = {
    id?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    fileId?: boolean
    propertyId?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    File?: boolean | FileArgs
    FileProperty?: boolean | FilePropertyArgs
    Tenant?: boolean | TenantArgs
  }


  export type FilePropertyValueInclude = {
    User?: boolean | UserArgs
    File?: boolean | FileArgs
    FileProperty?: boolean | FilePropertyArgs
    Tenant?: boolean | TenantArgs
  } 

  export type FilePropertyValueGetPayload<S extends boolean | null | undefined | FilePropertyValueArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? FilePropertyValue :
    S extends undefined ? never :
    S extends { include: any } & (FilePropertyValueArgs | FilePropertyValueFindManyArgs)
    ? FilePropertyValue  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'File' ? FileGetPayload<S['include'][P]> :
        P extends 'FileProperty' ? FilePropertyGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (FilePropertyValueArgs | FilePropertyValueFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'File' ? FileGetPayload<S['select'][P]> :
        P extends 'FileProperty' ? FilePropertyGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof FilePropertyValue ? FilePropertyValue[P] : never
  } 
      : FilePropertyValue


  type FilePropertyValueCountArgs = Merge<
    Omit<FilePropertyValueFindManyArgs, 'select' | 'include'> & {
      select?: FilePropertyValueCountAggregateInputType | true
    }
  >

  export interface FilePropertyValueDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one FilePropertyValue that matches the filter.
     * @param {FilePropertyValueFindUniqueArgs} args - Arguments to find a FilePropertyValue
     * @example
     * // Get one FilePropertyValue
     * const filePropertyValue = await prisma.filePropertyValue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FilePropertyValueFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, FilePropertyValueFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'FilePropertyValue'> extends True ? Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>> : Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T> | null, null>

    /**
     * Find one FilePropertyValue that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {FilePropertyValueFindUniqueOrThrowArgs} args - Arguments to find a FilePropertyValue
     * @example
     * // Get one FilePropertyValue
     * const filePropertyValue = await prisma.filePropertyValue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FilePropertyValueFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, FilePropertyValueFindUniqueOrThrowArgs>
    ): Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>>

    /**
     * Find the first FilePropertyValue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueFindFirstArgs} args - Arguments to find a FilePropertyValue
     * @example
     * // Get one FilePropertyValue
     * const filePropertyValue = await prisma.filePropertyValue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FilePropertyValueFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, FilePropertyValueFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'FilePropertyValue'> extends True ? Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>> : Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T> | null, null>

    /**
     * Find the first FilePropertyValue that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueFindFirstOrThrowArgs} args - Arguments to find a FilePropertyValue
     * @example
     * // Get one FilePropertyValue
     * const filePropertyValue = await prisma.filePropertyValue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FilePropertyValueFindFirstOrThrowArgs>(
      args?: SelectSubset<T, FilePropertyValueFindFirstOrThrowArgs>
    ): Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>>

    /**
     * Find zero or more FilePropertyValues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FilePropertyValues
     * const filePropertyValues = await prisma.filePropertyValue.findMany()
     * 
     * // Get first 10 FilePropertyValues
     * const filePropertyValues = await prisma.filePropertyValue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filePropertyValueWithIdOnly = await prisma.filePropertyValue.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FilePropertyValueFindManyArgs>(
      args?: SelectSubset<T, FilePropertyValueFindManyArgs>
    ): PrismaPromise<Array<FilePropertyValueGetPayload<T>>>

    /**
     * Create a FilePropertyValue.
     * @param {FilePropertyValueCreateArgs} args - Arguments to create a FilePropertyValue.
     * @example
     * // Create one FilePropertyValue
     * const FilePropertyValue = await prisma.filePropertyValue.create({
     *   data: {
     *     // ... data to create a FilePropertyValue
     *   }
     * })
     * 
    **/
    create<T extends FilePropertyValueCreateArgs>(
      args: SelectSubset<T, FilePropertyValueCreateArgs>
    ): Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>>

    /**
     * Create many FilePropertyValues.
     *     @param {FilePropertyValueCreateManyArgs} args - Arguments to create many FilePropertyValues.
     *     @example
     *     // Create many FilePropertyValues
     *     const filePropertyValue = await prisma.filePropertyValue.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends FilePropertyValueCreateManyArgs>(
      args?: SelectSubset<T, FilePropertyValueCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a FilePropertyValue.
     * @param {FilePropertyValueDeleteArgs} args - Arguments to delete one FilePropertyValue.
     * @example
     * // Delete one FilePropertyValue
     * const FilePropertyValue = await prisma.filePropertyValue.delete({
     *   where: {
     *     // ... filter to delete one FilePropertyValue
     *   }
     * })
     * 
    **/
    delete<T extends FilePropertyValueDeleteArgs>(
      args: SelectSubset<T, FilePropertyValueDeleteArgs>
    ): Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>>

    /**
     * Update one FilePropertyValue.
     * @param {FilePropertyValueUpdateArgs} args - Arguments to update one FilePropertyValue.
     * @example
     * // Update one FilePropertyValue
     * const filePropertyValue = await prisma.filePropertyValue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FilePropertyValueUpdateArgs>(
      args: SelectSubset<T, FilePropertyValueUpdateArgs>
    ): Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>>

    /**
     * Delete zero or more FilePropertyValues.
     * @param {FilePropertyValueDeleteManyArgs} args - Arguments to filter FilePropertyValues to delete.
     * @example
     * // Delete a few FilePropertyValues
     * const { count } = await prisma.filePropertyValue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FilePropertyValueDeleteManyArgs>(
      args?: SelectSubset<T, FilePropertyValueDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more FilePropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FilePropertyValues
     * const filePropertyValue = await prisma.filePropertyValue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FilePropertyValueUpdateManyArgs>(
      args: SelectSubset<T, FilePropertyValueUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one FilePropertyValue.
     * @param {FilePropertyValueUpsertArgs} args - Arguments to update or create a FilePropertyValue.
     * @example
     * // Update or create a FilePropertyValue
     * const filePropertyValue = await prisma.filePropertyValue.upsert({
     *   create: {
     *     // ... data to create a FilePropertyValue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FilePropertyValue we want to update
     *   }
     * })
    **/
    upsert<T extends FilePropertyValueUpsertArgs>(
      args: SelectSubset<T, FilePropertyValueUpsertArgs>
    ): Prisma__FilePropertyValueClient<FilePropertyValueGetPayload<T>>

    /**
     * Count the number of FilePropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueCountArgs} args - Arguments to filter FilePropertyValues to count.
     * @example
     * // Count the number of FilePropertyValues
     * const count = await prisma.filePropertyValue.count({
     *   where: {
     *     // ... the filter for the FilePropertyValues we want to count
     *   }
     * })
    **/
    count<T extends FilePropertyValueCountArgs>(
      args?: Subset<T, FilePropertyValueCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FilePropertyValueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FilePropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FilePropertyValueAggregateArgs>(args: Subset<T, FilePropertyValueAggregateArgs>): PrismaPromise<GetFilePropertyValueAggregateType<T>>

    /**
     * Group by FilePropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilePropertyValueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FilePropertyValueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FilePropertyValueGroupByArgs['orderBy'] }
        : { orderBy?: FilePropertyValueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FilePropertyValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilePropertyValueGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for FilePropertyValue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__FilePropertyValueClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    File<T extends FileArgs= {}>(args?: Subset<T, FileArgs>): Prisma__FileClient<FileGetPayload<T> | Null>;

    FileProperty<T extends FilePropertyArgs= {}>(args?: Subset<T, FilePropertyArgs>): Prisma__FilePropertyClient<FilePropertyGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * FilePropertyValue base type for findUnique actions
   */
  export type FilePropertyValueFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * Filter, which FilePropertyValue to fetch.
     * 
    **/
    where: FilePropertyValueWhereUniqueInput
  }

  /**
   * FilePropertyValue findUnique
   */
  export interface FilePropertyValueFindUniqueArgs extends FilePropertyValueFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * FilePropertyValue findUniqueOrThrow
   */
  export type FilePropertyValueFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * Filter, which FilePropertyValue to fetch.
     * 
    **/
    where: FilePropertyValueWhereUniqueInput
  }


  /**
   * FilePropertyValue base type for findFirst actions
   */
  export type FilePropertyValueFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * Filter, which FilePropertyValue to fetch.
     * 
    **/
    where?: FilePropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FilePropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FilePropertyValues.
     * 
    **/
    cursor?: FilePropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FilePropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FilePropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FilePropertyValues.
     * 
    **/
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }

  /**
   * FilePropertyValue findFirst
   */
  export interface FilePropertyValueFindFirstArgs extends FilePropertyValueFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * FilePropertyValue findFirstOrThrow
   */
  export type FilePropertyValueFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * Filter, which FilePropertyValue to fetch.
     * 
    **/
    where?: FilePropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FilePropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FilePropertyValues.
     * 
    **/
    cursor?: FilePropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FilePropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FilePropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FilePropertyValues.
     * 
    **/
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }


  /**
   * FilePropertyValue findMany
   */
  export type FilePropertyValueFindManyArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * Filter, which FilePropertyValues to fetch.
     * 
    **/
    where?: FilePropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FilePropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FilePropertyValues.
     * 
    **/
    cursor?: FilePropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FilePropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FilePropertyValues.
     * 
    **/
    skip?: number
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }


  /**
   * FilePropertyValue create
   */
  export type FilePropertyValueCreateArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * The data needed to create a FilePropertyValue.
     * 
    **/
    data: XOR<FilePropertyValueCreateInput, FilePropertyValueUncheckedCreateInput>
  }


  /**
   * FilePropertyValue createMany
   */
  export type FilePropertyValueCreateManyArgs = {
    /**
     * The data used to create many FilePropertyValues.
     * 
    **/
    data: Enumerable<FilePropertyValueCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * FilePropertyValue update
   */
  export type FilePropertyValueUpdateArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * The data needed to update a FilePropertyValue.
     * 
    **/
    data: XOR<FilePropertyValueUpdateInput, FilePropertyValueUncheckedUpdateInput>
    /**
     * Choose, which FilePropertyValue to update.
     * 
    **/
    where: FilePropertyValueWhereUniqueInput
  }


  /**
   * FilePropertyValue updateMany
   */
  export type FilePropertyValueUpdateManyArgs = {
    /**
     * The data used to update FilePropertyValues.
     * 
    **/
    data: XOR<FilePropertyValueUpdateManyMutationInput, FilePropertyValueUncheckedUpdateManyInput>
    /**
     * Filter which FilePropertyValues to update
     * 
    **/
    where?: FilePropertyValueWhereInput
  }


  /**
   * FilePropertyValue upsert
   */
  export type FilePropertyValueUpsertArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * The filter to search for the FilePropertyValue to update in case it exists.
     * 
    **/
    where: FilePropertyValueWhereUniqueInput
    /**
     * In case the FilePropertyValue found by the `where` argument doesn't exist, create a new FilePropertyValue with this data.
     * 
    **/
    create: XOR<FilePropertyValueCreateInput, FilePropertyValueUncheckedCreateInput>
    /**
     * In case the FilePropertyValue was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<FilePropertyValueUpdateInput, FilePropertyValueUncheckedUpdateInput>
  }


  /**
   * FilePropertyValue delete
   */
  export type FilePropertyValueDeleteArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    /**
     * Filter which FilePropertyValue to delete.
     * 
    **/
    where: FilePropertyValueWhereUniqueInput
  }


  /**
   * FilePropertyValue deleteMany
   */
  export type FilePropertyValueDeleteManyArgs = {
    /**
     * Filter which FilePropertyValues to delete
     * 
    **/
    where?: FilePropertyValueWhereInput
  }


  /**
   * FilePropertyValue without action
   */
  export type FilePropertyValueArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
  }



  /**
   * Model Image
   */


  export type AggregateImage = {
    _count: ImageCountAggregateOutputType | null
    _min: ImageMinAggregateOutputType | null
    _max: ImageMaxAggregateOutputType | null
  }

  export type ImageMinAggregateOutputType = {
    id: string | null
    bucketId: string | null
    blurhash: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type ImageMaxAggregateOutputType = {
    id: string | null
    bucketId: string | null
    blurhash: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type ImageCountAggregateOutputType = {
    id: number
    bucketId: number
    blurhash: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type ImageMinAggregateInputType = {
    id?: true
    bucketId?: true
    blurhash?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type ImageMaxAggregateInputType = {
    id?: true
    bucketId?: true
    blurhash?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type ImageCountAggregateInputType = {
    id?: true
    bucketId?: true
    blurhash?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type ImageAggregateArgs = {
    /**
     * Filter which Image to aggregate.
     * 
    **/
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     * 
    **/
    orderBy?: Enumerable<ImageOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Images
    **/
    _count?: true | ImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImageMaxAggregateInputType
  }

  export type GetImageAggregateType<T extends ImageAggregateArgs> = {
        [P in keyof T & keyof AggregateImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImage[P]>
      : GetScalarType<T[P], AggregateImage[P]>
  }




  export type ImageGroupByArgs = {
    where?: ImageWhereInput
    orderBy?: Enumerable<ImageOrderByWithAggregationInput>
    by: Array<ImageScalarFieldEnum>
    having?: ImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImageCountAggregateInputType | true
    _min?: ImageMinAggregateInputType
    _max?: ImageMaxAggregateInputType
  }


  export type ImageGroupByOutputType = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: ImageCountAggregateOutputType | null
    _min: ImageMinAggregateOutputType | null
    _max: ImageMaxAggregateOutputType | null
  }

  type GetImageGroupByPayload<T extends ImageGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImageGroupByOutputType[P]>
            : GetScalarType<T[P], ImageGroupByOutputType[P]>
        }
      >
    >


  export type ImageSelect = {
    id?: boolean
    bucketId?: boolean
    blurhash?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    File?: boolean | Image$FileArgs
    User_Image_createdByToUser?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    User_User_imageIdToImage?: boolean | Image$User_User_imageIdToImageArgs
    _count?: boolean | ImageCountOutputTypeArgs
  }


  export type ImageInclude = {
    File?: boolean | Image$FileArgs
    User_Image_createdByToUser?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    User_User_imageIdToImage?: boolean | Image$User_User_imageIdToImageArgs
    _count?: boolean | ImageCountOutputTypeArgs
  } 

  export type ImageGetPayload<S extends boolean | null | undefined | ImageArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Image :
    S extends undefined ? never :
    S extends { include: any } & (ImageArgs | ImageFindManyArgs)
    ? Image  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'File' ? Array < FileGetPayload<S['include'][P]>>  :
        P extends 'User_Image_createdByToUser' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'User_User_imageIdToImage' ? Array < UserGetPayload<S['include'][P]>>  :
        P extends '_count' ? ImageCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ImageArgs | ImageFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'File' ? Array < FileGetPayload<S['select'][P]>>  :
        P extends 'User_Image_createdByToUser' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'User_User_imageIdToImage' ? Array < UserGetPayload<S['select'][P]>>  :
        P extends '_count' ? ImageCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Image ? Image[P] : never
  } 
      : Image


  type ImageCountArgs = Merge<
    Omit<ImageFindManyArgs, 'select' | 'include'> & {
      select?: ImageCountAggregateInputType | true
    }
  >

  export interface ImageDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Image that matches the filter.
     * @param {ImageFindUniqueArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ImageFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ImageFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Image'> extends True ? Prisma__ImageClient<ImageGetPayload<T>> : Prisma__ImageClient<ImageGetPayload<T> | null, null>

    /**
     * Find one Image that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ImageFindUniqueOrThrowArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ImageFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ImageFindUniqueOrThrowArgs>
    ): Prisma__ImageClient<ImageGetPayload<T>>

    /**
     * Find the first Image that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindFirstArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ImageFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ImageFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Image'> extends True ? Prisma__ImageClient<ImageGetPayload<T>> : Prisma__ImageClient<ImageGetPayload<T> | null, null>

    /**
     * Find the first Image that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindFirstOrThrowArgs} args - Arguments to find a Image
     * @example
     * // Get one Image
     * const image = await prisma.image.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ImageFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ImageFindFirstOrThrowArgs>
    ): Prisma__ImageClient<ImageGetPayload<T>>

    /**
     * Find zero or more Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Images
     * const images = await prisma.image.findMany()
     * 
     * // Get first 10 Images
     * const images = await prisma.image.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imageWithIdOnly = await prisma.image.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ImageFindManyArgs>(
      args?: SelectSubset<T, ImageFindManyArgs>
    ): PrismaPromise<Array<ImageGetPayload<T>>>

    /**
     * Create a Image.
     * @param {ImageCreateArgs} args - Arguments to create a Image.
     * @example
     * // Create one Image
     * const Image = await prisma.image.create({
     *   data: {
     *     // ... data to create a Image
     *   }
     * })
     * 
    **/
    create<T extends ImageCreateArgs>(
      args: SelectSubset<T, ImageCreateArgs>
    ): Prisma__ImageClient<ImageGetPayload<T>>

    /**
     * Create many Images.
     *     @param {ImageCreateManyArgs} args - Arguments to create many Images.
     *     @example
     *     // Create many Images
     *     const image = await prisma.image.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ImageCreateManyArgs>(
      args?: SelectSubset<T, ImageCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Image.
     * @param {ImageDeleteArgs} args - Arguments to delete one Image.
     * @example
     * // Delete one Image
     * const Image = await prisma.image.delete({
     *   where: {
     *     // ... filter to delete one Image
     *   }
     * })
     * 
    **/
    delete<T extends ImageDeleteArgs>(
      args: SelectSubset<T, ImageDeleteArgs>
    ): Prisma__ImageClient<ImageGetPayload<T>>

    /**
     * Update one Image.
     * @param {ImageUpdateArgs} args - Arguments to update one Image.
     * @example
     * // Update one Image
     * const image = await prisma.image.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ImageUpdateArgs>(
      args: SelectSubset<T, ImageUpdateArgs>
    ): Prisma__ImageClient<ImageGetPayload<T>>

    /**
     * Delete zero or more Images.
     * @param {ImageDeleteManyArgs} args - Arguments to filter Images to delete.
     * @example
     * // Delete a few Images
     * const { count } = await prisma.image.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ImageDeleteManyArgs>(
      args?: SelectSubset<T, ImageDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Images
     * const image = await prisma.image.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ImageUpdateManyArgs>(
      args: SelectSubset<T, ImageUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Image.
     * @param {ImageUpsertArgs} args - Arguments to update or create a Image.
     * @example
     * // Update or create a Image
     * const image = await prisma.image.upsert({
     *   create: {
     *     // ... data to create a Image
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Image we want to update
     *   }
     * })
    **/
    upsert<T extends ImageUpsertArgs>(
      args: SelectSubset<T, ImageUpsertArgs>
    ): Prisma__ImageClient<ImageGetPayload<T>>

    /**
     * Count the number of Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageCountArgs} args - Arguments to filter Images to count.
     * @example
     * // Count the number of Images
     * const count = await prisma.image.count({
     *   where: {
     *     // ... the filter for the Images we want to count
     *   }
     * })
    **/
    count<T extends ImageCountArgs>(
      args?: Subset<T, ImageCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Image.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImageAggregateArgs>(args: Subset<T, ImageAggregateArgs>): PrismaPromise<GetImageAggregateType<T>>

    /**
     * Group by Image.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ImageGroupByArgs['orderBy'] }
        : { orderBy?: ImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImageGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Image.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ImageClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    File<T extends Image$FileArgs= {}>(args?: Subset<T, Image$FileArgs>): PrismaPromise<Array<FileGetPayload<T>>| Null>;

    User_Image_createdByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    User_User_imageIdToImage<T extends Image$User_User_imageIdToImageArgs= {}>(args?: Subset<T, Image$User_User_imageIdToImageArgs>): PrismaPromise<Array<UserGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Image base type for findUnique actions
   */
  export type ImageFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * Filter, which Image to fetch.
     * 
    **/
    where: ImageWhereUniqueInput
  }

  /**
   * Image findUnique
   */
  export interface ImageFindUniqueArgs extends ImageFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Image findUniqueOrThrow
   */
  export type ImageFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * Filter, which Image to fetch.
     * 
    **/
    where: ImageWhereUniqueInput
  }


  /**
   * Image base type for findFirst actions
   */
  export type ImageFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * Filter, which Image to fetch.
     * 
    **/
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     * 
    **/
    orderBy?: Enumerable<ImageOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Images.
     * 
    **/
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Images.
     * 
    **/
    distinct?: Enumerable<ImageScalarFieldEnum>
  }

  /**
   * Image findFirst
   */
  export interface ImageFindFirstArgs extends ImageFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Image findFirstOrThrow
   */
  export type ImageFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * Filter, which Image to fetch.
     * 
    **/
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     * 
    **/
    orderBy?: Enumerable<ImageOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Images.
     * 
    **/
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Images.
     * 
    **/
    distinct?: Enumerable<ImageScalarFieldEnum>
  }


  /**
   * Image findMany
   */
  export type ImageFindManyArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * Filter, which Images to fetch.
     * 
    **/
    where?: ImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Images to fetch.
     * 
    **/
    orderBy?: Enumerable<ImageOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Images.
     * 
    **/
    cursor?: ImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Images from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Images.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ImageScalarFieldEnum>
  }


  /**
   * Image create
   */
  export type ImageCreateArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * The data needed to create a Image.
     * 
    **/
    data: XOR<ImageCreateInput, ImageUncheckedCreateInput>
  }


  /**
   * Image createMany
   */
  export type ImageCreateManyArgs = {
    /**
     * The data used to create many Images.
     * 
    **/
    data: Enumerable<ImageCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Image update
   */
  export type ImageUpdateArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * The data needed to update a Image.
     * 
    **/
    data: XOR<ImageUpdateInput, ImageUncheckedUpdateInput>
    /**
     * Choose, which Image to update.
     * 
    **/
    where: ImageWhereUniqueInput
  }


  /**
   * Image updateMany
   */
  export type ImageUpdateManyArgs = {
    /**
     * The data used to update Images.
     * 
    **/
    data: XOR<ImageUpdateManyMutationInput, ImageUncheckedUpdateManyInput>
    /**
     * Filter which Images to update
     * 
    **/
    where?: ImageWhereInput
  }


  /**
   * Image upsert
   */
  export type ImageUpsertArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * The filter to search for the Image to update in case it exists.
     * 
    **/
    where: ImageWhereUniqueInput
    /**
     * In case the Image found by the `where` argument doesn't exist, create a new Image with this data.
     * 
    **/
    create: XOR<ImageCreateInput, ImageUncheckedCreateInput>
    /**
     * In case the Image was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ImageUpdateInput, ImageUncheckedUpdateInput>
  }


  /**
   * Image delete
   */
  export type ImageDeleteArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    /**
     * Filter which Image to delete.
     * 
    **/
    where: ImageWhereUniqueInput
  }


  /**
   * Image deleteMany
   */
  export type ImageDeleteManyArgs = {
    /**
     * Filter which Images to delete
     * 
    **/
    where?: ImageWhereInput
  }


  /**
   * Image.File
   */
  export type Image$FileArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    where?: FileWhereInput
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * Image.User_User_imageIdToImage
   */
  export type Image$User_User_imageIdToImageArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    where?: UserWhereInput
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * Image without action
   */
  export type ImageArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
  }



  /**
   * Model LocationEntry
   */


  export type AggregateLocationEntry = {
    _count: LocationEntryCountAggregateOutputType | null
    _avg: LocationEntryAvgAggregateOutputType | null
    _sum: LocationEntrySumAggregateOutputType | null
    _min: LocationEntryMinAggregateOutputType | null
    _max: LocationEntryMaxAggregateOutputType | null
  }

  export type LocationEntryAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type LocationEntrySumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type LocationEntryMinAggregateOutputType = {
    id: string | null
    latitude: number | null
    longitude: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    dailyLogId: string | null
    tenantId: string | null
  }

  export type LocationEntryMaxAggregateOutputType = {
    id: string | null
    latitude: number | null
    longitude: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    dailyLogId: string | null
    tenantId: string | null
  }

  export type LocationEntryCountAggregateOutputType = {
    id: number
    latitude: number
    longitude: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    dailyLogId: number
    tenantId: number
    _all: number
  }


  export type LocationEntryAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type LocationEntrySumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type LocationEntryMinAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    dailyLogId?: true
    tenantId?: true
  }

  export type LocationEntryMaxAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    dailyLogId?: true
    tenantId?: true
  }

  export type LocationEntryCountAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    dailyLogId?: true
    tenantId?: true
    _all?: true
  }

  export type LocationEntryAggregateArgs = {
    /**
     * Filter which LocationEntry to aggregate.
     * 
    **/
    where?: LocationEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: LocationEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LocationEntries
    **/
    _count?: true | LocationEntryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocationEntryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocationEntrySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationEntryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationEntryMaxAggregateInputType
  }

  export type GetLocationEntryAggregateType<T extends LocationEntryAggregateArgs> = {
        [P in keyof T & keyof AggregateLocationEntry]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocationEntry[P]>
      : GetScalarType<T[P], AggregateLocationEntry[P]>
  }




  export type LocationEntryGroupByArgs = {
    where?: LocationEntryWhereInput
    orderBy?: Enumerable<LocationEntryOrderByWithAggregationInput>
    by: Array<LocationEntryScalarFieldEnum>
    having?: LocationEntryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationEntryCountAggregateInputType | true
    _avg?: LocationEntryAvgAggregateInputType
    _sum?: LocationEntrySumAggregateInputType
    _min?: LocationEntryMinAggregateInputType
    _max?: LocationEntryMaxAggregateInputType
  }


  export type LocationEntryGroupByOutputType = {
    id: string
    latitude: number | null
    longitude: number | null
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    dailyLogId: string
    tenantId: string
    _count: LocationEntryCountAggregateOutputType | null
    _avg: LocationEntryAvgAggregateOutputType | null
    _sum: LocationEntrySumAggregateOutputType | null
    _min: LocationEntryMinAggregateOutputType | null
    _max: LocationEntryMaxAggregateOutputType | null
  }

  type GetLocationEntryGroupByPayload<T extends LocationEntryGroupByArgs> = PrismaPromise<
    Array<
      PickArray<LocationEntryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationEntryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationEntryGroupByOutputType[P]>
            : GetScalarType<T[P], LocationEntryGroupByOutputType[P]>
        }
      >
    >


  export type LocationEntrySelect = {
    id?: boolean
    latitude?: boolean
    longitude?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    dailyLogId?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    DailyLog?: boolean | DailyLogArgs
    Tenant?: boolean | TenantArgs
  }


  export type LocationEntryInclude = {
    User?: boolean | UserArgs
    DailyLog?: boolean | DailyLogArgs
    Tenant?: boolean | TenantArgs
  } 

  export type LocationEntryGetPayload<S extends boolean | null | undefined | LocationEntryArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? LocationEntry :
    S extends undefined ? never :
    S extends { include: any } & (LocationEntryArgs | LocationEntryFindManyArgs)
    ? LocationEntry  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'DailyLog' ? DailyLogGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (LocationEntryArgs | LocationEntryFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'DailyLog' ? DailyLogGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof LocationEntry ? LocationEntry[P] : never
  } 
      : LocationEntry


  type LocationEntryCountArgs = Merge<
    Omit<LocationEntryFindManyArgs, 'select' | 'include'> & {
      select?: LocationEntryCountAggregateInputType | true
    }
  >

  export interface LocationEntryDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one LocationEntry that matches the filter.
     * @param {LocationEntryFindUniqueArgs} args - Arguments to find a LocationEntry
     * @example
     * // Get one LocationEntry
     * const locationEntry = await prisma.locationEntry.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends LocationEntryFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, LocationEntryFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'LocationEntry'> extends True ? Prisma__LocationEntryClient<LocationEntryGetPayload<T>> : Prisma__LocationEntryClient<LocationEntryGetPayload<T> | null, null>

    /**
     * Find one LocationEntry that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {LocationEntryFindUniqueOrThrowArgs} args - Arguments to find a LocationEntry
     * @example
     * // Get one LocationEntry
     * const locationEntry = await prisma.locationEntry.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends LocationEntryFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, LocationEntryFindUniqueOrThrowArgs>
    ): Prisma__LocationEntryClient<LocationEntryGetPayload<T>>

    /**
     * Find the first LocationEntry that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryFindFirstArgs} args - Arguments to find a LocationEntry
     * @example
     * // Get one LocationEntry
     * const locationEntry = await prisma.locationEntry.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends LocationEntryFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, LocationEntryFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'LocationEntry'> extends True ? Prisma__LocationEntryClient<LocationEntryGetPayload<T>> : Prisma__LocationEntryClient<LocationEntryGetPayload<T> | null, null>

    /**
     * Find the first LocationEntry that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryFindFirstOrThrowArgs} args - Arguments to find a LocationEntry
     * @example
     * // Get one LocationEntry
     * const locationEntry = await prisma.locationEntry.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends LocationEntryFindFirstOrThrowArgs>(
      args?: SelectSubset<T, LocationEntryFindFirstOrThrowArgs>
    ): Prisma__LocationEntryClient<LocationEntryGetPayload<T>>

    /**
     * Find zero or more LocationEntries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LocationEntries
     * const locationEntries = await prisma.locationEntry.findMany()
     * 
     * // Get first 10 LocationEntries
     * const locationEntries = await prisma.locationEntry.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationEntryWithIdOnly = await prisma.locationEntry.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends LocationEntryFindManyArgs>(
      args?: SelectSubset<T, LocationEntryFindManyArgs>
    ): PrismaPromise<Array<LocationEntryGetPayload<T>>>

    /**
     * Create a LocationEntry.
     * @param {LocationEntryCreateArgs} args - Arguments to create a LocationEntry.
     * @example
     * // Create one LocationEntry
     * const LocationEntry = await prisma.locationEntry.create({
     *   data: {
     *     // ... data to create a LocationEntry
     *   }
     * })
     * 
    **/
    create<T extends LocationEntryCreateArgs>(
      args: SelectSubset<T, LocationEntryCreateArgs>
    ): Prisma__LocationEntryClient<LocationEntryGetPayload<T>>

    /**
     * Create many LocationEntries.
     *     @param {LocationEntryCreateManyArgs} args - Arguments to create many LocationEntries.
     *     @example
     *     // Create many LocationEntries
     *     const locationEntry = await prisma.locationEntry.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends LocationEntryCreateManyArgs>(
      args?: SelectSubset<T, LocationEntryCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a LocationEntry.
     * @param {LocationEntryDeleteArgs} args - Arguments to delete one LocationEntry.
     * @example
     * // Delete one LocationEntry
     * const LocationEntry = await prisma.locationEntry.delete({
     *   where: {
     *     // ... filter to delete one LocationEntry
     *   }
     * })
     * 
    **/
    delete<T extends LocationEntryDeleteArgs>(
      args: SelectSubset<T, LocationEntryDeleteArgs>
    ): Prisma__LocationEntryClient<LocationEntryGetPayload<T>>

    /**
     * Update one LocationEntry.
     * @param {LocationEntryUpdateArgs} args - Arguments to update one LocationEntry.
     * @example
     * // Update one LocationEntry
     * const locationEntry = await prisma.locationEntry.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends LocationEntryUpdateArgs>(
      args: SelectSubset<T, LocationEntryUpdateArgs>
    ): Prisma__LocationEntryClient<LocationEntryGetPayload<T>>

    /**
     * Delete zero or more LocationEntries.
     * @param {LocationEntryDeleteManyArgs} args - Arguments to filter LocationEntries to delete.
     * @example
     * // Delete a few LocationEntries
     * const { count } = await prisma.locationEntry.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends LocationEntryDeleteManyArgs>(
      args?: SelectSubset<T, LocationEntryDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more LocationEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LocationEntries
     * const locationEntry = await prisma.locationEntry.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends LocationEntryUpdateManyArgs>(
      args: SelectSubset<T, LocationEntryUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one LocationEntry.
     * @param {LocationEntryUpsertArgs} args - Arguments to update or create a LocationEntry.
     * @example
     * // Update or create a LocationEntry
     * const locationEntry = await prisma.locationEntry.upsert({
     *   create: {
     *     // ... data to create a LocationEntry
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LocationEntry we want to update
     *   }
     * })
    **/
    upsert<T extends LocationEntryUpsertArgs>(
      args: SelectSubset<T, LocationEntryUpsertArgs>
    ): Prisma__LocationEntryClient<LocationEntryGetPayload<T>>

    /**
     * Count the number of LocationEntries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryCountArgs} args - Arguments to filter LocationEntries to count.
     * @example
     * // Count the number of LocationEntries
     * const count = await prisma.locationEntry.count({
     *   where: {
     *     // ... the filter for the LocationEntries we want to count
     *   }
     * })
    **/
    count<T extends LocationEntryCountArgs>(
      args?: Subset<T, LocationEntryCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationEntryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LocationEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationEntryAggregateArgs>(args: Subset<T, LocationEntryAggregateArgs>): PrismaPromise<GetLocationEntryAggregateType<T>>

    /**
     * Group by LocationEntry.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationEntryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LocationEntryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LocationEntryGroupByArgs['orderBy'] }
        : { orderBy?: LocationEntryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LocationEntryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationEntryGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for LocationEntry.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__LocationEntryClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    DailyLog<T extends DailyLogArgs= {}>(args?: Subset<T, DailyLogArgs>): Prisma__DailyLogClient<DailyLogGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * LocationEntry base type for findUnique actions
   */
  export type LocationEntryFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * Filter, which LocationEntry to fetch.
     * 
    **/
    where: LocationEntryWhereUniqueInput
  }

  /**
   * LocationEntry findUnique
   */
  export interface LocationEntryFindUniqueArgs extends LocationEntryFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * LocationEntry findUniqueOrThrow
   */
  export type LocationEntryFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * Filter, which LocationEntry to fetch.
     * 
    **/
    where: LocationEntryWhereUniqueInput
  }


  /**
   * LocationEntry base type for findFirst actions
   */
  export type LocationEntryFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * Filter, which LocationEntry to fetch.
     * 
    **/
    where?: LocationEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocationEntries.
     * 
    **/
    cursor?: LocationEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocationEntries.
     * 
    **/
    distinct?: Enumerable<LocationEntryScalarFieldEnum>
  }

  /**
   * LocationEntry findFirst
   */
  export interface LocationEntryFindFirstArgs extends LocationEntryFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * LocationEntry findFirstOrThrow
   */
  export type LocationEntryFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * Filter, which LocationEntry to fetch.
     * 
    **/
    where?: LocationEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LocationEntries.
     * 
    **/
    cursor?: LocationEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationEntries.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LocationEntries.
     * 
    **/
    distinct?: Enumerable<LocationEntryScalarFieldEnum>
  }


  /**
   * LocationEntry findMany
   */
  export type LocationEntryFindManyArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * Filter, which LocationEntries to fetch.
     * 
    **/
    where?: LocationEntryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LocationEntries to fetch.
     * 
    **/
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LocationEntries.
     * 
    **/
    cursor?: LocationEntryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LocationEntries from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LocationEntries.
     * 
    **/
    skip?: number
    distinct?: Enumerable<LocationEntryScalarFieldEnum>
  }


  /**
   * LocationEntry create
   */
  export type LocationEntryCreateArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * The data needed to create a LocationEntry.
     * 
    **/
    data: XOR<LocationEntryCreateInput, LocationEntryUncheckedCreateInput>
  }


  /**
   * LocationEntry createMany
   */
  export type LocationEntryCreateManyArgs = {
    /**
     * The data used to create many LocationEntries.
     * 
    **/
    data: Enumerable<LocationEntryCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * LocationEntry update
   */
  export type LocationEntryUpdateArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * The data needed to update a LocationEntry.
     * 
    **/
    data: XOR<LocationEntryUpdateInput, LocationEntryUncheckedUpdateInput>
    /**
     * Choose, which LocationEntry to update.
     * 
    **/
    where: LocationEntryWhereUniqueInput
  }


  /**
   * LocationEntry updateMany
   */
  export type LocationEntryUpdateManyArgs = {
    /**
     * The data used to update LocationEntries.
     * 
    **/
    data: XOR<LocationEntryUpdateManyMutationInput, LocationEntryUncheckedUpdateManyInput>
    /**
     * Filter which LocationEntries to update
     * 
    **/
    where?: LocationEntryWhereInput
  }


  /**
   * LocationEntry upsert
   */
  export type LocationEntryUpsertArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * The filter to search for the LocationEntry to update in case it exists.
     * 
    **/
    where: LocationEntryWhereUniqueInput
    /**
     * In case the LocationEntry found by the `where` argument doesn't exist, create a new LocationEntry with this data.
     * 
    **/
    create: XOR<LocationEntryCreateInput, LocationEntryUncheckedCreateInput>
    /**
     * In case the LocationEntry was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<LocationEntryUpdateInput, LocationEntryUncheckedUpdateInput>
  }


  /**
   * LocationEntry delete
   */
  export type LocationEntryDeleteArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    /**
     * Filter which LocationEntry to delete.
     * 
    **/
    where: LocationEntryWhereUniqueInput
  }


  /**
   * LocationEntry deleteMany
   */
  export type LocationEntryDeleteManyArgs = {
    /**
     * Filter which LocationEntries to delete
     * 
    **/
    where?: LocationEntryWhereInput
  }


  /**
   * LocationEntry without action
   */
  export type LocationEntryArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
  }



  /**
   * Model Project
   */


  export type AggregateProject = {
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  export type ProjectAvgAggregateOutputType = {
    progress: number | null
    locationLatitude: number | null
    locationLongitude: number | null
  }

  export type ProjectSumAggregateOutputType = {
    progress: number | null
    locationLatitude: number | null
    locationLongitude: number | null
  }

  export type ProjectMinAggregateOutputType = {
    id: string | null
    name: string | null
    progress: number | null
    dueDate: Date | null
    description: string | null
    locationLabel: string | null
    locationLatitude: number | null
    locationLongitude: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type ProjectMaxAggregateOutputType = {
    id: string | null
    name: string | null
    progress: number | null
    dueDate: Date | null
    description: string | null
    locationLabel: string | null
    locationLatitude: number | null
    locationLongitude: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type ProjectCountAggregateOutputType = {
    id: number
    name: number
    progress: number
    dueDate: number
    description: number
    locationLabel: number
    locationLatitude: number
    locationLongitude: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type ProjectAvgAggregateInputType = {
    progress?: true
    locationLatitude?: true
    locationLongitude?: true
  }

  export type ProjectSumAggregateInputType = {
    progress?: true
    locationLatitude?: true
    locationLongitude?: true
  }

  export type ProjectMinAggregateInputType = {
    id?: true
    name?: true
    progress?: true
    dueDate?: true
    description?: true
    locationLabel?: true
    locationLatitude?: true
    locationLongitude?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type ProjectMaxAggregateInputType = {
    id?: true
    name?: true
    progress?: true
    dueDate?: true
    description?: true
    locationLabel?: true
    locationLatitude?: true
    locationLongitude?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type ProjectCountAggregateInputType = {
    id?: true
    name?: true
    progress?: true
    dueDate?: true
    description?: true
    locationLabel?: true
    locationLatitude?: true
    locationLongitude?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type ProjectAggregateArgs = {
    /**
     * Filter which Project to aggregate.
     * 
    **/
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectMaxAggregateInputType
  }

  export type GetProjectAggregateType<T extends ProjectAggregateArgs> = {
        [P in keyof T & keyof AggregateProject]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject[P]>
      : GetScalarType<T[P], AggregateProject[P]>
  }




  export type ProjectGroupByArgs = {
    where?: ProjectWhereInput
    orderBy?: Enumerable<ProjectOrderByWithAggregationInput>
    by: Array<ProjectScalarFieldEnum>
    having?: ProjectScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectCountAggregateInputType | true
    _avg?: ProjectAvgAggregateInputType
    _sum?: ProjectSumAggregateInputType
    _min?: ProjectMinAggregateInputType
    _max?: ProjectMaxAggregateInputType
  }


  export type ProjectGroupByOutputType = {
    id: string
    name: string | null
    progress: number | null
    dueDate: Date | null
    description: string | null
    locationLabel: string | null
    locationLatitude: number | null
    locationLongitude: number | null
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: ProjectCountAggregateOutputType | null
    _avg: ProjectAvgAggregateOutputType | null
    _sum: ProjectSumAggregateOutputType | null
    _min: ProjectMinAggregateOutputType | null
    _max: ProjectMaxAggregateOutputType | null
  }

  type GetProjectGroupByPayload<T extends ProjectGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ProjectGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectGroupByOutputType[P]>
        }
      >
    >


  export type ProjectSelect = {
    id?: boolean
    name?: boolean
    progress?: boolean
    dueDate?: boolean
    description?: boolean
    locationLabel?: boolean
    locationLatitude?: boolean
    locationLongitude?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    File?: boolean | Project$FileArgs
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    ProjectPropertyValue?: boolean | Project$ProjectPropertyValueArgs
    Task?: boolean | Project$TaskArgs
    _count?: boolean | ProjectCountOutputTypeArgs
  }


  export type ProjectInclude = {
    File?: boolean | Project$FileArgs
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    ProjectPropertyValue?: boolean | Project$ProjectPropertyValueArgs
    Task?: boolean | Project$TaskArgs
    _count?: boolean | ProjectCountOutputTypeArgs
  } 

  export type ProjectGetPayload<S extends boolean | null | undefined | ProjectArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Project :
    S extends undefined ? never :
    S extends { include: any } & (ProjectArgs | ProjectFindManyArgs)
    ? Project  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'File' ? Array < FileGetPayload<S['include'][P]>>  :
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Task' ? Array < TaskGetPayload<S['include'][P]>>  :
        P extends '_count' ? ProjectCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ProjectArgs | ProjectFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'File' ? Array < FileGetPayload<S['select'][P]>>  :
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Task' ? Array < TaskGetPayload<S['select'][P]>>  :
        P extends '_count' ? ProjectCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Project ? Project[P] : never
  } 
      : Project


  type ProjectCountArgs = Merge<
    Omit<ProjectFindManyArgs, 'select' | 'include'> & {
      select?: ProjectCountAggregateInputType | true
    }
  >

  export interface ProjectDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Project that matches the filter.
     * @param {ProjectFindUniqueArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProjectFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProjectFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Project'> extends True ? Prisma__ProjectClient<ProjectGetPayload<T>> : Prisma__ProjectClient<ProjectGetPayload<T> | null, null>

    /**
     * Find one Project that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ProjectFindUniqueOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ProjectFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ProjectFindUniqueOrThrowArgs>
    ): Prisma__ProjectClient<ProjectGetPayload<T>>

    /**
     * Find the first Project that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProjectFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProjectFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Project'> extends True ? Prisma__ProjectClient<ProjectGetPayload<T>> : Prisma__ProjectClient<ProjectGetPayload<T> | null, null>

    /**
     * Find the first Project that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindFirstOrThrowArgs} args - Arguments to find a Project
     * @example
     * // Get one Project
     * const project = await prisma.project.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ProjectFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ProjectFindFirstOrThrowArgs>
    ): Prisma__ProjectClient<ProjectGetPayload<T>>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.project.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.project.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectWithIdOnly = await prisma.project.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProjectFindManyArgs>(
      args?: SelectSubset<T, ProjectFindManyArgs>
    ): PrismaPromise<Array<ProjectGetPayload<T>>>

    /**
     * Create a Project.
     * @param {ProjectCreateArgs} args - Arguments to create a Project.
     * @example
     * // Create one Project
     * const Project = await prisma.project.create({
     *   data: {
     *     // ... data to create a Project
     *   }
     * })
     * 
    **/
    create<T extends ProjectCreateArgs>(
      args: SelectSubset<T, ProjectCreateArgs>
    ): Prisma__ProjectClient<ProjectGetPayload<T>>

    /**
     * Create many Projects.
     *     @param {ProjectCreateManyArgs} args - Arguments to create many Projects.
     *     @example
     *     // Create many Projects
     *     const project = await prisma.project.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProjectCreateManyArgs>(
      args?: SelectSubset<T, ProjectCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Project.
     * @param {ProjectDeleteArgs} args - Arguments to delete one Project.
     * @example
     * // Delete one Project
     * const Project = await prisma.project.delete({
     *   where: {
     *     // ... filter to delete one Project
     *   }
     * })
     * 
    **/
    delete<T extends ProjectDeleteArgs>(
      args: SelectSubset<T, ProjectDeleteArgs>
    ): Prisma__ProjectClient<ProjectGetPayload<T>>

    /**
     * Update one Project.
     * @param {ProjectUpdateArgs} args - Arguments to update one Project.
     * @example
     * // Update one Project
     * const project = await prisma.project.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProjectUpdateArgs>(
      args: SelectSubset<T, ProjectUpdateArgs>
    ): Prisma__ProjectClient<ProjectGetPayload<T>>

    /**
     * Delete zero or more Projects.
     * @param {ProjectDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.project.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProjectDeleteManyArgs>(
      args?: SelectSubset<T, ProjectDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const project = await prisma.project.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProjectUpdateManyArgs>(
      args: SelectSubset<T, ProjectUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Project.
     * @param {ProjectUpsertArgs} args - Arguments to update or create a Project.
     * @example
     * // Update or create a Project
     * const project = await prisma.project.upsert({
     *   create: {
     *     // ... data to create a Project
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project we want to update
     *   }
     * })
    **/
    upsert<T extends ProjectUpsertArgs>(
      args: SelectSubset<T, ProjectUpsertArgs>
    ): Prisma__ProjectClient<ProjectGetPayload<T>>

    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.project.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectCountArgs>(
      args?: Subset<T, ProjectCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectAggregateArgs>(args: Subset<T, ProjectAggregateArgs>): PrismaPromise<GetProjectAggregateType<T>>

    /**
     * Group by Project.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectGroupByArgs['orderBy'] }
        : { orderBy?: ProjectGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Project.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProjectClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    File<T extends Project$FileArgs= {}>(args?: Subset<T, Project$FileArgs>): PrismaPromise<Array<FileGetPayload<T>>| Null>;

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    ProjectPropertyValue<T extends Project$ProjectPropertyValueArgs= {}>(args?: Subset<T, Project$ProjectPropertyValueArgs>): PrismaPromise<Array<ProjectPropertyValueGetPayload<T>>| Null>;

    Task<T extends Project$TaskArgs= {}>(args?: Subset<T, Project$TaskArgs>): PrismaPromise<Array<TaskGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Project base type for findUnique actions
   */
  export type ProjectFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * Filter, which Project to fetch.
     * 
    **/
    where: ProjectWhereUniqueInput
  }

  /**
   * Project findUnique
   */
  export interface ProjectFindUniqueArgs extends ProjectFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project findUniqueOrThrow
   */
  export type ProjectFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * Filter, which Project to fetch.
     * 
    **/
    where: ProjectWhereUniqueInput
  }


  /**
   * Project base type for findFirst actions
   */
  export type ProjectFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * Filter, which Project to fetch.
     * 
    **/
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     * 
    **/
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     * 
    **/
    distinct?: Enumerable<ProjectScalarFieldEnum>
  }

  /**
   * Project findFirst
   */
  export interface ProjectFindFirstArgs extends ProjectFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project findFirstOrThrow
   */
  export type ProjectFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * Filter, which Project to fetch.
     * 
    **/
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     * 
    **/
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     * 
    **/
    distinct?: Enumerable<ProjectScalarFieldEnum>
  }


  /**
   * Project findMany
   */
  export type ProjectFindManyArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * Filter, which Projects to fetch.
     * 
    **/
    where?: ProjectWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     * 
    **/
    cursor?: ProjectWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProjectScalarFieldEnum>
  }


  /**
   * Project create
   */
  export type ProjectCreateArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * The data needed to create a Project.
     * 
    **/
    data: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
  }


  /**
   * Project createMany
   */
  export type ProjectCreateManyArgs = {
    /**
     * The data used to create many Projects.
     * 
    **/
    data: Enumerable<ProjectCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Project update
   */
  export type ProjectUpdateArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * The data needed to update a Project.
     * 
    **/
    data: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
    /**
     * Choose, which Project to update.
     * 
    **/
    where: ProjectWhereUniqueInput
  }


  /**
   * Project updateMany
   */
  export type ProjectUpdateManyArgs = {
    /**
     * The data used to update Projects.
     * 
    **/
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     * 
    **/
    where?: ProjectWhereInput
  }


  /**
   * Project upsert
   */
  export type ProjectUpsertArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * The filter to search for the Project to update in case it exists.
     * 
    **/
    where: ProjectWhereUniqueInput
    /**
     * In case the Project found by the `where` argument doesn't exist, create a new Project with this data.
     * 
    **/
    create: XOR<ProjectCreateInput, ProjectUncheckedCreateInput>
    /**
     * In case the Project was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProjectUpdateInput, ProjectUncheckedUpdateInput>
  }


  /**
   * Project delete
   */
  export type ProjectDeleteArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    /**
     * Filter which Project to delete.
     * 
    **/
    where: ProjectWhereUniqueInput
  }


  /**
   * Project deleteMany
   */
  export type ProjectDeleteManyArgs = {
    /**
     * Filter which Projects to delete
     * 
    **/
    where?: ProjectWhereInput
  }


  /**
   * Project.File
   */
  export type Project$FileArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    where?: FileWhereInput
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * Project.ProjectPropertyValue
   */
  export type Project$ProjectPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    where?: ProjectPropertyValueWhereInput
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    cursor?: ProjectPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }


  /**
   * Project.Task
   */
  export type Project$TaskArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    where?: TaskWhereInput
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * Project without action
   */
  export type ProjectArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
  }



  /**
   * Model ProjectProperty
   */


  export type AggregateProjectProperty = {
    _count: ProjectPropertyCountAggregateOutputType | null
    _avg: ProjectPropertyAvgAggregateOutputType | null
    _sum: ProjectPropertySumAggregateOutputType | null
    _min: ProjectPropertyMinAggregateOutputType | null
    _max: ProjectPropertyMaxAggregateOutputType | null
  }

  export type ProjectPropertyAvgAggregateOutputType = {
    order: number | null
  }

  export type ProjectPropertySumAggregateOutputType = {
    order: number | null
  }

  export type ProjectPropertyMinAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type ProjectPropertyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type ProjectPropertyCountAggregateOutputType = {
    id: number
    name: number
    order: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type ProjectPropertyAvgAggregateInputType = {
    order?: true
  }

  export type ProjectPropertySumAggregateInputType = {
    order?: true
  }

  export type ProjectPropertyMinAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type ProjectPropertyMaxAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type ProjectPropertyCountAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type ProjectPropertyAggregateArgs = {
    /**
     * Filter which ProjectProperty to aggregate.
     * 
    **/
    where?: ProjectPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProjectPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectProperties
    **/
    _count?: true | ProjectPropertyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProjectPropertyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProjectPropertySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectPropertyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectPropertyMaxAggregateInputType
  }

  export type GetProjectPropertyAggregateType<T extends ProjectPropertyAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectProperty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectProperty[P]>
      : GetScalarType<T[P], AggregateProjectProperty[P]>
  }




  export type ProjectPropertyGroupByArgs = {
    where?: ProjectPropertyWhereInput
    orderBy?: Enumerable<ProjectPropertyOrderByWithAggregationInput>
    by: Array<ProjectPropertyScalarFieldEnum>
    having?: ProjectPropertyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectPropertyCountAggregateInputType | true
    _avg?: ProjectPropertyAvgAggregateInputType
    _sum?: ProjectPropertySumAggregateInputType
    _min?: ProjectPropertyMinAggregateInputType
    _max?: ProjectPropertyMaxAggregateInputType
  }


  export type ProjectPropertyGroupByOutputType = {
    id: string
    name: string
    order: number
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: ProjectPropertyCountAggregateOutputType | null
    _avg: ProjectPropertyAvgAggregateOutputType | null
    _sum: ProjectPropertySumAggregateOutputType | null
    _min: ProjectPropertyMinAggregateOutputType | null
    _max: ProjectPropertyMaxAggregateOutputType | null
  }

  type GetProjectPropertyGroupByPayload<T extends ProjectPropertyGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ProjectPropertyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectPropertyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectPropertyGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectPropertyGroupByOutputType[P]>
        }
      >
    >


  export type ProjectPropertySelect = {
    id?: boolean
    name?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    ProjectPropertyValue?: boolean | ProjectProperty$ProjectPropertyValueArgs
    _count?: boolean | ProjectPropertyCountOutputTypeArgs
  }


  export type ProjectPropertyInclude = {
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    ProjectPropertyValue?: boolean | ProjectProperty$ProjectPropertyValueArgs
    _count?: boolean | ProjectPropertyCountOutputTypeArgs
  } 

  export type ProjectPropertyGetPayload<S extends boolean | null | undefined | ProjectPropertyArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ProjectProperty :
    S extends undefined ? never :
    S extends { include: any } & (ProjectPropertyArgs | ProjectPropertyFindManyArgs)
    ? ProjectProperty  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['include'][P]>>  :
        P extends '_count' ? ProjectPropertyCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ProjectPropertyArgs | ProjectPropertyFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['select'][P]>>  :
        P extends '_count' ? ProjectPropertyCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof ProjectProperty ? ProjectProperty[P] : never
  } 
      : ProjectProperty


  type ProjectPropertyCountArgs = Merge<
    Omit<ProjectPropertyFindManyArgs, 'select' | 'include'> & {
      select?: ProjectPropertyCountAggregateInputType | true
    }
  >

  export interface ProjectPropertyDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ProjectProperty that matches the filter.
     * @param {ProjectPropertyFindUniqueArgs} args - Arguments to find a ProjectProperty
     * @example
     * // Get one ProjectProperty
     * const projectProperty = await prisma.projectProperty.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProjectPropertyFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProjectPropertyFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProjectProperty'> extends True ? Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>> : Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T> | null, null>

    /**
     * Find one ProjectProperty that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ProjectPropertyFindUniqueOrThrowArgs} args - Arguments to find a ProjectProperty
     * @example
     * // Get one ProjectProperty
     * const projectProperty = await prisma.projectProperty.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ProjectPropertyFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ProjectPropertyFindUniqueOrThrowArgs>
    ): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>>

    /**
     * Find the first ProjectProperty that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyFindFirstArgs} args - Arguments to find a ProjectProperty
     * @example
     * // Get one ProjectProperty
     * const projectProperty = await prisma.projectProperty.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProjectPropertyFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProjectPropertyFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProjectProperty'> extends True ? Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>> : Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T> | null, null>

    /**
     * Find the first ProjectProperty that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyFindFirstOrThrowArgs} args - Arguments to find a ProjectProperty
     * @example
     * // Get one ProjectProperty
     * const projectProperty = await prisma.projectProperty.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ProjectPropertyFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ProjectPropertyFindFirstOrThrowArgs>
    ): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>>

    /**
     * Find zero or more ProjectProperties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectProperties
     * const projectProperties = await prisma.projectProperty.findMany()
     * 
     * // Get first 10 ProjectProperties
     * const projectProperties = await prisma.projectProperty.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectPropertyWithIdOnly = await prisma.projectProperty.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProjectPropertyFindManyArgs>(
      args?: SelectSubset<T, ProjectPropertyFindManyArgs>
    ): PrismaPromise<Array<ProjectPropertyGetPayload<T>>>

    /**
     * Create a ProjectProperty.
     * @param {ProjectPropertyCreateArgs} args - Arguments to create a ProjectProperty.
     * @example
     * // Create one ProjectProperty
     * const ProjectProperty = await prisma.projectProperty.create({
     *   data: {
     *     // ... data to create a ProjectProperty
     *   }
     * })
     * 
    **/
    create<T extends ProjectPropertyCreateArgs>(
      args: SelectSubset<T, ProjectPropertyCreateArgs>
    ): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>>

    /**
     * Create many ProjectProperties.
     *     @param {ProjectPropertyCreateManyArgs} args - Arguments to create many ProjectProperties.
     *     @example
     *     // Create many ProjectProperties
     *     const projectProperty = await prisma.projectProperty.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProjectPropertyCreateManyArgs>(
      args?: SelectSubset<T, ProjectPropertyCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ProjectProperty.
     * @param {ProjectPropertyDeleteArgs} args - Arguments to delete one ProjectProperty.
     * @example
     * // Delete one ProjectProperty
     * const ProjectProperty = await prisma.projectProperty.delete({
     *   where: {
     *     // ... filter to delete one ProjectProperty
     *   }
     * })
     * 
    **/
    delete<T extends ProjectPropertyDeleteArgs>(
      args: SelectSubset<T, ProjectPropertyDeleteArgs>
    ): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>>

    /**
     * Update one ProjectProperty.
     * @param {ProjectPropertyUpdateArgs} args - Arguments to update one ProjectProperty.
     * @example
     * // Update one ProjectProperty
     * const projectProperty = await prisma.projectProperty.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProjectPropertyUpdateArgs>(
      args: SelectSubset<T, ProjectPropertyUpdateArgs>
    ): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>>

    /**
     * Delete zero or more ProjectProperties.
     * @param {ProjectPropertyDeleteManyArgs} args - Arguments to filter ProjectProperties to delete.
     * @example
     * // Delete a few ProjectProperties
     * const { count } = await prisma.projectProperty.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProjectPropertyDeleteManyArgs>(
      args?: SelectSubset<T, ProjectPropertyDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectProperties
     * const projectProperty = await prisma.projectProperty.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProjectPropertyUpdateManyArgs>(
      args: SelectSubset<T, ProjectPropertyUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectProperty.
     * @param {ProjectPropertyUpsertArgs} args - Arguments to update or create a ProjectProperty.
     * @example
     * // Update or create a ProjectProperty
     * const projectProperty = await prisma.projectProperty.upsert({
     *   create: {
     *     // ... data to create a ProjectProperty
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectProperty we want to update
     *   }
     * })
    **/
    upsert<T extends ProjectPropertyUpsertArgs>(
      args: SelectSubset<T, ProjectPropertyUpsertArgs>
    ): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T>>

    /**
     * Count the number of ProjectProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyCountArgs} args - Arguments to filter ProjectProperties to count.
     * @example
     * // Count the number of ProjectProperties
     * const count = await prisma.projectProperty.count({
     *   where: {
     *     // ... the filter for the ProjectProperties we want to count
     *   }
     * })
    **/
    count<T extends ProjectPropertyCountArgs>(
      args?: Subset<T, ProjectPropertyCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectPropertyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectPropertyAggregateArgs>(args: Subset<T, ProjectPropertyAggregateArgs>): PrismaPromise<GetProjectPropertyAggregateType<T>>

    /**
     * Group by ProjectProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectPropertyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectPropertyGroupByArgs['orderBy'] }
        : { orderBy?: ProjectPropertyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectPropertyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectPropertyGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectProperty.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProjectPropertyClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    ProjectPropertyValue<T extends ProjectProperty$ProjectPropertyValueArgs= {}>(args?: Subset<T, ProjectProperty$ProjectPropertyValueArgs>): PrismaPromise<Array<ProjectPropertyValueGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ProjectProperty base type for findUnique actions
   */
  export type ProjectPropertyFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * Filter, which ProjectProperty to fetch.
     * 
    **/
    where: ProjectPropertyWhereUniqueInput
  }

  /**
   * ProjectProperty findUnique
   */
  export interface ProjectPropertyFindUniqueArgs extends ProjectPropertyFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ProjectProperty findUniqueOrThrow
   */
  export type ProjectPropertyFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * Filter, which ProjectProperty to fetch.
     * 
    **/
    where: ProjectPropertyWhereUniqueInput
  }


  /**
   * ProjectProperty base type for findFirst actions
   */
  export type ProjectPropertyFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * Filter, which ProjectProperty to fetch.
     * 
    **/
    where?: ProjectPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectProperties.
     * 
    **/
    cursor?: ProjectPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectProperties.
     * 
    **/
    distinct?: Enumerable<ProjectPropertyScalarFieldEnum>
  }

  /**
   * ProjectProperty findFirst
   */
  export interface ProjectPropertyFindFirstArgs extends ProjectPropertyFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ProjectProperty findFirstOrThrow
   */
  export type ProjectPropertyFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * Filter, which ProjectProperty to fetch.
     * 
    **/
    where?: ProjectPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectProperties.
     * 
    **/
    cursor?: ProjectPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectProperties.
     * 
    **/
    distinct?: Enumerable<ProjectPropertyScalarFieldEnum>
  }


  /**
   * ProjectProperty findMany
   */
  export type ProjectPropertyFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * Filter, which ProjectProperties to fetch.
     * 
    **/
    where?: ProjectPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectProperties.
     * 
    **/
    cursor?: ProjectPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectProperties.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProjectPropertyScalarFieldEnum>
  }


  /**
   * ProjectProperty create
   */
  export type ProjectPropertyCreateArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * The data needed to create a ProjectProperty.
     * 
    **/
    data: XOR<ProjectPropertyCreateInput, ProjectPropertyUncheckedCreateInput>
  }


  /**
   * ProjectProperty createMany
   */
  export type ProjectPropertyCreateManyArgs = {
    /**
     * The data used to create many ProjectProperties.
     * 
    **/
    data: Enumerable<ProjectPropertyCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ProjectProperty update
   */
  export type ProjectPropertyUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * The data needed to update a ProjectProperty.
     * 
    **/
    data: XOR<ProjectPropertyUpdateInput, ProjectPropertyUncheckedUpdateInput>
    /**
     * Choose, which ProjectProperty to update.
     * 
    **/
    where: ProjectPropertyWhereUniqueInput
  }


  /**
   * ProjectProperty updateMany
   */
  export type ProjectPropertyUpdateManyArgs = {
    /**
     * The data used to update ProjectProperties.
     * 
    **/
    data: XOR<ProjectPropertyUpdateManyMutationInput, ProjectPropertyUncheckedUpdateManyInput>
    /**
     * Filter which ProjectProperties to update
     * 
    **/
    where?: ProjectPropertyWhereInput
  }


  /**
   * ProjectProperty upsert
   */
  export type ProjectPropertyUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * The filter to search for the ProjectProperty to update in case it exists.
     * 
    **/
    where: ProjectPropertyWhereUniqueInput
    /**
     * In case the ProjectProperty found by the `where` argument doesn't exist, create a new ProjectProperty with this data.
     * 
    **/
    create: XOR<ProjectPropertyCreateInput, ProjectPropertyUncheckedCreateInput>
    /**
     * In case the ProjectProperty was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProjectPropertyUpdateInput, ProjectPropertyUncheckedUpdateInput>
  }


  /**
   * ProjectProperty delete
   */
  export type ProjectPropertyDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    /**
     * Filter which ProjectProperty to delete.
     * 
    **/
    where: ProjectPropertyWhereUniqueInput
  }


  /**
   * ProjectProperty deleteMany
   */
  export type ProjectPropertyDeleteManyArgs = {
    /**
     * Filter which ProjectProperties to delete
     * 
    **/
    where?: ProjectPropertyWhereInput
  }


  /**
   * ProjectProperty.ProjectPropertyValue
   */
  export type ProjectProperty$ProjectPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    where?: ProjectPropertyValueWhereInput
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    cursor?: ProjectPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }


  /**
   * ProjectProperty without action
   */
  export type ProjectPropertyArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
  }



  /**
   * Model ProjectPropertyValue
   */


  export type AggregateProjectPropertyValue = {
    _count: ProjectPropertyValueCountAggregateOutputType | null
    _min: ProjectPropertyValueMinAggregateOutputType | null
    _max: ProjectPropertyValueMaxAggregateOutputType | null
  }

  export type ProjectPropertyValueMinAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    projectId: string | null
    projectPropertyId: string | null
    tenantId: string | null
  }

  export type ProjectPropertyValueMaxAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    projectId: string | null
    projectPropertyId: string | null
    tenantId: string | null
  }

  export type ProjectPropertyValueCountAggregateOutputType = {
    id: number
    value: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    projectId: number
    projectPropertyId: number
    tenantId: number
    _all: number
  }


  export type ProjectPropertyValueMinAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    projectId?: true
    projectPropertyId?: true
    tenantId?: true
  }

  export type ProjectPropertyValueMaxAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    projectId?: true
    projectPropertyId?: true
    tenantId?: true
  }

  export type ProjectPropertyValueCountAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    projectId?: true
    projectPropertyId?: true
    tenantId?: true
    _all?: true
  }

  export type ProjectPropertyValueAggregateArgs = {
    /**
     * Filter which ProjectPropertyValue to aggregate.
     * 
    **/
    where?: ProjectPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProjectPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProjectPropertyValues
    **/
    _count?: true | ProjectPropertyValueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectPropertyValueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectPropertyValueMaxAggregateInputType
  }

  export type GetProjectPropertyValueAggregateType<T extends ProjectPropertyValueAggregateArgs> = {
        [P in keyof T & keyof AggregateProjectPropertyValue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjectPropertyValue[P]>
      : GetScalarType<T[P], AggregateProjectPropertyValue[P]>
  }




  export type ProjectPropertyValueGroupByArgs = {
    where?: ProjectPropertyValueWhereInput
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithAggregationInput>
    by: Array<ProjectPropertyValueScalarFieldEnum>
    having?: ProjectPropertyValueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectPropertyValueCountAggregateInputType | true
    _min?: ProjectPropertyValueMinAggregateInputType
    _max?: ProjectPropertyValueMaxAggregateInputType
  }


  export type ProjectPropertyValueGroupByOutputType = {
    id: string
    value: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    projectId: string
    projectPropertyId: string
    tenantId: string
    _count: ProjectPropertyValueCountAggregateOutputType | null
    _min: ProjectPropertyValueMinAggregateOutputType | null
    _max: ProjectPropertyValueMaxAggregateOutputType | null
  }

  type GetProjectPropertyValueGroupByPayload<T extends ProjectPropertyValueGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ProjectPropertyValueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectPropertyValueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectPropertyValueGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectPropertyValueGroupByOutputType[P]>
        }
      >
    >


  export type ProjectPropertyValueSelect = {
    id?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    projectId?: boolean
    projectPropertyId?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Project?: boolean | ProjectArgs
    ProjectProperty?: boolean | ProjectPropertyArgs
    Tenant?: boolean | TenantArgs
  }


  export type ProjectPropertyValueInclude = {
    User?: boolean | UserArgs
    Project?: boolean | ProjectArgs
    ProjectProperty?: boolean | ProjectPropertyArgs
    Tenant?: boolean | TenantArgs
  } 

  export type ProjectPropertyValueGetPayload<S extends boolean | null | undefined | ProjectPropertyValueArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ProjectPropertyValue :
    S extends undefined ? never :
    S extends { include: any } & (ProjectPropertyValueArgs | ProjectPropertyValueFindManyArgs)
    ? ProjectPropertyValue  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Project' ? ProjectGetPayload<S['include'][P]> :
        P extends 'ProjectProperty' ? ProjectPropertyGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ProjectPropertyValueArgs | ProjectPropertyValueFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Project' ? ProjectGetPayload<S['select'][P]> :
        P extends 'ProjectProperty' ? ProjectPropertyGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof ProjectPropertyValue ? ProjectPropertyValue[P] : never
  } 
      : ProjectPropertyValue


  type ProjectPropertyValueCountArgs = Merge<
    Omit<ProjectPropertyValueFindManyArgs, 'select' | 'include'> & {
      select?: ProjectPropertyValueCountAggregateInputType | true
    }
  >

  export interface ProjectPropertyValueDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one ProjectPropertyValue that matches the filter.
     * @param {ProjectPropertyValueFindUniqueArgs} args - Arguments to find a ProjectPropertyValue
     * @example
     * // Get one ProjectPropertyValue
     * const projectPropertyValue = await prisma.projectPropertyValue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProjectPropertyValueFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProjectPropertyValueFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'ProjectPropertyValue'> extends True ? Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>> : Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T> | null, null>

    /**
     * Find one ProjectPropertyValue that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ProjectPropertyValueFindUniqueOrThrowArgs} args - Arguments to find a ProjectPropertyValue
     * @example
     * // Get one ProjectPropertyValue
     * const projectPropertyValue = await prisma.projectPropertyValue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ProjectPropertyValueFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ProjectPropertyValueFindUniqueOrThrowArgs>
    ): Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>>

    /**
     * Find the first ProjectPropertyValue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueFindFirstArgs} args - Arguments to find a ProjectPropertyValue
     * @example
     * // Get one ProjectPropertyValue
     * const projectPropertyValue = await prisma.projectPropertyValue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProjectPropertyValueFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProjectPropertyValueFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'ProjectPropertyValue'> extends True ? Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>> : Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T> | null, null>

    /**
     * Find the first ProjectPropertyValue that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueFindFirstOrThrowArgs} args - Arguments to find a ProjectPropertyValue
     * @example
     * // Get one ProjectPropertyValue
     * const projectPropertyValue = await prisma.projectPropertyValue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ProjectPropertyValueFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ProjectPropertyValueFindFirstOrThrowArgs>
    ): Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>>

    /**
     * Find zero or more ProjectPropertyValues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProjectPropertyValues
     * const projectPropertyValues = await prisma.projectPropertyValue.findMany()
     * 
     * // Get first 10 ProjectPropertyValues
     * const projectPropertyValues = await prisma.projectPropertyValue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const projectPropertyValueWithIdOnly = await prisma.projectPropertyValue.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProjectPropertyValueFindManyArgs>(
      args?: SelectSubset<T, ProjectPropertyValueFindManyArgs>
    ): PrismaPromise<Array<ProjectPropertyValueGetPayload<T>>>

    /**
     * Create a ProjectPropertyValue.
     * @param {ProjectPropertyValueCreateArgs} args - Arguments to create a ProjectPropertyValue.
     * @example
     * // Create one ProjectPropertyValue
     * const ProjectPropertyValue = await prisma.projectPropertyValue.create({
     *   data: {
     *     // ... data to create a ProjectPropertyValue
     *   }
     * })
     * 
    **/
    create<T extends ProjectPropertyValueCreateArgs>(
      args: SelectSubset<T, ProjectPropertyValueCreateArgs>
    ): Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>>

    /**
     * Create many ProjectPropertyValues.
     *     @param {ProjectPropertyValueCreateManyArgs} args - Arguments to create many ProjectPropertyValues.
     *     @example
     *     // Create many ProjectPropertyValues
     *     const projectPropertyValue = await prisma.projectPropertyValue.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProjectPropertyValueCreateManyArgs>(
      args?: SelectSubset<T, ProjectPropertyValueCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a ProjectPropertyValue.
     * @param {ProjectPropertyValueDeleteArgs} args - Arguments to delete one ProjectPropertyValue.
     * @example
     * // Delete one ProjectPropertyValue
     * const ProjectPropertyValue = await prisma.projectPropertyValue.delete({
     *   where: {
     *     // ... filter to delete one ProjectPropertyValue
     *   }
     * })
     * 
    **/
    delete<T extends ProjectPropertyValueDeleteArgs>(
      args: SelectSubset<T, ProjectPropertyValueDeleteArgs>
    ): Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>>

    /**
     * Update one ProjectPropertyValue.
     * @param {ProjectPropertyValueUpdateArgs} args - Arguments to update one ProjectPropertyValue.
     * @example
     * // Update one ProjectPropertyValue
     * const projectPropertyValue = await prisma.projectPropertyValue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProjectPropertyValueUpdateArgs>(
      args: SelectSubset<T, ProjectPropertyValueUpdateArgs>
    ): Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>>

    /**
     * Delete zero or more ProjectPropertyValues.
     * @param {ProjectPropertyValueDeleteManyArgs} args - Arguments to filter ProjectPropertyValues to delete.
     * @example
     * // Delete a few ProjectPropertyValues
     * const { count } = await prisma.projectPropertyValue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProjectPropertyValueDeleteManyArgs>(
      args?: SelectSubset<T, ProjectPropertyValueDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProjectPropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProjectPropertyValues
     * const projectPropertyValue = await prisma.projectPropertyValue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProjectPropertyValueUpdateManyArgs>(
      args: SelectSubset<T, ProjectPropertyValueUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one ProjectPropertyValue.
     * @param {ProjectPropertyValueUpsertArgs} args - Arguments to update or create a ProjectPropertyValue.
     * @example
     * // Update or create a ProjectPropertyValue
     * const projectPropertyValue = await prisma.projectPropertyValue.upsert({
     *   create: {
     *     // ... data to create a ProjectPropertyValue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProjectPropertyValue we want to update
     *   }
     * })
    **/
    upsert<T extends ProjectPropertyValueUpsertArgs>(
      args: SelectSubset<T, ProjectPropertyValueUpsertArgs>
    ): Prisma__ProjectPropertyValueClient<ProjectPropertyValueGetPayload<T>>

    /**
     * Count the number of ProjectPropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueCountArgs} args - Arguments to filter ProjectPropertyValues to count.
     * @example
     * // Count the number of ProjectPropertyValues
     * const count = await prisma.projectPropertyValue.count({
     *   where: {
     *     // ... the filter for the ProjectPropertyValues we want to count
     *   }
     * })
    **/
    count<T extends ProjectPropertyValueCountArgs>(
      args?: Subset<T, ProjectPropertyValueCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectPropertyValueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProjectPropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectPropertyValueAggregateArgs>(args: Subset<T, ProjectPropertyValueAggregateArgs>): PrismaPromise<GetProjectPropertyValueAggregateType<T>>

    /**
     * Group by ProjectPropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectPropertyValueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectPropertyValueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectPropertyValueGroupByArgs['orderBy'] }
        : { orderBy?: ProjectPropertyValueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectPropertyValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectPropertyValueGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for ProjectPropertyValue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProjectPropertyValueClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Project<T extends ProjectArgs= {}>(args?: Subset<T, ProjectArgs>): Prisma__ProjectClient<ProjectGetPayload<T> | Null>;

    ProjectProperty<T extends ProjectPropertyArgs= {}>(args?: Subset<T, ProjectPropertyArgs>): Prisma__ProjectPropertyClient<ProjectPropertyGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * ProjectPropertyValue base type for findUnique actions
   */
  export type ProjectPropertyValueFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * Filter, which ProjectPropertyValue to fetch.
     * 
    **/
    where: ProjectPropertyValueWhereUniqueInput
  }

  /**
   * ProjectPropertyValue findUnique
   */
  export interface ProjectPropertyValueFindUniqueArgs extends ProjectPropertyValueFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ProjectPropertyValue findUniqueOrThrow
   */
  export type ProjectPropertyValueFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * Filter, which ProjectPropertyValue to fetch.
     * 
    **/
    where: ProjectPropertyValueWhereUniqueInput
  }


  /**
   * ProjectPropertyValue base type for findFirst actions
   */
  export type ProjectPropertyValueFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * Filter, which ProjectPropertyValue to fetch.
     * 
    **/
    where?: ProjectPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectPropertyValues.
     * 
    **/
    cursor?: ProjectPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectPropertyValues.
     * 
    **/
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }

  /**
   * ProjectPropertyValue findFirst
   */
  export interface ProjectPropertyValueFindFirstArgs extends ProjectPropertyValueFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * ProjectPropertyValue findFirstOrThrow
   */
  export type ProjectPropertyValueFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * Filter, which ProjectPropertyValue to fetch.
     * 
    **/
    where?: ProjectPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProjectPropertyValues.
     * 
    **/
    cursor?: ProjectPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProjectPropertyValues.
     * 
    **/
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }


  /**
   * ProjectPropertyValue findMany
   */
  export type ProjectPropertyValueFindManyArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * Filter, which ProjectPropertyValues to fetch.
     * 
    **/
    where?: ProjectPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProjectPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProjectPropertyValues.
     * 
    **/
    cursor?: ProjectPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProjectPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProjectPropertyValues.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }


  /**
   * ProjectPropertyValue create
   */
  export type ProjectPropertyValueCreateArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * The data needed to create a ProjectPropertyValue.
     * 
    **/
    data: XOR<ProjectPropertyValueCreateInput, ProjectPropertyValueUncheckedCreateInput>
  }


  /**
   * ProjectPropertyValue createMany
   */
  export type ProjectPropertyValueCreateManyArgs = {
    /**
     * The data used to create many ProjectPropertyValues.
     * 
    **/
    data: Enumerable<ProjectPropertyValueCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * ProjectPropertyValue update
   */
  export type ProjectPropertyValueUpdateArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * The data needed to update a ProjectPropertyValue.
     * 
    **/
    data: XOR<ProjectPropertyValueUpdateInput, ProjectPropertyValueUncheckedUpdateInput>
    /**
     * Choose, which ProjectPropertyValue to update.
     * 
    **/
    where: ProjectPropertyValueWhereUniqueInput
  }


  /**
   * ProjectPropertyValue updateMany
   */
  export type ProjectPropertyValueUpdateManyArgs = {
    /**
     * The data used to update ProjectPropertyValues.
     * 
    **/
    data: XOR<ProjectPropertyValueUpdateManyMutationInput, ProjectPropertyValueUncheckedUpdateManyInput>
    /**
     * Filter which ProjectPropertyValues to update
     * 
    **/
    where?: ProjectPropertyValueWhereInput
  }


  /**
   * ProjectPropertyValue upsert
   */
  export type ProjectPropertyValueUpsertArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * The filter to search for the ProjectPropertyValue to update in case it exists.
     * 
    **/
    where: ProjectPropertyValueWhereUniqueInput
    /**
     * In case the ProjectPropertyValue found by the `where` argument doesn't exist, create a new ProjectPropertyValue with this data.
     * 
    **/
    create: XOR<ProjectPropertyValueCreateInput, ProjectPropertyValueUncheckedCreateInput>
    /**
     * In case the ProjectPropertyValue was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProjectPropertyValueUpdateInput, ProjectPropertyValueUncheckedUpdateInput>
  }


  /**
   * ProjectPropertyValue delete
   */
  export type ProjectPropertyValueDeleteArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    /**
     * Filter which ProjectPropertyValue to delete.
     * 
    **/
    where: ProjectPropertyValueWhereUniqueInput
  }


  /**
   * ProjectPropertyValue deleteMany
   */
  export type ProjectPropertyValueDeleteManyArgs = {
    /**
     * Filter which ProjectPropertyValues to delete
     * 
    **/
    where?: ProjectPropertyValueWhereInput
  }


  /**
   * ProjectPropertyValue without action
   */
  export type ProjectPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
  }



  /**
   * Model Task
   */


  export type AggregateTask = {
    _count: TaskCountAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  export type TaskMinAggregateOutputType = {
    id: string | null
    description: string | null
    name: string | null
    statusId: string | null
    systemStatusId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    projectId: string | null
    tenantId: string | null
    parentId: string | null
    taskStatusId: string | null
  }

  export type TaskMaxAggregateOutputType = {
    id: string | null
    description: string | null
    name: string | null
    statusId: string | null
    systemStatusId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    projectId: string | null
    tenantId: string | null
    parentId: string | null
    taskStatusId: string | null
  }

  export type TaskCountAggregateOutputType = {
    id: number
    description: number
    name: number
    statusId: number
    systemStatusId: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    projectId: number
    tenantId: number
    parentId: number
    taskStatusId: number
    _all: number
  }


  export type TaskMinAggregateInputType = {
    id?: true
    description?: true
    name?: true
    statusId?: true
    systemStatusId?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    projectId?: true
    tenantId?: true
    parentId?: true
    taskStatusId?: true
  }

  export type TaskMaxAggregateInputType = {
    id?: true
    description?: true
    name?: true
    statusId?: true
    systemStatusId?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    projectId?: true
    tenantId?: true
    parentId?: true
    taskStatusId?: true
  }

  export type TaskCountAggregateInputType = {
    id?: true
    description?: true
    name?: true
    statusId?: true
    systemStatusId?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    projectId?: true
    tenantId?: true
    parentId?: true
    taskStatusId?: true
    _all?: true
  }

  export type TaskAggregateArgs = {
    /**
     * Filter which Task to aggregate.
     * 
    **/
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tasks
    **/
    _count?: true | TaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskMaxAggregateInputType
  }

  export type GetTaskAggregateType<T extends TaskAggregateArgs> = {
        [P in keyof T & keyof AggregateTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask[P]>
      : GetScalarType<T[P], AggregateTask[P]>
  }




  export type TaskGroupByArgs = {
    where?: TaskWhereInput
    orderBy?: Enumerable<TaskOrderByWithAggregationInput>
    by: Array<TaskScalarFieldEnum>
    having?: TaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskCountAggregateInputType | true
    _min?: TaskMinAggregateInputType
    _max?: TaskMaxAggregateInputType
  }


  export type TaskGroupByOutputType = {
    id: string
    description: string | null
    name: string | null
    statusId: string | null
    systemStatusId: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    projectId: string
    tenantId: string
    parentId: string | null
    taskStatusId: string | null
    _count: TaskCountAggregateOutputType | null
    _min: TaskMinAggregateOutputType | null
    _max: TaskMaxAggregateOutputType | null
  }

  type GetTaskGroupByPayload<T extends TaskGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskGroupByOutputType[P]>
            : GetScalarType<T[P], TaskGroupByOutputType[P]>
        }
      >
    >


  export type TaskSelect = {
    id?: boolean
    description?: boolean
    name?: boolean
    statusId?: boolean
    systemStatusId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    projectId?: boolean
    tenantId?: boolean
    parentId?: boolean
    taskStatusId?: boolean
    DailyLogItem?: boolean | Task$DailyLogItemArgs
    User?: boolean | UserArgs
    Task?: boolean | TaskArgs
    other_Task?: boolean | Task$other_TaskArgs
    Project?: boolean | ProjectArgs
    TaskStatus?: boolean | TaskStatusArgs
    Tenant?: boolean | TenantArgs
    TaskPropertyValue?: boolean | Task$TaskPropertyValueArgs
    UserTask?: boolean | Task$UserTaskArgs
    _count?: boolean | TaskCountOutputTypeArgs
  }


  export type TaskInclude = {
    DailyLogItem?: boolean | Task$DailyLogItemArgs
    User?: boolean | UserArgs
    Task?: boolean | TaskArgs
    other_Task?: boolean | Task$other_TaskArgs
    Project?: boolean | ProjectArgs
    TaskStatus?: boolean | TaskStatusArgs
    Tenant?: boolean | TenantArgs
    TaskPropertyValue?: boolean | Task$TaskPropertyValueArgs
    UserTask?: boolean | Task$UserTaskArgs
    _count?: boolean | TaskCountOutputTypeArgs
  } 

  export type TaskGetPayload<S extends boolean | null | undefined | TaskArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Task :
    S extends undefined ? never :
    S extends { include: any } & (TaskArgs | TaskFindManyArgs)
    ? Task  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['include'][P]>>  :
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['include'][P]> | null :
        P extends 'other_Task' ? Array < TaskGetPayload<S['include'][P]>>  :
        P extends 'Project' ? ProjectGetPayload<S['include'][P]> :
        P extends 'TaskStatus' ? TaskStatusGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'UserTask' ? Array < UserTaskGetPayload<S['include'][P]>>  :
        P extends '_count' ? TaskCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaskArgs | TaskFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['select'][P]>>  :
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['select'][P]> | null :
        P extends 'other_Task' ? Array < TaskGetPayload<S['select'][P]>>  :
        P extends 'Project' ? ProjectGetPayload<S['select'][P]> :
        P extends 'TaskStatus' ? TaskStatusGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'UserTask' ? Array < UserTaskGetPayload<S['select'][P]>>  :
        P extends '_count' ? TaskCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Task ? Task[P] : never
  } 
      : Task


  type TaskCountArgs = Merge<
    Omit<TaskFindManyArgs, 'select' | 'include'> & {
      select?: TaskCountAggregateInputType | true
    }
  >

  export interface TaskDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Task that matches the filter.
     * @param {TaskFindUniqueArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaskFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaskFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Task'> extends True ? Prisma__TaskClient<TaskGetPayload<T>> : Prisma__TaskClient<TaskGetPayload<T> | null, null>

    /**
     * Find one Task that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaskFindUniqueOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaskFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaskFindUniqueOrThrowArgs>
    ): Prisma__TaskClient<TaskGetPayload<T>>

    /**
     * Find the first Task that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaskFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaskFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Task'> extends True ? Prisma__TaskClient<TaskGetPayload<T>> : Prisma__TaskClient<TaskGetPayload<T> | null, null>

    /**
     * Find the first Task that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindFirstOrThrowArgs} args - Arguments to find a Task
     * @example
     * // Get one Task
     * const task = await prisma.task.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaskFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaskFindFirstOrThrowArgs>
    ): Prisma__TaskClient<TaskGetPayload<T>>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.task.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.task.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskWithIdOnly = await prisma.task.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TaskFindManyArgs>(
      args?: SelectSubset<T, TaskFindManyArgs>
    ): PrismaPromise<Array<TaskGetPayload<T>>>

    /**
     * Create a Task.
     * @param {TaskCreateArgs} args - Arguments to create a Task.
     * @example
     * // Create one Task
     * const Task = await prisma.task.create({
     *   data: {
     *     // ... data to create a Task
     *   }
     * })
     * 
    **/
    create<T extends TaskCreateArgs>(
      args: SelectSubset<T, TaskCreateArgs>
    ): Prisma__TaskClient<TaskGetPayload<T>>

    /**
     * Create many Tasks.
     *     @param {TaskCreateManyArgs} args - Arguments to create many Tasks.
     *     @example
     *     // Create many Tasks
     *     const task = await prisma.task.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaskCreateManyArgs>(
      args?: SelectSubset<T, TaskCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Task.
     * @param {TaskDeleteArgs} args - Arguments to delete one Task.
     * @example
     * // Delete one Task
     * const Task = await prisma.task.delete({
     *   where: {
     *     // ... filter to delete one Task
     *   }
     * })
     * 
    **/
    delete<T extends TaskDeleteArgs>(
      args: SelectSubset<T, TaskDeleteArgs>
    ): Prisma__TaskClient<TaskGetPayload<T>>

    /**
     * Update one Task.
     * @param {TaskUpdateArgs} args - Arguments to update one Task.
     * @example
     * // Update one Task
     * const task = await prisma.task.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaskUpdateArgs>(
      args: SelectSubset<T, TaskUpdateArgs>
    ): Prisma__TaskClient<TaskGetPayload<T>>

    /**
     * Delete zero or more Tasks.
     * @param {TaskDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.task.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaskDeleteManyArgs>(
      args?: SelectSubset<T, TaskDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const task = await prisma.task.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaskUpdateManyArgs>(
      args: SelectSubset<T, TaskUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Task.
     * @param {TaskUpsertArgs} args - Arguments to update or create a Task.
     * @example
     * // Update or create a Task
     * const task = await prisma.task.upsert({
     *   create: {
     *     // ... data to create a Task
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task we want to update
     *   }
     * })
    **/
    upsert<T extends TaskUpsertArgs>(
      args: SelectSubset<T, TaskUpsertArgs>
    ): Prisma__TaskClient<TaskGetPayload<T>>

    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.task.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends TaskCountArgs>(
      args?: Subset<T, TaskCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskAggregateArgs>(args: Subset<T, TaskAggregateArgs>): PrismaPromise<GetTaskAggregateType<T>>

    /**
     * Group by Task.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskGroupByArgs['orderBy'] }
        : { orderBy?: TaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Task.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaskClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    DailyLogItem<T extends Task$DailyLogItemArgs= {}>(args?: Subset<T, Task$DailyLogItemArgs>): PrismaPromise<Array<DailyLogItemGetPayload<T>>| Null>;

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Task<T extends TaskArgs= {}>(args?: Subset<T, TaskArgs>): Prisma__TaskClient<TaskGetPayload<T> | Null>;

    other_Task<T extends Task$other_TaskArgs= {}>(args?: Subset<T, Task$other_TaskArgs>): PrismaPromise<Array<TaskGetPayload<T>>| Null>;

    Project<T extends ProjectArgs= {}>(args?: Subset<T, ProjectArgs>): Prisma__ProjectClient<ProjectGetPayload<T> | Null>;

    TaskStatus<T extends TaskStatusArgs= {}>(args?: Subset<T, TaskStatusArgs>): Prisma__TaskStatusClient<TaskStatusGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    TaskPropertyValue<T extends Task$TaskPropertyValueArgs= {}>(args?: Subset<T, Task$TaskPropertyValueArgs>): PrismaPromise<Array<TaskPropertyValueGetPayload<T>>| Null>;

    UserTask<T extends Task$UserTaskArgs= {}>(args?: Subset<T, Task$UserTaskArgs>): PrismaPromise<Array<UserTaskGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Task base type for findUnique actions
   */
  export type TaskFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * Filter, which Task to fetch.
     * 
    **/
    where: TaskWhereUniqueInput
  }

  /**
   * Task findUnique
   */
  export interface TaskFindUniqueArgs extends TaskFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Task findUniqueOrThrow
   */
  export type TaskFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * Filter, which Task to fetch.
     * 
    **/
    where: TaskWhereUniqueInput
  }


  /**
   * Task base type for findFirst actions
   */
  export type TaskFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * Filter, which Task to fetch.
     * 
    **/
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     * 
    **/
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     * 
    **/
    distinct?: Enumerable<TaskScalarFieldEnum>
  }

  /**
   * Task findFirst
   */
  export interface TaskFindFirstArgs extends TaskFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Task findFirstOrThrow
   */
  export type TaskFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * Filter, which Task to fetch.
     * 
    **/
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tasks.
     * 
    **/
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tasks.
     * 
    **/
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * Task findMany
   */
  export type TaskFindManyArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * Filter, which Tasks to fetch.
     * 
    **/
    where?: TaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tasks to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tasks.
     * 
    **/
    cursor?: TaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tasks.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * Task create
   */
  export type TaskCreateArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * The data needed to create a Task.
     * 
    **/
    data: XOR<TaskCreateInput, TaskUncheckedCreateInput>
  }


  /**
   * Task createMany
   */
  export type TaskCreateManyArgs = {
    /**
     * The data used to create many Tasks.
     * 
    **/
    data: Enumerable<TaskCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Task update
   */
  export type TaskUpdateArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * The data needed to update a Task.
     * 
    **/
    data: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
    /**
     * Choose, which Task to update.
     * 
    **/
    where: TaskWhereUniqueInput
  }


  /**
   * Task updateMany
   */
  export type TaskUpdateManyArgs = {
    /**
     * The data used to update Tasks.
     * 
    **/
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyInput>
    /**
     * Filter which Tasks to update
     * 
    **/
    where?: TaskWhereInput
  }


  /**
   * Task upsert
   */
  export type TaskUpsertArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * The filter to search for the Task to update in case it exists.
     * 
    **/
    where: TaskWhereUniqueInput
    /**
     * In case the Task found by the `where` argument doesn't exist, create a new Task with this data.
     * 
    **/
    create: XOR<TaskCreateInput, TaskUncheckedCreateInput>
    /**
     * In case the Task was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TaskUpdateInput, TaskUncheckedUpdateInput>
  }


  /**
   * Task delete
   */
  export type TaskDeleteArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    /**
     * Filter which Task to delete.
     * 
    **/
    where: TaskWhereUniqueInput
  }


  /**
   * Task deleteMany
   */
  export type TaskDeleteManyArgs = {
    /**
     * Filter which Tasks to delete
     * 
    **/
    where?: TaskWhereInput
  }


  /**
   * Task.DailyLogItem
   */
  export type Task$DailyLogItemArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    where?: DailyLogItemWhereInput
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    cursor?: DailyLogItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * Task.other_Task
   */
  export type Task$other_TaskArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    where?: TaskWhereInput
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * Task.TaskPropertyValue
   */
  export type Task$TaskPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    where?: TaskPropertyValueWhereInput
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    cursor?: TaskPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }


  /**
   * Task.UserTask
   */
  export type Task$UserTaskArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    where?: UserTaskWhereInput
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    cursor?: UserTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }


  /**
   * Task without action
   */
  export type TaskArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
  }



  /**
   * Model TaskProperty
   */


  export type AggregateTaskProperty = {
    _count: TaskPropertyCountAggregateOutputType | null
    _avg: TaskPropertyAvgAggregateOutputType | null
    _sum: TaskPropertySumAggregateOutputType | null
    _min: TaskPropertyMinAggregateOutputType | null
    _max: TaskPropertyMaxAggregateOutputType | null
  }

  export type TaskPropertyAvgAggregateOutputType = {
    order: number | null
  }

  export type TaskPropertySumAggregateOutputType = {
    order: number | null
  }

  export type TaskPropertyMinAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type TaskPropertyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    order: number | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type TaskPropertyCountAggregateOutputType = {
    id: number
    name: number
    order: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type TaskPropertyAvgAggregateInputType = {
    order?: true
  }

  export type TaskPropertySumAggregateInputType = {
    order?: true
  }

  export type TaskPropertyMinAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type TaskPropertyMaxAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type TaskPropertyCountAggregateInputType = {
    id?: true
    name?: true
    order?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type TaskPropertyAggregateArgs = {
    /**
     * Filter which TaskProperty to aggregate.
     * 
    **/
    where?: TaskPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TaskPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TaskProperties
    **/
    _count?: true | TaskPropertyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TaskPropertyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TaskPropertySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskPropertyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskPropertyMaxAggregateInputType
  }

  export type GetTaskPropertyAggregateType<T extends TaskPropertyAggregateArgs> = {
        [P in keyof T & keyof AggregateTaskProperty]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaskProperty[P]>
      : GetScalarType<T[P], AggregateTaskProperty[P]>
  }




  export type TaskPropertyGroupByArgs = {
    where?: TaskPropertyWhereInput
    orderBy?: Enumerable<TaskPropertyOrderByWithAggregationInput>
    by: Array<TaskPropertyScalarFieldEnum>
    having?: TaskPropertyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskPropertyCountAggregateInputType | true
    _avg?: TaskPropertyAvgAggregateInputType
    _sum?: TaskPropertySumAggregateInputType
    _min?: TaskPropertyMinAggregateInputType
    _max?: TaskPropertyMaxAggregateInputType
  }


  export type TaskPropertyGroupByOutputType = {
    id: string
    name: string
    order: number
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: TaskPropertyCountAggregateOutputType | null
    _avg: TaskPropertyAvgAggregateOutputType | null
    _sum: TaskPropertySumAggregateOutputType | null
    _min: TaskPropertyMinAggregateOutputType | null
    _max: TaskPropertyMaxAggregateOutputType | null
  }

  type GetTaskPropertyGroupByPayload<T extends TaskPropertyGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TaskPropertyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskPropertyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskPropertyGroupByOutputType[P]>
            : GetScalarType<T[P], TaskPropertyGroupByOutputType[P]>
        }
      >
    >


  export type TaskPropertySelect = {
    id?: boolean
    name?: boolean
    order?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    TaskPropertyValue?: boolean | TaskProperty$TaskPropertyValueArgs
    _count?: boolean | TaskPropertyCountOutputTypeArgs
  }


  export type TaskPropertyInclude = {
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    TaskPropertyValue?: boolean | TaskProperty$TaskPropertyValueArgs
    _count?: boolean | TaskPropertyCountOutputTypeArgs
  } 

  export type TaskPropertyGetPayload<S extends boolean | null | undefined | TaskPropertyArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaskProperty :
    S extends undefined ? never :
    S extends { include: any } & (TaskPropertyArgs | TaskPropertyFindManyArgs)
    ? TaskProperty  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['include'][P]>>  :
        P extends '_count' ? TaskPropertyCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaskPropertyArgs | TaskPropertyFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['select'][P]>>  :
        P extends '_count' ? TaskPropertyCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof TaskProperty ? TaskProperty[P] : never
  } 
      : TaskProperty


  type TaskPropertyCountArgs = Merge<
    Omit<TaskPropertyFindManyArgs, 'select' | 'include'> & {
      select?: TaskPropertyCountAggregateInputType | true
    }
  >

  export interface TaskPropertyDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one TaskProperty that matches the filter.
     * @param {TaskPropertyFindUniqueArgs} args - Arguments to find a TaskProperty
     * @example
     * // Get one TaskProperty
     * const taskProperty = await prisma.taskProperty.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaskPropertyFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaskPropertyFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TaskProperty'> extends True ? Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>> : Prisma__TaskPropertyClient<TaskPropertyGetPayload<T> | null, null>

    /**
     * Find one TaskProperty that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaskPropertyFindUniqueOrThrowArgs} args - Arguments to find a TaskProperty
     * @example
     * // Get one TaskProperty
     * const taskProperty = await prisma.taskProperty.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaskPropertyFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaskPropertyFindUniqueOrThrowArgs>
    ): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>>

    /**
     * Find the first TaskProperty that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyFindFirstArgs} args - Arguments to find a TaskProperty
     * @example
     * // Get one TaskProperty
     * const taskProperty = await prisma.taskProperty.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaskPropertyFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaskPropertyFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TaskProperty'> extends True ? Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>> : Prisma__TaskPropertyClient<TaskPropertyGetPayload<T> | null, null>

    /**
     * Find the first TaskProperty that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyFindFirstOrThrowArgs} args - Arguments to find a TaskProperty
     * @example
     * // Get one TaskProperty
     * const taskProperty = await prisma.taskProperty.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaskPropertyFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaskPropertyFindFirstOrThrowArgs>
    ): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>>

    /**
     * Find zero or more TaskProperties that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TaskProperties
     * const taskProperties = await prisma.taskProperty.findMany()
     * 
     * // Get first 10 TaskProperties
     * const taskProperties = await prisma.taskProperty.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskPropertyWithIdOnly = await prisma.taskProperty.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TaskPropertyFindManyArgs>(
      args?: SelectSubset<T, TaskPropertyFindManyArgs>
    ): PrismaPromise<Array<TaskPropertyGetPayload<T>>>

    /**
     * Create a TaskProperty.
     * @param {TaskPropertyCreateArgs} args - Arguments to create a TaskProperty.
     * @example
     * // Create one TaskProperty
     * const TaskProperty = await prisma.taskProperty.create({
     *   data: {
     *     // ... data to create a TaskProperty
     *   }
     * })
     * 
    **/
    create<T extends TaskPropertyCreateArgs>(
      args: SelectSubset<T, TaskPropertyCreateArgs>
    ): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>>

    /**
     * Create many TaskProperties.
     *     @param {TaskPropertyCreateManyArgs} args - Arguments to create many TaskProperties.
     *     @example
     *     // Create many TaskProperties
     *     const taskProperty = await prisma.taskProperty.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaskPropertyCreateManyArgs>(
      args?: SelectSubset<T, TaskPropertyCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a TaskProperty.
     * @param {TaskPropertyDeleteArgs} args - Arguments to delete one TaskProperty.
     * @example
     * // Delete one TaskProperty
     * const TaskProperty = await prisma.taskProperty.delete({
     *   where: {
     *     // ... filter to delete one TaskProperty
     *   }
     * })
     * 
    **/
    delete<T extends TaskPropertyDeleteArgs>(
      args: SelectSubset<T, TaskPropertyDeleteArgs>
    ): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>>

    /**
     * Update one TaskProperty.
     * @param {TaskPropertyUpdateArgs} args - Arguments to update one TaskProperty.
     * @example
     * // Update one TaskProperty
     * const taskProperty = await prisma.taskProperty.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaskPropertyUpdateArgs>(
      args: SelectSubset<T, TaskPropertyUpdateArgs>
    ): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>>

    /**
     * Delete zero or more TaskProperties.
     * @param {TaskPropertyDeleteManyArgs} args - Arguments to filter TaskProperties to delete.
     * @example
     * // Delete a few TaskProperties
     * const { count } = await prisma.taskProperty.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaskPropertyDeleteManyArgs>(
      args?: SelectSubset<T, TaskPropertyDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TaskProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TaskProperties
     * const taskProperty = await prisma.taskProperty.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaskPropertyUpdateManyArgs>(
      args: SelectSubset<T, TaskPropertyUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TaskProperty.
     * @param {TaskPropertyUpsertArgs} args - Arguments to update or create a TaskProperty.
     * @example
     * // Update or create a TaskProperty
     * const taskProperty = await prisma.taskProperty.upsert({
     *   create: {
     *     // ... data to create a TaskProperty
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TaskProperty we want to update
     *   }
     * })
    **/
    upsert<T extends TaskPropertyUpsertArgs>(
      args: SelectSubset<T, TaskPropertyUpsertArgs>
    ): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T>>

    /**
     * Count the number of TaskProperties.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyCountArgs} args - Arguments to filter TaskProperties to count.
     * @example
     * // Count the number of TaskProperties
     * const count = await prisma.taskProperty.count({
     *   where: {
     *     // ... the filter for the TaskProperties we want to count
     *   }
     * })
    **/
    count<T extends TaskPropertyCountArgs>(
      args?: Subset<T, TaskPropertyCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskPropertyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TaskProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskPropertyAggregateArgs>(args: Subset<T, TaskPropertyAggregateArgs>): PrismaPromise<GetTaskPropertyAggregateType<T>>

    /**
     * Group by TaskProperty.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskPropertyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskPropertyGroupByArgs['orderBy'] }
        : { orderBy?: TaskPropertyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskPropertyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskPropertyGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for TaskProperty.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaskPropertyClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    TaskPropertyValue<T extends TaskProperty$TaskPropertyValueArgs= {}>(args?: Subset<T, TaskProperty$TaskPropertyValueArgs>): PrismaPromise<Array<TaskPropertyValueGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * TaskProperty base type for findUnique actions
   */
  export type TaskPropertyFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * Filter, which TaskProperty to fetch.
     * 
    **/
    where: TaskPropertyWhereUniqueInput
  }

  /**
   * TaskProperty findUnique
   */
  export interface TaskPropertyFindUniqueArgs extends TaskPropertyFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TaskProperty findUniqueOrThrow
   */
  export type TaskPropertyFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * Filter, which TaskProperty to fetch.
     * 
    **/
    where: TaskPropertyWhereUniqueInput
  }


  /**
   * TaskProperty base type for findFirst actions
   */
  export type TaskPropertyFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * Filter, which TaskProperty to fetch.
     * 
    **/
    where?: TaskPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaskProperties.
     * 
    **/
    cursor?: TaskPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaskProperties.
     * 
    **/
    distinct?: Enumerable<TaskPropertyScalarFieldEnum>
  }

  /**
   * TaskProperty findFirst
   */
  export interface TaskPropertyFindFirstArgs extends TaskPropertyFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TaskProperty findFirstOrThrow
   */
  export type TaskPropertyFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * Filter, which TaskProperty to fetch.
     * 
    **/
    where?: TaskPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaskProperties.
     * 
    **/
    cursor?: TaskPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskProperties.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaskProperties.
     * 
    **/
    distinct?: Enumerable<TaskPropertyScalarFieldEnum>
  }


  /**
   * TaskProperty findMany
   */
  export type TaskPropertyFindManyArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * Filter, which TaskProperties to fetch.
     * 
    **/
    where?: TaskPropertyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskProperties to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TaskProperties.
     * 
    **/
    cursor?: TaskPropertyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskProperties from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskProperties.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TaskPropertyScalarFieldEnum>
  }


  /**
   * TaskProperty create
   */
  export type TaskPropertyCreateArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * The data needed to create a TaskProperty.
     * 
    **/
    data: XOR<TaskPropertyCreateInput, TaskPropertyUncheckedCreateInput>
  }


  /**
   * TaskProperty createMany
   */
  export type TaskPropertyCreateManyArgs = {
    /**
     * The data used to create many TaskProperties.
     * 
    **/
    data: Enumerable<TaskPropertyCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * TaskProperty update
   */
  export type TaskPropertyUpdateArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * The data needed to update a TaskProperty.
     * 
    **/
    data: XOR<TaskPropertyUpdateInput, TaskPropertyUncheckedUpdateInput>
    /**
     * Choose, which TaskProperty to update.
     * 
    **/
    where: TaskPropertyWhereUniqueInput
  }


  /**
   * TaskProperty updateMany
   */
  export type TaskPropertyUpdateManyArgs = {
    /**
     * The data used to update TaskProperties.
     * 
    **/
    data: XOR<TaskPropertyUpdateManyMutationInput, TaskPropertyUncheckedUpdateManyInput>
    /**
     * Filter which TaskProperties to update
     * 
    **/
    where?: TaskPropertyWhereInput
  }


  /**
   * TaskProperty upsert
   */
  export type TaskPropertyUpsertArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * The filter to search for the TaskProperty to update in case it exists.
     * 
    **/
    where: TaskPropertyWhereUniqueInput
    /**
     * In case the TaskProperty found by the `where` argument doesn't exist, create a new TaskProperty with this data.
     * 
    **/
    create: XOR<TaskPropertyCreateInput, TaskPropertyUncheckedCreateInput>
    /**
     * In case the TaskProperty was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TaskPropertyUpdateInput, TaskPropertyUncheckedUpdateInput>
  }


  /**
   * TaskProperty delete
   */
  export type TaskPropertyDeleteArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    /**
     * Filter which TaskProperty to delete.
     * 
    **/
    where: TaskPropertyWhereUniqueInput
  }


  /**
   * TaskProperty deleteMany
   */
  export type TaskPropertyDeleteManyArgs = {
    /**
     * Filter which TaskProperties to delete
     * 
    **/
    where?: TaskPropertyWhereInput
  }


  /**
   * TaskProperty.TaskPropertyValue
   */
  export type TaskProperty$TaskPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    where?: TaskPropertyValueWhereInput
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    cursor?: TaskPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }


  /**
   * TaskProperty without action
   */
  export type TaskPropertyArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
  }



  /**
   * Model TaskPropertyValue
   */


  export type AggregateTaskPropertyValue = {
    _count: TaskPropertyValueCountAggregateOutputType | null
    _min: TaskPropertyValueMinAggregateOutputType | null
    _max: TaskPropertyValueMaxAggregateOutputType | null
  }

  export type TaskPropertyValueMinAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskPropertyId: string | null
    taskId: string | null
    tenantId: string | null
  }

  export type TaskPropertyValueMaxAggregateOutputType = {
    id: string | null
    value: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskPropertyId: string | null
    taskId: string | null
    tenantId: string | null
  }

  export type TaskPropertyValueCountAggregateOutputType = {
    id: number
    value: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    taskPropertyId: number
    taskId: number
    tenantId: number
    _all: number
  }


  export type TaskPropertyValueMinAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskPropertyId?: true
    taskId?: true
    tenantId?: true
  }

  export type TaskPropertyValueMaxAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskPropertyId?: true
    taskId?: true
    tenantId?: true
  }

  export type TaskPropertyValueCountAggregateInputType = {
    id?: true
    value?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskPropertyId?: true
    taskId?: true
    tenantId?: true
    _all?: true
  }

  export type TaskPropertyValueAggregateArgs = {
    /**
     * Filter which TaskPropertyValue to aggregate.
     * 
    **/
    where?: TaskPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TaskPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TaskPropertyValues
    **/
    _count?: true | TaskPropertyValueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskPropertyValueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskPropertyValueMaxAggregateInputType
  }

  export type GetTaskPropertyValueAggregateType<T extends TaskPropertyValueAggregateArgs> = {
        [P in keyof T & keyof AggregateTaskPropertyValue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaskPropertyValue[P]>
      : GetScalarType<T[P], AggregateTaskPropertyValue[P]>
  }




  export type TaskPropertyValueGroupByArgs = {
    where?: TaskPropertyValueWhereInput
    orderBy?: Enumerable<TaskPropertyValueOrderByWithAggregationInput>
    by: Array<TaskPropertyValueScalarFieldEnum>
    having?: TaskPropertyValueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskPropertyValueCountAggregateInputType | true
    _min?: TaskPropertyValueMinAggregateInputType
    _max?: TaskPropertyValueMaxAggregateInputType
  }


  export type TaskPropertyValueGroupByOutputType = {
    id: string
    value: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskPropertyId: string
    taskId: string
    tenantId: string
    _count: TaskPropertyValueCountAggregateOutputType | null
    _min: TaskPropertyValueMinAggregateOutputType | null
    _max: TaskPropertyValueMaxAggregateOutputType | null
  }

  type GetTaskPropertyValueGroupByPayload<T extends TaskPropertyValueGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TaskPropertyValueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskPropertyValueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskPropertyValueGroupByOutputType[P]>
            : GetScalarType<T[P], TaskPropertyValueGroupByOutputType[P]>
        }
      >
    >


  export type TaskPropertyValueSelect = {
    id?: boolean
    value?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    taskPropertyId?: boolean
    taskId?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    Task?: boolean | TaskArgs
    TaskProperty?: boolean | TaskPropertyArgs
    Tenant?: boolean | TenantArgs
  }


  export type TaskPropertyValueInclude = {
    User?: boolean | UserArgs
    Task?: boolean | TaskArgs
    TaskProperty?: boolean | TaskPropertyArgs
    Tenant?: boolean | TenantArgs
  } 

  export type TaskPropertyValueGetPayload<S extends boolean | null | undefined | TaskPropertyValueArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaskPropertyValue :
    S extends undefined ? never :
    S extends { include: any } & (TaskPropertyValueArgs | TaskPropertyValueFindManyArgs)
    ? TaskPropertyValue  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['include'][P]> :
        P extends 'TaskProperty' ? TaskPropertyGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaskPropertyValueArgs | TaskPropertyValueFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['select'][P]> :
        P extends 'TaskProperty' ? TaskPropertyGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof TaskPropertyValue ? TaskPropertyValue[P] : never
  } 
      : TaskPropertyValue


  type TaskPropertyValueCountArgs = Merge<
    Omit<TaskPropertyValueFindManyArgs, 'select' | 'include'> & {
      select?: TaskPropertyValueCountAggregateInputType | true
    }
  >

  export interface TaskPropertyValueDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one TaskPropertyValue that matches the filter.
     * @param {TaskPropertyValueFindUniqueArgs} args - Arguments to find a TaskPropertyValue
     * @example
     * // Get one TaskPropertyValue
     * const taskPropertyValue = await prisma.taskPropertyValue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaskPropertyValueFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaskPropertyValueFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TaskPropertyValue'> extends True ? Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>> : Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T> | null, null>

    /**
     * Find one TaskPropertyValue that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaskPropertyValueFindUniqueOrThrowArgs} args - Arguments to find a TaskPropertyValue
     * @example
     * // Get one TaskPropertyValue
     * const taskPropertyValue = await prisma.taskPropertyValue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaskPropertyValueFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaskPropertyValueFindUniqueOrThrowArgs>
    ): Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>>

    /**
     * Find the first TaskPropertyValue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueFindFirstArgs} args - Arguments to find a TaskPropertyValue
     * @example
     * // Get one TaskPropertyValue
     * const taskPropertyValue = await prisma.taskPropertyValue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaskPropertyValueFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaskPropertyValueFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TaskPropertyValue'> extends True ? Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>> : Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T> | null, null>

    /**
     * Find the first TaskPropertyValue that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueFindFirstOrThrowArgs} args - Arguments to find a TaskPropertyValue
     * @example
     * // Get one TaskPropertyValue
     * const taskPropertyValue = await prisma.taskPropertyValue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaskPropertyValueFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaskPropertyValueFindFirstOrThrowArgs>
    ): Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>>

    /**
     * Find zero or more TaskPropertyValues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TaskPropertyValues
     * const taskPropertyValues = await prisma.taskPropertyValue.findMany()
     * 
     * // Get first 10 TaskPropertyValues
     * const taskPropertyValues = await prisma.taskPropertyValue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskPropertyValueWithIdOnly = await prisma.taskPropertyValue.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TaskPropertyValueFindManyArgs>(
      args?: SelectSubset<T, TaskPropertyValueFindManyArgs>
    ): PrismaPromise<Array<TaskPropertyValueGetPayload<T>>>

    /**
     * Create a TaskPropertyValue.
     * @param {TaskPropertyValueCreateArgs} args - Arguments to create a TaskPropertyValue.
     * @example
     * // Create one TaskPropertyValue
     * const TaskPropertyValue = await prisma.taskPropertyValue.create({
     *   data: {
     *     // ... data to create a TaskPropertyValue
     *   }
     * })
     * 
    **/
    create<T extends TaskPropertyValueCreateArgs>(
      args: SelectSubset<T, TaskPropertyValueCreateArgs>
    ): Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>>

    /**
     * Create many TaskPropertyValues.
     *     @param {TaskPropertyValueCreateManyArgs} args - Arguments to create many TaskPropertyValues.
     *     @example
     *     // Create many TaskPropertyValues
     *     const taskPropertyValue = await prisma.taskPropertyValue.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaskPropertyValueCreateManyArgs>(
      args?: SelectSubset<T, TaskPropertyValueCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a TaskPropertyValue.
     * @param {TaskPropertyValueDeleteArgs} args - Arguments to delete one TaskPropertyValue.
     * @example
     * // Delete one TaskPropertyValue
     * const TaskPropertyValue = await prisma.taskPropertyValue.delete({
     *   where: {
     *     // ... filter to delete one TaskPropertyValue
     *   }
     * })
     * 
    **/
    delete<T extends TaskPropertyValueDeleteArgs>(
      args: SelectSubset<T, TaskPropertyValueDeleteArgs>
    ): Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>>

    /**
     * Update one TaskPropertyValue.
     * @param {TaskPropertyValueUpdateArgs} args - Arguments to update one TaskPropertyValue.
     * @example
     * // Update one TaskPropertyValue
     * const taskPropertyValue = await prisma.taskPropertyValue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaskPropertyValueUpdateArgs>(
      args: SelectSubset<T, TaskPropertyValueUpdateArgs>
    ): Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>>

    /**
     * Delete zero or more TaskPropertyValues.
     * @param {TaskPropertyValueDeleteManyArgs} args - Arguments to filter TaskPropertyValues to delete.
     * @example
     * // Delete a few TaskPropertyValues
     * const { count } = await prisma.taskPropertyValue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaskPropertyValueDeleteManyArgs>(
      args?: SelectSubset<T, TaskPropertyValueDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TaskPropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TaskPropertyValues
     * const taskPropertyValue = await prisma.taskPropertyValue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaskPropertyValueUpdateManyArgs>(
      args: SelectSubset<T, TaskPropertyValueUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TaskPropertyValue.
     * @param {TaskPropertyValueUpsertArgs} args - Arguments to update or create a TaskPropertyValue.
     * @example
     * // Update or create a TaskPropertyValue
     * const taskPropertyValue = await prisma.taskPropertyValue.upsert({
     *   create: {
     *     // ... data to create a TaskPropertyValue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TaskPropertyValue we want to update
     *   }
     * })
    **/
    upsert<T extends TaskPropertyValueUpsertArgs>(
      args: SelectSubset<T, TaskPropertyValueUpsertArgs>
    ): Prisma__TaskPropertyValueClient<TaskPropertyValueGetPayload<T>>

    /**
     * Count the number of TaskPropertyValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueCountArgs} args - Arguments to filter TaskPropertyValues to count.
     * @example
     * // Count the number of TaskPropertyValues
     * const count = await prisma.taskPropertyValue.count({
     *   where: {
     *     // ... the filter for the TaskPropertyValues we want to count
     *   }
     * })
    **/
    count<T extends TaskPropertyValueCountArgs>(
      args?: Subset<T, TaskPropertyValueCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskPropertyValueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TaskPropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskPropertyValueAggregateArgs>(args: Subset<T, TaskPropertyValueAggregateArgs>): PrismaPromise<GetTaskPropertyValueAggregateType<T>>

    /**
     * Group by TaskPropertyValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskPropertyValueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskPropertyValueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskPropertyValueGroupByArgs['orderBy'] }
        : { orderBy?: TaskPropertyValueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskPropertyValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskPropertyValueGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for TaskPropertyValue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaskPropertyValueClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Task<T extends TaskArgs= {}>(args?: Subset<T, TaskArgs>): Prisma__TaskClient<TaskGetPayload<T> | Null>;

    TaskProperty<T extends TaskPropertyArgs= {}>(args?: Subset<T, TaskPropertyArgs>): Prisma__TaskPropertyClient<TaskPropertyGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * TaskPropertyValue base type for findUnique actions
   */
  export type TaskPropertyValueFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * Filter, which TaskPropertyValue to fetch.
     * 
    **/
    where: TaskPropertyValueWhereUniqueInput
  }

  /**
   * TaskPropertyValue findUnique
   */
  export interface TaskPropertyValueFindUniqueArgs extends TaskPropertyValueFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TaskPropertyValue findUniqueOrThrow
   */
  export type TaskPropertyValueFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * Filter, which TaskPropertyValue to fetch.
     * 
    **/
    where: TaskPropertyValueWhereUniqueInput
  }


  /**
   * TaskPropertyValue base type for findFirst actions
   */
  export type TaskPropertyValueFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * Filter, which TaskPropertyValue to fetch.
     * 
    **/
    where?: TaskPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaskPropertyValues.
     * 
    **/
    cursor?: TaskPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaskPropertyValues.
     * 
    **/
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }

  /**
   * TaskPropertyValue findFirst
   */
  export interface TaskPropertyValueFindFirstArgs extends TaskPropertyValueFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TaskPropertyValue findFirstOrThrow
   */
  export type TaskPropertyValueFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * Filter, which TaskPropertyValue to fetch.
     * 
    **/
    where?: TaskPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaskPropertyValues.
     * 
    **/
    cursor?: TaskPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskPropertyValues.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaskPropertyValues.
     * 
    **/
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }


  /**
   * TaskPropertyValue findMany
   */
  export type TaskPropertyValueFindManyArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * Filter, which TaskPropertyValues to fetch.
     * 
    **/
    where?: TaskPropertyValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskPropertyValues to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TaskPropertyValues.
     * 
    **/
    cursor?: TaskPropertyValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskPropertyValues from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskPropertyValues.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }


  /**
   * TaskPropertyValue create
   */
  export type TaskPropertyValueCreateArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * The data needed to create a TaskPropertyValue.
     * 
    **/
    data: XOR<TaskPropertyValueCreateInput, TaskPropertyValueUncheckedCreateInput>
  }


  /**
   * TaskPropertyValue createMany
   */
  export type TaskPropertyValueCreateManyArgs = {
    /**
     * The data used to create many TaskPropertyValues.
     * 
    **/
    data: Enumerable<TaskPropertyValueCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * TaskPropertyValue update
   */
  export type TaskPropertyValueUpdateArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * The data needed to update a TaskPropertyValue.
     * 
    **/
    data: XOR<TaskPropertyValueUpdateInput, TaskPropertyValueUncheckedUpdateInput>
    /**
     * Choose, which TaskPropertyValue to update.
     * 
    **/
    where: TaskPropertyValueWhereUniqueInput
  }


  /**
   * TaskPropertyValue updateMany
   */
  export type TaskPropertyValueUpdateManyArgs = {
    /**
     * The data used to update TaskPropertyValues.
     * 
    **/
    data: XOR<TaskPropertyValueUpdateManyMutationInput, TaskPropertyValueUncheckedUpdateManyInput>
    /**
     * Filter which TaskPropertyValues to update
     * 
    **/
    where?: TaskPropertyValueWhereInput
  }


  /**
   * TaskPropertyValue upsert
   */
  export type TaskPropertyValueUpsertArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * The filter to search for the TaskPropertyValue to update in case it exists.
     * 
    **/
    where: TaskPropertyValueWhereUniqueInput
    /**
     * In case the TaskPropertyValue found by the `where` argument doesn't exist, create a new TaskPropertyValue with this data.
     * 
    **/
    create: XOR<TaskPropertyValueCreateInput, TaskPropertyValueUncheckedCreateInput>
    /**
     * In case the TaskPropertyValue was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TaskPropertyValueUpdateInput, TaskPropertyValueUncheckedUpdateInput>
  }


  /**
   * TaskPropertyValue delete
   */
  export type TaskPropertyValueDeleteArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    /**
     * Filter which TaskPropertyValue to delete.
     * 
    **/
    where: TaskPropertyValueWhereUniqueInput
  }


  /**
   * TaskPropertyValue deleteMany
   */
  export type TaskPropertyValueDeleteManyArgs = {
    /**
     * Filter which TaskPropertyValues to delete
     * 
    **/
    where?: TaskPropertyValueWhereInput
  }


  /**
   * TaskPropertyValue without action
   */
  export type TaskPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
  }



  /**
   * Model TaskStatus
   */


  export type AggregateTaskStatus = {
    _count: TaskStatusCountAggregateOutputType | null
    _avg: TaskStatusAvgAggregateOutputType | null
    _sum: TaskStatusSumAggregateOutputType | null
    _min: TaskStatusMinAggregateOutputType | null
    _max: TaskStatusMaxAggregateOutputType | null
  }

  export type TaskStatusAvgAggregateOutputType = {
    displayOrder: number | null
  }

  export type TaskStatusSumAggregateOutputType = {
    displayOrder: number | null
  }

  export type TaskStatusMinAggregateOutputType = {
    id: string | null
    displayOrder: number | null
    iconColor: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type TaskStatusMaxAggregateOutputType = {
    id: string | null
    displayOrder: number | null
    iconColor: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string | null
  }

  export type TaskStatusCountAggregateOutputType = {
    id: number
    displayOrder: number
    iconColor: number
    name: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdBy: number
    tenantId: number
    _all: number
  }


  export type TaskStatusAvgAggregateInputType = {
    displayOrder?: true
  }

  export type TaskStatusSumAggregateInputType = {
    displayOrder?: true
  }

  export type TaskStatusMinAggregateInputType = {
    id?: true
    displayOrder?: true
    iconColor?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type TaskStatusMaxAggregateInputType = {
    id?: true
    displayOrder?: true
    iconColor?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
  }

  export type TaskStatusCountAggregateInputType = {
    id?: true
    displayOrder?: true
    iconColor?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    tenantId?: true
    _all?: true
  }

  export type TaskStatusAggregateArgs = {
    /**
     * Filter which TaskStatus to aggregate.
     * 
    **/
    where?: TaskStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskStatuses to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskStatusOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TaskStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskStatuses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskStatuses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TaskStatuses
    **/
    _count?: true | TaskStatusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TaskStatusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TaskStatusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaskStatusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaskStatusMaxAggregateInputType
  }

  export type GetTaskStatusAggregateType<T extends TaskStatusAggregateArgs> = {
        [P in keyof T & keyof AggregateTaskStatus]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaskStatus[P]>
      : GetScalarType<T[P], AggregateTaskStatus[P]>
  }




  export type TaskStatusGroupByArgs = {
    where?: TaskStatusWhereInput
    orderBy?: Enumerable<TaskStatusOrderByWithAggregationInput>
    by: Array<TaskStatusScalarFieldEnum>
    having?: TaskStatusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaskStatusCountAggregateInputType | true
    _avg?: TaskStatusAvgAggregateInputType
    _sum?: TaskStatusSumAggregateInputType
    _min?: TaskStatusMinAggregateInputType
    _max?: TaskStatusMaxAggregateInputType
  }


  export type TaskStatusGroupByOutputType = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdBy: string | null
    tenantId: string
    _count: TaskStatusCountAggregateOutputType | null
    _avg: TaskStatusAvgAggregateOutputType | null
    _sum: TaskStatusSumAggregateOutputType | null
    _min: TaskStatusMinAggregateOutputType | null
    _max: TaskStatusMaxAggregateOutputType | null
  }

  type GetTaskStatusGroupByPayload<T extends TaskStatusGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TaskStatusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaskStatusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaskStatusGroupByOutputType[P]>
            : GetScalarType<T[P], TaskStatusGroupByOutputType[P]>
        }
      >
    >


  export type TaskStatusSelect = {
    id?: boolean
    displayOrder?: boolean
    iconColor?: boolean
    name?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    tenantId?: boolean
    Task?: boolean | TaskStatus$TaskArgs
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    _count?: boolean | TaskStatusCountOutputTypeArgs
  }


  export type TaskStatusInclude = {
    Task?: boolean | TaskStatus$TaskArgs
    User?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    _count?: boolean | TaskStatusCountOutputTypeArgs
  } 

  export type TaskStatusGetPayload<S extends boolean | null | undefined | TaskStatusArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaskStatus :
    S extends undefined ? never :
    S extends { include: any } & (TaskStatusArgs | TaskStatusFindManyArgs)
    ? TaskStatus  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'Task' ? Array < TaskGetPayload<S['include'][P]>>  :
        P extends 'User' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends '_count' ? TaskStatusCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaskStatusArgs | TaskStatusFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'Task' ? Array < TaskGetPayload<S['select'][P]>>  :
        P extends 'User' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends '_count' ? TaskStatusCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof TaskStatus ? TaskStatus[P] : never
  } 
      : TaskStatus


  type TaskStatusCountArgs = Merge<
    Omit<TaskStatusFindManyArgs, 'select' | 'include'> & {
      select?: TaskStatusCountAggregateInputType | true
    }
  >

  export interface TaskStatusDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one TaskStatus that matches the filter.
     * @param {TaskStatusFindUniqueArgs} args - Arguments to find a TaskStatus
     * @example
     * // Get one TaskStatus
     * const taskStatus = await prisma.taskStatus.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaskStatusFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaskStatusFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TaskStatus'> extends True ? Prisma__TaskStatusClient<TaskStatusGetPayload<T>> : Prisma__TaskStatusClient<TaskStatusGetPayload<T> | null, null>

    /**
     * Find one TaskStatus that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaskStatusFindUniqueOrThrowArgs} args - Arguments to find a TaskStatus
     * @example
     * // Get one TaskStatus
     * const taskStatus = await prisma.taskStatus.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaskStatusFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaskStatusFindUniqueOrThrowArgs>
    ): Prisma__TaskStatusClient<TaskStatusGetPayload<T>>

    /**
     * Find the first TaskStatus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusFindFirstArgs} args - Arguments to find a TaskStatus
     * @example
     * // Get one TaskStatus
     * const taskStatus = await prisma.taskStatus.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaskStatusFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaskStatusFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TaskStatus'> extends True ? Prisma__TaskStatusClient<TaskStatusGetPayload<T>> : Prisma__TaskStatusClient<TaskStatusGetPayload<T> | null, null>

    /**
     * Find the first TaskStatus that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusFindFirstOrThrowArgs} args - Arguments to find a TaskStatus
     * @example
     * // Get one TaskStatus
     * const taskStatus = await prisma.taskStatus.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaskStatusFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaskStatusFindFirstOrThrowArgs>
    ): Prisma__TaskStatusClient<TaskStatusGetPayload<T>>

    /**
     * Find zero or more TaskStatuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TaskStatuses
     * const taskStatuses = await prisma.taskStatus.findMany()
     * 
     * // Get first 10 TaskStatuses
     * const taskStatuses = await prisma.taskStatus.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const taskStatusWithIdOnly = await prisma.taskStatus.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TaskStatusFindManyArgs>(
      args?: SelectSubset<T, TaskStatusFindManyArgs>
    ): PrismaPromise<Array<TaskStatusGetPayload<T>>>

    /**
     * Create a TaskStatus.
     * @param {TaskStatusCreateArgs} args - Arguments to create a TaskStatus.
     * @example
     * // Create one TaskStatus
     * const TaskStatus = await prisma.taskStatus.create({
     *   data: {
     *     // ... data to create a TaskStatus
     *   }
     * })
     * 
    **/
    create<T extends TaskStatusCreateArgs>(
      args: SelectSubset<T, TaskStatusCreateArgs>
    ): Prisma__TaskStatusClient<TaskStatusGetPayload<T>>

    /**
     * Create many TaskStatuses.
     *     @param {TaskStatusCreateManyArgs} args - Arguments to create many TaskStatuses.
     *     @example
     *     // Create many TaskStatuses
     *     const taskStatus = await prisma.taskStatus.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaskStatusCreateManyArgs>(
      args?: SelectSubset<T, TaskStatusCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a TaskStatus.
     * @param {TaskStatusDeleteArgs} args - Arguments to delete one TaskStatus.
     * @example
     * // Delete one TaskStatus
     * const TaskStatus = await prisma.taskStatus.delete({
     *   where: {
     *     // ... filter to delete one TaskStatus
     *   }
     * })
     * 
    **/
    delete<T extends TaskStatusDeleteArgs>(
      args: SelectSubset<T, TaskStatusDeleteArgs>
    ): Prisma__TaskStatusClient<TaskStatusGetPayload<T>>

    /**
     * Update one TaskStatus.
     * @param {TaskStatusUpdateArgs} args - Arguments to update one TaskStatus.
     * @example
     * // Update one TaskStatus
     * const taskStatus = await prisma.taskStatus.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaskStatusUpdateArgs>(
      args: SelectSubset<T, TaskStatusUpdateArgs>
    ): Prisma__TaskStatusClient<TaskStatusGetPayload<T>>

    /**
     * Delete zero or more TaskStatuses.
     * @param {TaskStatusDeleteManyArgs} args - Arguments to filter TaskStatuses to delete.
     * @example
     * // Delete a few TaskStatuses
     * const { count } = await prisma.taskStatus.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaskStatusDeleteManyArgs>(
      args?: SelectSubset<T, TaskStatusDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TaskStatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TaskStatuses
     * const taskStatus = await prisma.taskStatus.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaskStatusUpdateManyArgs>(
      args: SelectSubset<T, TaskStatusUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TaskStatus.
     * @param {TaskStatusUpsertArgs} args - Arguments to update or create a TaskStatus.
     * @example
     * // Update or create a TaskStatus
     * const taskStatus = await prisma.taskStatus.upsert({
     *   create: {
     *     // ... data to create a TaskStatus
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TaskStatus we want to update
     *   }
     * })
    **/
    upsert<T extends TaskStatusUpsertArgs>(
      args: SelectSubset<T, TaskStatusUpsertArgs>
    ): Prisma__TaskStatusClient<TaskStatusGetPayload<T>>

    /**
     * Count the number of TaskStatuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusCountArgs} args - Arguments to filter TaskStatuses to count.
     * @example
     * // Count the number of TaskStatuses
     * const count = await prisma.taskStatus.count({
     *   where: {
     *     // ... the filter for the TaskStatuses we want to count
     *   }
     * })
    **/
    count<T extends TaskStatusCountArgs>(
      args?: Subset<T, TaskStatusCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaskStatusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TaskStatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaskStatusAggregateArgs>(args: Subset<T, TaskStatusAggregateArgs>): PrismaPromise<GetTaskStatusAggregateType<T>>

    /**
     * Group by TaskStatus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaskStatusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaskStatusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaskStatusGroupByArgs['orderBy'] }
        : { orderBy?: TaskStatusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaskStatusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskStatusGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for TaskStatus.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaskStatusClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    Task<T extends TaskStatus$TaskArgs= {}>(args?: Subset<T, TaskStatus$TaskArgs>): PrismaPromise<Array<TaskGetPayload<T>>| Null>;

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * TaskStatus base type for findUnique actions
   */
  export type TaskStatusFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * Filter, which TaskStatus to fetch.
     * 
    **/
    where: TaskStatusWhereUniqueInput
  }

  /**
   * TaskStatus findUnique
   */
  export interface TaskStatusFindUniqueArgs extends TaskStatusFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TaskStatus findUniqueOrThrow
   */
  export type TaskStatusFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * Filter, which TaskStatus to fetch.
     * 
    **/
    where: TaskStatusWhereUniqueInput
  }


  /**
   * TaskStatus base type for findFirst actions
   */
  export type TaskStatusFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * Filter, which TaskStatus to fetch.
     * 
    **/
    where?: TaskStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskStatuses to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskStatusOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaskStatuses.
     * 
    **/
    cursor?: TaskStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskStatuses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskStatuses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaskStatuses.
     * 
    **/
    distinct?: Enumerable<TaskStatusScalarFieldEnum>
  }

  /**
   * TaskStatus findFirst
   */
  export interface TaskStatusFindFirstArgs extends TaskStatusFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TaskStatus findFirstOrThrow
   */
  export type TaskStatusFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * Filter, which TaskStatus to fetch.
     * 
    **/
    where?: TaskStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskStatuses to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskStatusOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TaskStatuses.
     * 
    **/
    cursor?: TaskStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskStatuses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskStatuses.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TaskStatuses.
     * 
    **/
    distinct?: Enumerable<TaskStatusScalarFieldEnum>
  }


  /**
   * TaskStatus findMany
   */
  export type TaskStatusFindManyArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * Filter, which TaskStatuses to fetch.
     * 
    **/
    where?: TaskStatusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TaskStatuses to fetch.
     * 
    **/
    orderBy?: Enumerable<TaskStatusOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TaskStatuses.
     * 
    **/
    cursor?: TaskStatusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TaskStatuses from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TaskStatuses.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TaskStatusScalarFieldEnum>
  }


  /**
   * TaskStatus create
   */
  export type TaskStatusCreateArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * The data needed to create a TaskStatus.
     * 
    **/
    data: XOR<TaskStatusCreateInput, TaskStatusUncheckedCreateInput>
  }


  /**
   * TaskStatus createMany
   */
  export type TaskStatusCreateManyArgs = {
    /**
     * The data used to create many TaskStatuses.
     * 
    **/
    data: Enumerable<TaskStatusCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * TaskStatus update
   */
  export type TaskStatusUpdateArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * The data needed to update a TaskStatus.
     * 
    **/
    data: XOR<TaskStatusUpdateInput, TaskStatusUncheckedUpdateInput>
    /**
     * Choose, which TaskStatus to update.
     * 
    **/
    where: TaskStatusWhereUniqueInput
  }


  /**
   * TaskStatus updateMany
   */
  export type TaskStatusUpdateManyArgs = {
    /**
     * The data used to update TaskStatuses.
     * 
    **/
    data: XOR<TaskStatusUpdateManyMutationInput, TaskStatusUncheckedUpdateManyInput>
    /**
     * Filter which TaskStatuses to update
     * 
    **/
    where?: TaskStatusWhereInput
  }


  /**
   * TaskStatus upsert
   */
  export type TaskStatusUpsertArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * The filter to search for the TaskStatus to update in case it exists.
     * 
    **/
    where: TaskStatusWhereUniqueInput
    /**
     * In case the TaskStatus found by the `where` argument doesn't exist, create a new TaskStatus with this data.
     * 
    **/
    create: XOR<TaskStatusCreateInput, TaskStatusUncheckedCreateInput>
    /**
     * In case the TaskStatus was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TaskStatusUpdateInput, TaskStatusUncheckedUpdateInput>
  }


  /**
   * TaskStatus delete
   */
  export type TaskStatusDeleteArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    /**
     * Filter which TaskStatus to delete.
     * 
    **/
    where: TaskStatusWhereUniqueInput
  }


  /**
   * TaskStatus deleteMany
   */
  export type TaskStatusDeleteManyArgs = {
    /**
     * Filter which TaskStatuses to delete
     * 
    **/
    where?: TaskStatusWhereInput
  }


  /**
   * TaskStatus.Task
   */
  export type TaskStatus$TaskArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    where?: TaskWhereInput
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * TaskStatus without action
   */
  export type TaskStatusArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
  }



  /**
   * Model Tenant
   */


  export type AggregateTenant = {
    _count: TenantCountAggregateOutputType | null
    _min: TenantMinAggregateOutputType | null
    _max: TenantMaxAggregateOutputType | null
  }

  export type TenantMinAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
  }

  export type TenantMaxAggregateOutputType = {
    id: string | null
    name: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
  }

  export type TenantCountAggregateOutputType = {
    id: number
    name: number
    settings: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    _all: number
  }


  export type TenantMinAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
  }

  export type TenantMaxAggregateInputType = {
    id?: true
    name?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
  }

  export type TenantCountAggregateInputType = {
    id?: true
    name?: true
    settings?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    _all?: true
  }

  export type TenantAggregateArgs = {
    /**
     * Filter which Tenant to aggregate.
     * 
    **/
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tenants
    **/
    _count?: true | TenantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TenantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TenantMaxAggregateInputType
  }

  export type GetTenantAggregateType<T extends TenantAggregateArgs> = {
        [P in keyof T & keyof AggregateTenant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTenant[P]>
      : GetScalarType<T[P], AggregateTenant[P]>
  }




  export type TenantGroupByArgs = {
    where?: TenantWhereInput
    orderBy?: Enumerable<TenantOrderByWithAggregationInput>
    by: Array<TenantScalarFieldEnum>
    having?: TenantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TenantCountAggregateInputType | true
    _min?: TenantMinAggregateInputType
    _max?: TenantMaxAggregateInputType
  }


  export type TenantGroupByOutputType = {
    id: string
    name: string
    settings: JsonValue
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    _count: TenantCountAggregateOutputType | null
    _min: TenantMinAggregateOutputType | null
    _max: TenantMaxAggregateOutputType | null
  }

  type GetTenantGroupByPayload<T extends TenantGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TenantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TenantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TenantGroupByOutputType[P]>
            : GetScalarType<T[P], TenantGroupByOutputType[P]>
        }
      >
    >


  export type TenantSelect = {
    id?: boolean
    name?: boolean
    settings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    ApiKey?: boolean | Tenant$ApiKeyArgs
    DailyLog?: boolean | Tenant$DailyLogArgs
    DailyLogItem?: boolean | Tenant$DailyLogItemArgs
    Equipment?: boolean | Tenant$EquipmentArgs
    EquipmentProperty?: boolean | Tenant$EquipmentPropertyArgs
    EquipmentPropertyValue?: boolean | Tenant$EquipmentPropertyValueArgs
    Feedback?: boolean | Tenant$FeedbackArgs
    File?: boolean | Tenant$FileArgs
    FileProperty?: boolean | Tenant$FilePropertyArgs
    FilePropertyValue?: boolean | Tenant$FilePropertyValueArgs
    Image?: boolean | Tenant$ImageArgs
    LocationEntry?: boolean | Tenant$LocationEntryArgs
    Project?: boolean | Tenant$ProjectArgs
    ProjectProperty?: boolean | Tenant$ProjectPropertyArgs
    ProjectPropertyValue?: boolean | Tenant$ProjectPropertyValueArgs
    Task?: boolean | Tenant$TaskArgs
    TaskProperty?: boolean | Tenant$TaskPropertyArgs
    TaskPropertyValue?: boolean | Tenant$TaskPropertyValueArgs
    TaskStatus?: boolean | Tenant$TaskStatusArgs
    User_Tenant_createdByToUser?: boolean | UserArgs
    TenantUser?: boolean | Tenant$TenantUserArgs
    TimeBlock?: boolean | Tenant$TimeBlockArgs
    User_User_currentTenantIdToTenant?: boolean | Tenant$User_User_currentTenantIdToTenantArgs
    UserTask?: boolean | Tenant$UserTaskArgs
    _count?: boolean | TenantCountOutputTypeArgs
  }


  export type TenantInclude = {
    ApiKey?: boolean | Tenant$ApiKeyArgs
    DailyLog?: boolean | Tenant$DailyLogArgs
    DailyLogItem?: boolean | Tenant$DailyLogItemArgs
    Equipment?: boolean | Tenant$EquipmentArgs
    EquipmentProperty?: boolean | Tenant$EquipmentPropertyArgs
    EquipmentPropertyValue?: boolean | Tenant$EquipmentPropertyValueArgs
    Feedback?: boolean | Tenant$FeedbackArgs
    File?: boolean | Tenant$FileArgs
    FileProperty?: boolean | Tenant$FilePropertyArgs
    FilePropertyValue?: boolean | Tenant$FilePropertyValueArgs
    Image?: boolean | Tenant$ImageArgs
    LocationEntry?: boolean | Tenant$LocationEntryArgs
    Project?: boolean | Tenant$ProjectArgs
    ProjectProperty?: boolean | Tenant$ProjectPropertyArgs
    ProjectPropertyValue?: boolean | Tenant$ProjectPropertyValueArgs
    Task?: boolean | Tenant$TaskArgs
    TaskProperty?: boolean | Tenant$TaskPropertyArgs
    TaskPropertyValue?: boolean | Tenant$TaskPropertyValueArgs
    TaskStatus?: boolean | Tenant$TaskStatusArgs
    User_Tenant_createdByToUser?: boolean | UserArgs
    TenantUser?: boolean | Tenant$TenantUserArgs
    TimeBlock?: boolean | Tenant$TimeBlockArgs
    User_User_currentTenantIdToTenant?: boolean | Tenant$User_User_currentTenantIdToTenantArgs
    UserTask?: boolean | Tenant$UserTaskArgs
    _count?: boolean | TenantCountOutputTypeArgs
  } 

  export type TenantGetPayload<S extends boolean | null | undefined | TenantArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Tenant :
    S extends undefined ? never :
    S extends { include: any } & (TenantArgs | TenantFindManyArgs)
    ? Tenant  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'ApiKey' ? Array < ApiKeyGetPayload<S['include'][P]>>  :
        P extends 'DailyLog' ? Array < DailyLogGetPayload<S['include'][P]>>  :
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['include'][P]>>  :
        P extends 'Equipment' ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'EquipmentProperty' ? Array < EquipmentPropertyGetPayload<S['include'][P]>>  :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Feedback' ? Array < FeedbackGetPayload<S['include'][P]>>  :
        P extends 'File' ? Array < FileGetPayload<S['include'][P]>>  :
        P extends 'FileProperty' ? Array < FilePropertyGetPayload<S['include'][P]>>  :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Image' ? Array < ImageGetPayload<S['include'][P]>>  :
        P extends 'LocationEntry' ? Array < LocationEntryGetPayload<S['include'][P]>>  :
        P extends 'Project' ? Array < ProjectGetPayload<S['include'][P]>>  :
        P extends 'ProjectProperty' ? Array < ProjectPropertyGetPayload<S['include'][P]>>  :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Task' ? Array < TaskGetPayload<S['include'][P]>>  :
        P extends 'TaskProperty' ? Array < TaskPropertyGetPayload<S['include'][P]>>  :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'TaskStatus' ? Array < TaskStatusGetPayload<S['include'][P]>>  :
        P extends 'User_Tenant_createdByToUser' ? UserGetPayload<S['include'][P]> | null :
        P extends 'TenantUser' ? Array < TenantUserGetPayload<S['include'][P]>>  :
        P extends 'TimeBlock' ? Array < TimeBlockGetPayload<S['include'][P]>>  :
        P extends 'User_User_currentTenantIdToTenant' ? Array < UserGetPayload<S['include'][P]>>  :
        P extends 'UserTask' ? Array < UserTaskGetPayload<S['include'][P]>>  :
        P extends '_count' ? TenantCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TenantArgs | TenantFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'ApiKey' ? Array < ApiKeyGetPayload<S['select'][P]>>  :
        P extends 'DailyLog' ? Array < DailyLogGetPayload<S['select'][P]>>  :
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['select'][P]>>  :
        P extends 'Equipment' ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'EquipmentProperty' ? Array < EquipmentPropertyGetPayload<S['select'][P]>>  :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Feedback' ? Array < FeedbackGetPayload<S['select'][P]>>  :
        P extends 'File' ? Array < FileGetPayload<S['select'][P]>>  :
        P extends 'FileProperty' ? Array < FilePropertyGetPayload<S['select'][P]>>  :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Image' ? Array < ImageGetPayload<S['select'][P]>>  :
        P extends 'LocationEntry' ? Array < LocationEntryGetPayload<S['select'][P]>>  :
        P extends 'Project' ? Array < ProjectGetPayload<S['select'][P]>>  :
        P extends 'ProjectProperty' ? Array < ProjectPropertyGetPayload<S['select'][P]>>  :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Task' ? Array < TaskGetPayload<S['select'][P]>>  :
        P extends 'TaskProperty' ? Array < TaskPropertyGetPayload<S['select'][P]>>  :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'TaskStatus' ? Array < TaskStatusGetPayload<S['select'][P]>>  :
        P extends 'User_Tenant_createdByToUser' ? UserGetPayload<S['select'][P]> | null :
        P extends 'TenantUser' ? Array < TenantUserGetPayload<S['select'][P]>>  :
        P extends 'TimeBlock' ? Array < TimeBlockGetPayload<S['select'][P]>>  :
        P extends 'User_User_currentTenantIdToTenant' ? Array < UserGetPayload<S['select'][P]>>  :
        P extends 'UserTask' ? Array < UserTaskGetPayload<S['select'][P]>>  :
        P extends '_count' ? TenantCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Tenant ? Tenant[P] : never
  } 
      : Tenant


  type TenantCountArgs = Merge<
    Omit<TenantFindManyArgs, 'select' | 'include'> & {
      select?: TenantCountAggregateInputType | true
    }
  >

  export interface TenantDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Tenant that matches the filter.
     * @param {TenantFindUniqueArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TenantFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TenantFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Tenant'> extends True ? Prisma__TenantClient<TenantGetPayload<T>> : Prisma__TenantClient<TenantGetPayload<T> | null, null>

    /**
     * Find one Tenant that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TenantFindUniqueOrThrowArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TenantFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TenantFindUniqueOrThrowArgs>
    ): Prisma__TenantClient<TenantGetPayload<T>>

    /**
     * Find the first Tenant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindFirstArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TenantFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TenantFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Tenant'> extends True ? Prisma__TenantClient<TenantGetPayload<T>> : Prisma__TenantClient<TenantGetPayload<T> | null, null>

    /**
     * Find the first Tenant that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindFirstOrThrowArgs} args - Arguments to find a Tenant
     * @example
     * // Get one Tenant
     * const tenant = await prisma.tenant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TenantFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TenantFindFirstOrThrowArgs>
    ): Prisma__TenantClient<TenantGetPayload<T>>

    /**
     * Find zero or more Tenants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tenants
     * const tenants = await prisma.tenant.findMany()
     * 
     * // Get first 10 Tenants
     * const tenants = await prisma.tenant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tenantWithIdOnly = await prisma.tenant.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TenantFindManyArgs>(
      args?: SelectSubset<T, TenantFindManyArgs>
    ): PrismaPromise<Array<TenantGetPayload<T>>>

    /**
     * Create a Tenant.
     * @param {TenantCreateArgs} args - Arguments to create a Tenant.
     * @example
     * // Create one Tenant
     * const Tenant = await prisma.tenant.create({
     *   data: {
     *     // ... data to create a Tenant
     *   }
     * })
     * 
    **/
    create<T extends TenantCreateArgs>(
      args: SelectSubset<T, TenantCreateArgs>
    ): Prisma__TenantClient<TenantGetPayload<T>>

    /**
     * Create many Tenants.
     *     @param {TenantCreateManyArgs} args - Arguments to create many Tenants.
     *     @example
     *     // Create many Tenants
     *     const tenant = await prisma.tenant.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TenantCreateManyArgs>(
      args?: SelectSubset<T, TenantCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Tenant.
     * @param {TenantDeleteArgs} args - Arguments to delete one Tenant.
     * @example
     * // Delete one Tenant
     * const Tenant = await prisma.tenant.delete({
     *   where: {
     *     // ... filter to delete one Tenant
     *   }
     * })
     * 
    **/
    delete<T extends TenantDeleteArgs>(
      args: SelectSubset<T, TenantDeleteArgs>
    ): Prisma__TenantClient<TenantGetPayload<T>>

    /**
     * Update one Tenant.
     * @param {TenantUpdateArgs} args - Arguments to update one Tenant.
     * @example
     * // Update one Tenant
     * const tenant = await prisma.tenant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TenantUpdateArgs>(
      args: SelectSubset<T, TenantUpdateArgs>
    ): Prisma__TenantClient<TenantGetPayload<T>>

    /**
     * Delete zero or more Tenants.
     * @param {TenantDeleteManyArgs} args - Arguments to filter Tenants to delete.
     * @example
     * // Delete a few Tenants
     * const { count } = await prisma.tenant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TenantDeleteManyArgs>(
      args?: SelectSubset<T, TenantDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tenants
     * const tenant = await prisma.tenant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TenantUpdateManyArgs>(
      args: SelectSubset<T, TenantUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Tenant.
     * @param {TenantUpsertArgs} args - Arguments to update or create a Tenant.
     * @example
     * // Update or create a Tenant
     * const tenant = await prisma.tenant.upsert({
     *   create: {
     *     // ... data to create a Tenant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tenant we want to update
     *   }
     * })
    **/
    upsert<T extends TenantUpsertArgs>(
      args: SelectSubset<T, TenantUpsertArgs>
    ): Prisma__TenantClient<TenantGetPayload<T>>

    /**
     * Count the number of Tenants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantCountArgs} args - Arguments to filter Tenants to count.
     * @example
     * // Count the number of Tenants
     * const count = await prisma.tenant.count({
     *   where: {
     *     // ... the filter for the Tenants we want to count
     *   }
     * })
    **/
    count<T extends TenantCountArgs>(
      args?: Subset<T, TenantCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TenantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tenant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TenantAggregateArgs>(args: Subset<T, TenantAggregateArgs>): PrismaPromise<GetTenantAggregateType<T>>

    /**
     * Group by Tenant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TenantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TenantGroupByArgs['orderBy'] }
        : { orderBy?: TenantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TenantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Tenant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TenantClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ApiKey<T extends Tenant$ApiKeyArgs= {}>(args?: Subset<T, Tenant$ApiKeyArgs>): PrismaPromise<Array<ApiKeyGetPayload<T>>| Null>;

    DailyLog<T extends Tenant$DailyLogArgs= {}>(args?: Subset<T, Tenant$DailyLogArgs>): PrismaPromise<Array<DailyLogGetPayload<T>>| Null>;

    DailyLogItem<T extends Tenant$DailyLogItemArgs= {}>(args?: Subset<T, Tenant$DailyLogItemArgs>): PrismaPromise<Array<DailyLogItemGetPayload<T>>| Null>;

    Equipment<T extends Tenant$EquipmentArgs= {}>(args?: Subset<T, Tenant$EquipmentArgs>): PrismaPromise<Array<EquipmentGetPayload<T>>| Null>;

    EquipmentProperty<T extends Tenant$EquipmentPropertyArgs= {}>(args?: Subset<T, Tenant$EquipmentPropertyArgs>): PrismaPromise<Array<EquipmentPropertyGetPayload<T>>| Null>;

    EquipmentPropertyValue<T extends Tenant$EquipmentPropertyValueArgs= {}>(args?: Subset<T, Tenant$EquipmentPropertyValueArgs>): PrismaPromise<Array<EquipmentPropertyValueGetPayload<T>>| Null>;

    Feedback<T extends Tenant$FeedbackArgs= {}>(args?: Subset<T, Tenant$FeedbackArgs>): PrismaPromise<Array<FeedbackGetPayload<T>>| Null>;

    File<T extends Tenant$FileArgs= {}>(args?: Subset<T, Tenant$FileArgs>): PrismaPromise<Array<FileGetPayload<T>>| Null>;

    FileProperty<T extends Tenant$FilePropertyArgs= {}>(args?: Subset<T, Tenant$FilePropertyArgs>): PrismaPromise<Array<FilePropertyGetPayload<T>>| Null>;

    FilePropertyValue<T extends Tenant$FilePropertyValueArgs= {}>(args?: Subset<T, Tenant$FilePropertyValueArgs>): PrismaPromise<Array<FilePropertyValueGetPayload<T>>| Null>;

    Image<T extends Tenant$ImageArgs= {}>(args?: Subset<T, Tenant$ImageArgs>): PrismaPromise<Array<ImageGetPayload<T>>| Null>;

    LocationEntry<T extends Tenant$LocationEntryArgs= {}>(args?: Subset<T, Tenant$LocationEntryArgs>): PrismaPromise<Array<LocationEntryGetPayload<T>>| Null>;

    Project<T extends Tenant$ProjectArgs= {}>(args?: Subset<T, Tenant$ProjectArgs>): PrismaPromise<Array<ProjectGetPayload<T>>| Null>;

    ProjectProperty<T extends Tenant$ProjectPropertyArgs= {}>(args?: Subset<T, Tenant$ProjectPropertyArgs>): PrismaPromise<Array<ProjectPropertyGetPayload<T>>| Null>;

    ProjectPropertyValue<T extends Tenant$ProjectPropertyValueArgs= {}>(args?: Subset<T, Tenant$ProjectPropertyValueArgs>): PrismaPromise<Array<ProjectPropertyValueGetPayload<T>>| Null>;

    Task<T extends Tenant$TaskArgs= {}>(args?: Subset<T, Tenant$TaskArgs>): PrismaPromise<Array<TaskGetPayload<T>>| Null>;

    TaskProperty<T extends Tenant$TaskPropertyArgs= {}>(args?: Subset<T, Tenant$TaskPropertyArgs>): PrismaPromise<Array<TaskPropertyGetPayload<T>>| Null>;

    TaskPropertyValue<T extends Tenant$TaskPropertyValueArgs= {}>(args?: Subset<T, Tenant$TaskPropertyValueArgs>): PrismaPromise<Array<TaskPropertyValueGetPayload<T>>| Null>;

    TaskStatus<T extends Tenant$TaskStatusArgs= {}>(args?: Subset<T, Tenant$TaskStatusArgs>): PrismaPromise<Array<TaskStatusGetPayload<T>>| Null>;

    User_Tenant_createdByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    TenantUser<T extends Tenant$TenantUserArgs= {}>(args?: Subset<T, Tenant$TenantUserArgs>): PrismaPromise<Array<TenantUserGetPayload<T>>| Null>;

    TimeBlock<T extends Tenant$TimeBlockArgs= {}>(args?: Subset<T, Tenant$TimeBlockArgs>): PrismaPromise<Array<TimeBlockGetPayload<T>>| Null>;

    User_User_currentTenantIdToTenant<T extends Tenant$User_User_currentTenantIdToTenantArgs= {}>(args?: Subset<T, Tenant$User_User_currentTenantIdToTenantArgs>): PrismaPromise<Array<UserGetPayload<T>>| Null>;

    UserTask<T extends Tenant$UserTaskArgs= {}>(args?: Subset<T, Tenant$UserTaskArgs>): PrismaPromise<Array<UserTaskGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Tenant base type for findUnique actions
   */
  export type TenantFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * Filter, which Tenant to fetch.
     * 
    **/
    where: TenantWhereUniqueInput
  }

  /**
   * Tenant findUnique
   */
  export interface TenantFindUniqueArgs extends TenantFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Tenant findUniqueOrThrow
   */
  export type TenantFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * Filter, which Tenant to fetch.
     * 
    **/
    where: TenantWhereUniqueInput
  }


  /**
   * Tenant base type for findFirst actions
   */
  export type TenantFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * Filter, which Tenant to fetch.
     * 
    **/
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tenants.
     * 
    **/
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tenants.
     * 
    **/
    distinct?: Enumerable<TenantScalarFieldEnum>
  }

  /**
   * Tenant findFirst
   */
  export interface TenantFindFirstArgs extends TenantFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Tenant findFirstOrThrow
   */
  export type TenantFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * Filter, which Tenant to fetch.
     * 
    **/
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tenants.
     * 
    **/
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tenants.
     * 
    **/
    distinct?: Enumerable<TenantScalarFieldEnum>
  }


  /**
   * Tenant findMany
   */
  export type TenantFindManyArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * Filter, which Tenants to fetch.
     * 
    **/
    where?: TenantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tenants to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tenants.
     * 
    **/
    cursor?: TenantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tenants from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tenants.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TenantScalarFieldEnum>
  }


  /**
   * Tenant create
   */
  export type TenantCreateArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * The data needed to create a Tenant.
     * 
    **/
    data: XOR<TenantCreateInput, TenantUncheckedCreateInput>
  }


  /**
   * Tenant createMany
   */
  export type TenantCreateManyArgs = {
    /**
     * The data used to create many Tenants.
     * 
    **/
    data: Enumerable<TenantCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Tenant update
   */
  export type TenantUpdateArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * The data needed to update a Tenant.
     * 
    **/
    data: XOR<TenantUpdateInput, TenantUncheckedUpdateInput>
    /**
     * Choose, which Tenant to update.
     * 
    **/
    where: TenantWhereUniqueInput
  }


  /**
   * Tenant updateMany
   */
  export type TenantUpdateManyArgs = {
    /**
     * The data used to update Tenants.
     * 
    **/
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyInput>
    /**
     * Filter which Tenants to update
     * 
    **/
    where?: TenantWhereInput
  }


  /**
   * Tenant upsert
   */
  export type TenantUpsertArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * The filter to search for the Tenant to update in case it exists.
     * 
    **/
    where: TenantWhereUniqueInput
    /**
     * In case the Tenant found by the `where` argument doesn't exist, create a new Tenant with this data.
     * 
    **/
    create: XOR<TenantCreateInput, TenantUncheckedCreateInput>
    /**
     * In case the Tenant was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TenantUpdateInput, TenantUncheckedUpdateInput>
  }


  /**
   * Tenant delete
   */
  export type TenantDeleteArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    /**
     * Filter which Tenant to delete.
     * 
    **/
    where: TenantWhereUniqueInput
  }


  /**
   * Tenant deleteMany
   */
  export type TenantDeleteManyArgs = {
    /**
     * Filter which Tenants to delete
     * 
    **/
    where?: TenantWhereInput
  }


  /**
   * Tenant.ApiKey
   */
  export type Tenant$ApiKeyArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    where?: ApiKeyWhereInput
    orderBy?: Enumerable<ApiKeyOrderByWithRelationInput>
    cursor?: ApiKeyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ApiKeyScalarFieldEnum>
  }


  /**
   * Tenant.DailyLog
   */
  export type Tenant$DailyLogArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    where?: DailyLogWhereInput
    orderBy?: Enumerable<DailyLogOrderByWithRelationInput>
    cursor?: DailyLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogScalarFieldEnum>
  }


  /**
   * Tenant.DailyLogItem
   */
  export type Tenant$DailyLogItemArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    where?: DailyLogItemWhereInput
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    cursor?: DailyLogItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * Tenant.Equipment
   */
  export type Tenant$EquipmentArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    where?: EquipmentWhereInput
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    cursor?: EquipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * Tenant.EquipmentProperty
   */
  export type Tenant$EquipmentPropertyArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    where?: EquipmentPropertyWhereInput
    orderBy?: Enumerable<EquipmentPropertyOrderByWithRelationInput>
    cursor?: EquipmentPropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentPropertyScalarFieldEnum>
  }


  /**
   * Tenant.EquipmentPropertyValue
   */
  export type Tenant$EquipmentPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    where?: EquipmentPropertyValueWhereInput
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    cursor?: EquipmentPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }


  /**
   * Tenant.Feedback
   */
  export type Tenant$FeedbackArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    where?: FeedbackWhereInput
    orderBy?: Enumerable<FeedbackOrderByWithRelationInput>
    cursor?: FeedbackWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FeedbackScalarFieldEnum>
  }


  /**
   * Tenant.File
   */
  export type Tenant$FileArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    where?: FileWhereInput
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * Tenant.FileProperty
   */
  export type Tenant$FilePropertyArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    where?: FilePropertyWhereInput
    orderBy?: Enumerable<FilePropertyOrderByWithRelationInput>
    cursor?: FilePropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilePropertyScalarFieldEnum>
  }


  /**
   * Tenant.FilePropertyValue
   */
  export type Tenant$FilePropertyValueArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    where?: FilePropertyValueWhereInput
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    cursor?: FilePropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }


  /**
   * Tenant.Image
   */
  export type Tenant$ImageArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    where?: ImageWhereInput
    orderBy?: Enumerable<ImageOrderByWithRelationInput>
    cursor?: ImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ImageScalarFieldEnum>
  }


  /**
   * Tenant.LocationEntry
   */
  export type Tenant$LocationEntryArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    where?: LocationEntryWhereInput
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    cursor?: LocationEntryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LocationEntryScalarFieldEnum>
  }


  /**
   * Tenant.Project
   */
  export type Tenant$ProjectArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    where?: ProjectWhereInput
    orderBy?: Enumerable<ProjectOrderByWithRelationInput>
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectScalarFieldEnum>
  }


  /**
   * Tenant.ProjectProperty
   */
  export type Tenant$ProjectPropertyArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    where?: ProjectPropertyWhereInput
    orderBy?: Enumerable<ProjectPropertyOrderByWithRelationInput>
    cursor?: ProjectPropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectPropertyScalarFieldEnum>
  }


  /**
   * Tenant.ProjectPropertyValue
   */
  export type Tenant$ProjectPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    where?: ProjectPropertyValueWhereInput
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    cursor?: ProjectPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }


  /**
   * Tenant.Task
   */
  export type Tenant$TaskArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    where?: TaskWhereInput
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * Tenant.TaskProperty
   */
  export type Tenant$TaskPropertyArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    where?: TaskPropertyWhereInput
    orderBy?: Enumerable<TaskPropertyOrderByWithRelationInput>
    cursor?: TaskPropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskPropertyScalarFieldEnum>
  }


  /**
   * Tenant.TaskPropertyValue
   */
  export type Tenant$TaskPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    where?: TaskPropertyValueWhereInput
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    cursor?: TaskPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }


  /**
   * Tenant.TaskStatus
   */
  export type Tenant$TaskStatusArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    where?: TaskStatusWhereInput
    orderBy?: Enumerable<TaskStatusOrderByWithRelationInput>
    cursor?: TaskStatusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskStatusScalarFieldEnum>
  }


  /**
   * Tenant.TenantUser
   */
  export type Tenant$TenantUserArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    where?: TenantUserWhereInput
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    cursor?: TenantUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TenantUserScalarFieldEnum>
  }


  /**
   * Tenant.TimeBlock
   */
  export type Tenant$TimeBlockArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    where?: TimeBlockWhereInput
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    cursor?: TimeBlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TimeBlockScalarFieldEnum>
  }


  /**
   * Tenant.User_User_currentTenantIdToTenant
   */
  export type Tenant$User_User_currentTenantIdToTenantArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    where?: UserWhereInput
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * Tenant.UserTask
   */
  export type Tenant$UserTaskArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    where?: UserTaskWhereInput
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    cursor?: UserTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }


  /**
   * Tenant without action
   */
  export type TenantArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
  }



  /**
   * Model TenantUser
   */


  export type AggregateTenantUser = {
    _count: TenantUserCountAggregateOutputType | null
    _min: TenantUserMinAggregateOutputType | null
    _max: TenantUserMaxAggregateOutputType | null
  }

  export type TenantUserMinAggregateOutputType = {
    id: string | null
    userRole: string | null
    inviteEmail: string | null
    inviteSentAt: Date | null
    inviteStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    userId: string | null
    tenantId: string | null
  }

  export type TenantUserMaxAggregateOutputType = {
    id: string | null
    userRole: string | null
    inviteEmail: string | null
    inviteSentAt: Date | null
    inviteStatus: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    userId: string | null
    tenantId: string | null
  }

  export type TenantUserCountAggregateOutputType = {
    id: number
    userRole: number
    inviteEmail: number
    inviteSentAt: number
    inviteStatus: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    userId: number
    tenantId: number
    _all: number
  }


  export type TenantUserMinAggregateInputType = {
    id?: true
    userRole?: true
    inviteEmail?: true
    inviteSentAt?: true
    inviteStatus?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    userId?: true
    tenantId?: true
  }

  export type TenantUserMaxAggregateInputType = {
    id?: true
    userRole?: true
    inviteEmail?: true
    inviteSentAt?: true
    inviteStatus?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    userId?: true
    tenantId?: true
  }

  export type TenantUserCountAggregateInputType = {
    id?: true
    userRole?: true
    inviteEmail?: true
    inviteSentAt?: true
    inviteStatus?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    userId?: true
    tenantId?: true
    _all?: true
  }

  export type TenantUserAggregateArgs = {
    /**
     * Filter which TenantUser to aggregate.
     * 
    **/
    where?: TenantUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantUsers to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TenantUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantUsers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantUsers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TenantUsers
    **/
    _count?: true | TenantUserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TenantUserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TenantUserMaxAggregateInputType
  }

  export type GetTenantUserAggregateType<T extends TenantUserAggregateArgs> = {
        [P in keyof T & keyof AggregateTenantUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTenantUser[P]>
      : GetScalarType<T[P], AggregateTenantUser[P]>
  }




  export type TenantUserGroupByArgs = {
    where?: TenantUserWhereInput
    orderBy?: Enumerable<TenantUserOrderByWithAggregationInput>
    by: Array<TenantUserScalarFieldEnum>
    having?: TenantUserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TenantUserCountAggregateInputType | true
    _min?: TenantUserMinAggregateInputType
    _max?: TenantUserMaxAggregateInputType
  }


  export type TenantUserGroupByOutputType = {
    id: string
    userRole: string
    inviteEmail: string | null
    inviteSentAt: Date | null
    inviteStatus: string | null
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    userId: string | null
    tenantId: string
    _count: TenantUserCountAggregateOutputType | null
    _min: TenantUserMinAggregateOutputType | null
    _max: TenantUserMaxAggregateOutputType | null
  }

  type GetTenantUserGroupByPayload<T extends TenantUserGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TenantUserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TenantUserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TenantUserGroupByOutputType[P]>
            : GetScalarType<T[P], TenantUserGroupByOutputType[P]>
        }
      >
    >


  export type TenantUserSelect = {
    id?: boolean
    userRole?: boolean
    inviteEmail?: boolean
    inviteSentAt?: boolean
    inviteStatus?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    userId?: boolean
    tenantId?: boolean
    User_TenantUser_createdByToUser?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    User_TenantUser_userIdToUser?: boolean | UserArgs
  }


  export type TenantUserInclude = {
    User_TenantUser_createdByToUser?: boolean | UserArgs
    Tenant?: boolean | TenantArgs
    User_TenantUser_userIdToUser?: boolean | UserArgs
  } 

  export type TenantUserGetPayload<S extends boolean | null | undefined | TenantUserArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TenantUser :
    S extends undefined ? never :
    S extends { include: any } & (TenantUserArgs | TenantUserFindManyArgs)
    ? TenantUser  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User_TenantUser_createdByToUser' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'User_TenantUser_userIdToUser' ? UserGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (TenantUserArgs | TenantUserFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User_TenantUser_createdByToUser' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'User_TenantUser_userIdToUser' ? UserGetPayload<S['select'][P]> | null :  P extends keyof TenantUser ? TenantUser[P] : never
  } 
      : TenantUser


  type TenantUserCountArgs = Merge<
    Omit<TenantUserFindManyArgs, 'select' | 'include'> & {
      select?: TenantUserCountAggregateInputType | true
    }
  >

  export interface TenantUserDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one TenantUser that matches the filter.
     * @param {TenantUserFindUniqueArgs} args - Arguments to find a TenantUser
     * @example
     * // Get one TenantUser
     * const tenantUser = await prisma.tenantUser.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TenantUserFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TenantUserFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TenantUser'> extends True ? Prisma__TenantUserClient<TenantUserGetPayload<T>> : Prisma__TenantUserClient<TenantUserGetPayload<T> | null, null>

    /**
     * Find one TenantUser that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TenantUserFindUniqueOrThrowArgs} args - Arguments to find a TenantUser
     * @example
     * // Get one TenantUser
     * const tenantUser = await prisma.tenantUser.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TenantUserFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TenantUserFindUniqueOrThrowArgs>
    ): Prisma__TenantUserClient<TenantUserGetPayload<T>>

    /**
     * Find the first TenantUser that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserFindFirstArgs} args - Arguments to find a TenantUser
     * @example
     * // Get one TenantUser
     * const tenantUser = await prisma.tenantUser.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TenantUserFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TenantUserFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TenantUser'> extends True ? Prisma__TenantUserClient<TenantUserGetPayload<T>> : Prisma__TenantUserClient<TenantUserGetPayload<T> | null, null>

    /**
     * Find the first TenantUser that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserFindFirstOrThrowArgs} args - Arguments to find a TenantUser
     * @example
     * // Get one TenantUser
     * const tenantUser = await prisma.tenantUser.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TenantUserFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TenantUserFindFirstOrThrowArgs>
    ): Prisma__TenantUserClient<TenantUserGetPayload<T>>

    /**
     * Find zero or more TenantUsers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TenantUsers
     * const tenantUsers = await prisma.tenantUser.findMany()
     * 
     * // Get first 10 TenantUsers
     * const tenantUsers = await prisma.tenantUser.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tenantUserWithIdOnly = await prisma.tenantUser.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TenantUserFindManyArgs>(
      args?: SelectSubset<T, TenantUserFindManyArgs>
    ): PrismaPromise<Array<TenantUserGetPayload<T>>>

    /**
     * Create a TenantUser.
     * @param {TenantUserCreateArgs} args - Arguments to create a TenantUser.
     * @example
     * // Create one TenantUser
     * const TenantUser = await prisma.tenantUser.create({
     *   data: {
     *     // ... data to create a TenantUser
     *   }
     * })
     * 
    **/
    create<T extends TenantUserCreateArgs>(
      args: SelectSubset<T, TenantUserCreateArgs>
    ): Prisma__TenantUserClient<TenantUserGetPayload<T>>

    /**
     * Create many TenantUsers.
     *     @param {TenantUserCreateManyArgs} args - Arguments to create many TenantUsers.
     *     @example
     *     // Create many TenantUsers
     *     const tenantUser = await prisma.tenantUser.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TenantUserCreateManyArgs>(
      args?: SelectSubset<T, TenantUserCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a TenantUser.
     * @param {TenantUserDeleteArgs} args - Arguments to delete one TenantUser.
     * @example
     * // Delete one TenantUser
     * const TenantUser = await prisma.tenantUser.delete({
     *   where: {
     *     // ... filter to delete one TenantUser
     *   }
     * })
     * 
    **/
    delete<T extends TenantUserDeleteArgs>(
      args: SelectSubset<T, TenantUserDeleteArgs>
    ): Prisma__TenantUserClient<TenantUserGetPayload<T>>

    /**
     * Update one TenantUser.
     * @param {TenantUserUpdateArgs} args - Arguments to update one TenantUser.
     * @example
     * // Update one TenantUser
     * const tenantUser = await prisma.tenantUser.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TenantUserUpdateArgs>(
      args: SelectSubset<T, TenantUserUpdateArgs>
    ): Prisma__TenantUserClient<TenantUserGetPayload<T>>

    /**
     * Delete zero or more TenantUsers.
     * @param {TenantUserDeleteManyArgs} args - Arguments to filter TenantUsers to delete.
     * @example
     * // Delete a few TenantUsers
     * const { count } = await prisma.tenantUser.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TenantUserDeleteManyArgs>(
      args?: SelectSubset<T, TenantUserDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TenantUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TenantUsers
     * const tenantUser = await prisma.tenantUser.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TenantUserUpdateManyArgs>(
      args: SelectSubset<T, TenantUserUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TenantUser.
     * @param {TenantUserUpsertArgs} args - Arguments to update or create a TenantUser.
     * @example
     * // Update or create a TenantUser
     * const tenantUser = await prisma.tenantUser.upsert({
     *   create: {
     *     // ... data to create a TenantUser
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TenantUser we want to update
     *   }
     * })
    **/
    upsert<T extends TenantUserUpsertArgs>(
      args: SelectSubset<T, TenantUserUpsertArgs>
    ): Prisma__TenantUserClient<TenantUserGetPayload<T>>

    /**
     * Count the number of TenantUsers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserCountArgs} args - Arguments to filter TenantUsers to count.
     * @example
     * // Count the number of TenantUsers
     * const count = await prisma.tenantUser.count({
     *   where: {
     *     // ... the filter for the TenantUsers we want to count
     *   }
     * })
    **/
    count<T extends TenantUserCountArgs>(
      args?: Subset<T, TenantUserCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TenantUserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TenantUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TenantUserAggregateArgs>(args: Subset<T, TenantUserAggregateArgs>): PrismaPromise<GetTenantUserAggregateType<T>>

    /**
     * Group by TenantUser.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TenantUserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TenantUserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TenantUserGroupByArgs['orderBy'] }
        : { orderBy?: TenantUserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TenantUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTenantUserGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for TenantUser.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TenantUserClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User_TenantUser_createdByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    User_TenantUser_userIdToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * TenantUser base type for findUnique actions
   */
  export type TenantUserFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * Filter, which TenantUser to fetch.
     * 
    **/
    where: TenantUserWhereUniqueInput
  }

  /**
   * TenantUser findUnique
   */
  export interface TenantUserFindUniqueArgs extends TenantUserFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TenantUser findUniqueOrThrow
   */
  export type TenantUserFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * Filter, which TenantUser to fetch.
     * 
    **/
    where: TenantUserWhereUniqueInput
  }


  /**
   * TenantUser base type for findFirst actions
   */
  export type TenantUserFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * Filter, which TenantUser to fetch.
     * 
    **/
    where?: TenantUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantUsers to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TenantUsers.
     * 
    **/
    cursor?: TenantUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantUsers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantUsers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TenantUsers.
     * 
    **/
    distinct?: Enumerable<TenantUserScalarFieldEnum>
  }

  /**
   * TenantUser findFirst
   */
  export interface TenantUserFindFirstArgs extends TenantUserFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TenantUser findFirstOrThrow
   */
  export type TenantUserFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * Filter, which TenantUser to fetch.
     * 
    **/
    where?: TenantUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantUsers to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TenantUsers.
     * 
    **/
    cursor?: TenantUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantUsers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantUsers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TenantUsers.
     * 
    **/
    distinct?: Enumerable<TenantUserScalarFieldEnum>
  }


  /**
   * TenantUser findMany
   */
  export type TenantUserFindManyArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * Filter, which TenantUsers to fetch.
     * 
    **/
    where?: TenantUserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TenantUsers to fetch.
     * 
    **/
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TenantUsers.
     * 
    **/
    cursor?: TenantUserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TenantUsers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TenantUsers.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TenantUserScalarFieldEnum>
  }


  /**
   * TenantUser create
   */
  export type TenantUserCreateArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * The data needed to create a TenantUser.
     * 
    **/
    data: XOR<TenantUserCreateInput, TenantUserUncheckedCreateInput>
  }


  /**
   * TenantUser createMany
   */
  export type TenantUserCreateManyArgs = {
    /**
     * The data used to create many TenantUsers.
     * 
    **/
    data: Enumerable<TenantUserCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * TenantUser update
   */
  export type TenantUserUpdateArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * The data needed to update a TenantUser.
     * 
    **/
    data: XOR<TenantUserUpdateInput, TenantUserUncheckedUpdateInput>
    /**
     * Choose, which TenantUser to update.
     * 
    **/
    where: TenantUserWhereUniqueInput
  }


  /**
   * TenantUser updateMany
   */
  export type TenantUserUpdateManyArgs = {
    /**
     * The data used to update TenantUsers.
     * 
    **/
    data: XOR<TenantUserUpdateManyMutationInput, TenantUserUncheckedUpdateManyInput>
    /**
     * Filter which TenantUsers to update
     * 
    **/
    where?: TenantUserWhereInput
  }


  /**
   * TenantUser upsert
   */
  export type TenantUserUpsertArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * The filter to search for the TenantUser to update in case it exists.
     * 
    **/
    where: TenantUserWhereUniqueInput
    /**
     * In case the TenantUser found by the `where` argument doesn't exist, create a new TenantUser with this data.
     * 
    **/
    create: XOR<TenantUserCreateInput, TenantUserUncheckedCreateInput>
    /**
     * In case the TenantUser was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TenantUserUpdateInput, TenantUserUncheckedUpdateInput>
  }


  /**
   * TenantUser delete
   */
  export type TenantUserDeleteArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    /**
     * Filter which TenantUser to delete.
     * 
    **/
    where: TenantUserWhereUniqueInput
  }


  /**
   * TenantUser deleteMany
   */
  export type TenantUserDeleteManyArgs = {
    /**
     * Filter which TenantUsers to delete
     * 
    **/
    where?: TenantUserWhereInput
  }


  /**
   * TenantUser without action
   */
  export type TenantUserArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
  }



  /**
   * Model TimeBlock
   */


  export type AggregateTimeBlock = {
    _count: TimeBlockCountAggregateOutputType | null
    _avg: TimeBlockAvgAggregateOutputType | null
    _sum: TimeBlockSumAggregateOutputType | null
    _min: TimeBlockMinAggregateOutputType | null
    _max: TimeBlockMaxAggregateOutputType | null
  }

  export type TimeBlockAvgAggregateOutputType = {
    duration: number | null
    timerStartLatitude: number | null
    timerStartLongitude: number | null
    timerEndLatitude: number | null
    timerEndLongitude: number | null
  }

  export type TimeBlockSumAggregateOutputType = {
    duration: number | null
    timerStartLatitude: number | null
    timerStartLongitude: number | null
    timerEndLatitude: number | null
    timerEndLongitude: number | null
  }

  export type TimeBlockMinAggregateOutputType = {
    id: string | null
    duration: number | null
    entryType: string | null
    rangeStartAt: Date | null
    rangeEndAt: Date | null
    timerStartLatitude: number | null
    timerStartLongitude: number | null
    timerStartAddress: string | null
    timerStartAt: Date | null
    timerEndAt: Date | null
    timerEndLatitude: number | null
    timerEndLongitude: number | null
    timerEndAddress: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    dailyLogItemId: string | null
    tenantId: string | null
  }

  export type TimeBlockMaxAggregateOutputType = {
    id: string | null
    duration: number | null
    entryType: string | null
    rangeStartAt: Date | null
    rangeEndAt: Date | null
    timerStartLatitude: number | null
    timerStartLongitude: number | null
    timerStartAddress: string | null
    timerStartAt: Date | null
    timerEndAt: Date | null
    timerEndLatitude: number | null
    timerEndLongitude: number | null
    timerEndAddress: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    dailyLogItemId: string | null
    tenantId: string | null
  }

  export type TimeBlockCountAggregateOutputType = {
    id: number
    duration: number
    entryType: number
    rangeStartAt: number
    rangeEndAt: number
    timerStartLatitude: number
    timerStartLongitude: number
    timerStartAddress: number
    timerStartAt: number
    timerEndAt: number
    timerEndLatitude: number
    timerEndLongitude: number
    timerEndAddress: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    dailyLogItemId: number
    tenantId: number
    _all: number
  }


  export type TimeBlockAvgAggregateInputType = {
    duration?: true
    timerStartLatitude?: true
    timerStartLongitude?: true
    timerEndLatitude?: true
    timerEndLongitude?: true
  }

  export type TimeBlockSumAggregateInputType = {
    duration?: true
    timerStartLatitude?: true
    timerStartLongitude?: true
    timerEndLatitude?: true
    timerEndLongitude?: true
  }

  export type TimeBlockMinAggregateInputType = {
    id?: true
    duration?: true
    entryType?: true
    rangeStartAt?: true
    rangeEndAt?: true
    timerStartLatitude?: true
    timerStartLongitude?: true
    timerStartAddress?: true
    timerStartAt?: true
    timerEndAt?: true
    timerEndLatitude?: true
    timerEndLongitude?: true
    timerEndAddress?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    dailyLogItemId?: true
    tenantId?: true
  }

  export type TimeBlockMaxAggregateInputType = {
    id?: true
    duration?: true
    entryType?: true
    rangeStartAt?: true
    rangeEndAt?: true
    timerStartLatitude?: true
    timerStartLongitude?: true
    timerStartAddress?: true
    timerStartAt?: true
    timerEndAt?: true
    timerEndLatitude?: true
    timerEndLongitude?: true
    timerEndAddress?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    dailyLogItemId?: true
    tenantId?: true
  }

  export type TimeBlockCountAggregateInputType = {
    id?: true
    duration?: true
    entryType?: true
    rangeStartAt?: true
    rangeEndAt?: true
    timerStartLatitude?: true
    timerStartLongitude?: true
    timerStartAddress?: true
    timerStartAt?: true
    timerEndAt?: true
    timerEndLatitude?: true
    timerEndLongitude?: true
    timerEndAddress?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    dailyLogItemId?: true
    tenantId?: true
    _all?: true
  }

  export type TimeBlockAggregateArgs = {
    /**
     * Filter which TimeBlock to aggregate.
     * 
    **/
    where?: TimeBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TimeBlocks to fetch.
     * 
    **/
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TimeBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TimeBlocks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TimeBlocks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TimeBlocks
    **/
    _count?: true | TimeBlockCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TimeBlockAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TimeBlockSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TimeBlockMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TimeBlockMaxAggregateInputType
  }

  export type GetTimeBlockAggregateType<T extends TimeBlockAggregateArgs> = {
        [P in keyof T & keyof AggregateTimeBlock]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTimeBlock[P]>
      : GetScalarType<T[P], AggregateTimeBlock[P]>
  }




  export type TimeBlockGroupByArgs = {
    where?: TimeBlockWhereInput
    orderBy?: Enumerable<TimeBlockOrderByWithAggregationInput>
    by: Array<TimeBlockScalarFieldEnum>
    having?: TimeBlockScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TimeBlockCountAggregateInputType | true
    _avg?: TimeBlockAvgAggregateInputType
    _sum?: TimeBlockSumAggregateInputType
    _min?: TimeBlockMinAggregateInputType
    _max?: TimeBlockMaxAggregateInputType
  }


  export type TimeBlockGroupByOutputType = {
    id: string
    duration: number | null
    entryType: string
    rangeStartAt: Date | null
    rangeEndAt: Date | null
    timerStartLatitude: number | null
    timerStartLongitude: number | null
    timerStartAddress: string | null
    timerStartAt: Date | null
    timerEndAt: Date | null
    timerEndLatitude: number | null
    timerEndLongitude: number | null
    timerEndAddress: string | null
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string
    dailyLogItemId: string
    tenantId: string
    _count: TimeBlockCountAggregateOutputType | null
    _avg: TimeBlockAvgAggregateOutputType | null
    _sum: TimeBlockSumAggregateOutputType | null
    _min: TimeBlockMinAggregateOutputType | null
    _max: TimeBlockMaxAggregateOutputType | null
  }

  type GetTimeBlockGroupByPayload<T extends TimeBlockGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TimeBlockGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TimeBlockGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TimeBlockGroupByOutputType[P]>
            : GetScalarType<T[P], TimeBlockGroupByOutputType[P]>
        }
      >
    >


  export type TimeBlockSelect = {
    id?: boolean
    duration?: boolean
    entryType?: boolean
    rangeStartAt?: boolean
    rangeEndAt?: boolean
    timerStartLatitude?: boolean
    timerStartLongitude?: boolean
    timerStartAddress?: boolean
    timerStartAt?: boolean
    timerEndAt?: boolean
    timerEndLatitude?: boolean
    timerEndLongitude?: boolean
    timerEndAddress?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    dailyLogItemId?: boolean
    tenantId?: boolean
    User?: boolean | UserArgs
    DailyLogItem?: boolean | DailyLogItemArgs
    Tenant?: boolean | TenantArgs
  }


  export type TimeBlockInclude = {
    User?: boolean | UserArgs
    DailyLogItem?: boolean | DailyLogItemArgs
    Tenant?: boolean | TenantArgs
  } 

  export type TimeBlockGetPayload<S extends boolean | null | undefined | TimeBlockArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TimeBlock :
    S extends undefined ? never :
    S extends { include: any } & (TimeBlockArgs | TimeBlockFindManyArgs)
    ? TimeBlock  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User' ? UserGetPayload<S['include'][P]> :
        P extends 'DailyLogItem' ? DailyLogItemGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TimeBlockArgs | TimeBlockFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User' ? UserGetPayload<S['select'][P]> :
        P extends 'DailyLogItem' ? DailyLogItemGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :  P extends keyof TimeBlock ? TimeBlock[P] : never
  } 
      : TimeBlock


  type TimeBlockCountArgs = Merge<
    Omit<TimeBlockFindManyArgs, 'select' | 'include'> & {
      select?: TimeBlockCountAggregateInputType | true
    }
  >

  export interface TimeBlockDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one TimeBlock that matches the filter.
     * @param {TimeBlockFindUniqueArgs} args - Arguments to find a TimeBlock
     * @example
     * // Get one TimeBlock
     * const timeBlock = await prisma.timeBlock.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TimeBlockFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TimeBlockFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'TimeBlock'> extends True ? Prisma__TimeBlockClient<TimeBlockGetPayload<T>> : Prisma__TimeBlockClient<TimeBlockGetPayload<T> | null, null>

    /**
     * Find one TimeBlock that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TimeBlockFindUniqueOrThrowArgs} args - Arguments to find a TimeBlock
     * @example
     * // Get one TimeBlock
     * const timeBlock = await prisma.timeBlock.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TimeBlockFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TimeBlockFindUniqueOrThrowArgs>
    ): Prisma__TimeBlockClient<TimeBlockGetPayload<T>>

    /**
     * Find the first TimeBlock that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockFindFirstArgs} args - Arguments to find a TimeBlock
     * @example
     * // Get one TimeBlock
     * const timeBlock = await prisma.timeBlock.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TimeBlockFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TimeBlockFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'TimeBlock'> extends True ? Prisma__TimeBlockClient<TimeBlockGetPayload<T>> : Prisma__TimeBlockClient<TimeBlockGetPayload<T> | null, null>

    /**
     * Find the first TimeBlock that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockFindFirstOrThrowArgs} args - Arguments to find a TimeBlock
     * @example
     * // Get one TimeBlock
     * const timeBlock = await prisma.timeBlock.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TimeBlockFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TimeBlockFindFirstOrThrowArgs>
    ): Prisma__TimeBlockClient<TimeBlockGetPayload<T>>

    /**
     * Find zero or more TimeBlocks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TimeBlocks
     * const timeBlocks = await prisma.timeBlock.findMany()
     * 
     * // Get first 10 TimeBlocks
     * const timeBlocks = await prisma.timeBlock.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const timeBlockWithIdOnly = await prisma.timeBlock.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TimeBlockFindManyArgs>(
      args?: SelectSubset<T, TimeBlockFindManyArgs>
    ): PrismaPromise<Array<TimeBlockGetPayload<T>>>

    /**
     * Create a TimeBlock.
     * @param {TimeBlockCreateArgs} args - Arguments to create a TimeBlock.
     * @example
     * // Create one TimeBlock
     * const TimeBlock = await prisma.timeBlock.create({
     *   data: {
     *     // ... data to create a TimeBlock
     *   }
     * })
     * 
    **/
    create<T extends TimeBlockCreateArgs>(
      args: SelectSubset<T, TimeBlockCreateArgs>
    ): Prisma__TimeBlockClient<TimeBlockGetPayload<T>>

    /**
     * Create many TimeBlocks.
     *     @param {TimeBlockCreateManyArgs} args - Arguments to create many TimeBlocks.
     *     @example
     *     // Create many TimeBlocks
     *     const timeBlock = await prisma.timeBlock.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TimeBlockCreateManyArgs>(
      args?: SelectSubset<T, TimeBlockCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a TimeBlock.
     * @param {TimeBlockDeleteArgs} args - Arguments to delete one TimeBlock.
     * @example
     * // Delete one TimeBlock
     * const TimeBlock = await prisma.timeBlock.delete({
     *   where: {
     *     // ... filter to delete one TimeBlock
     *   }
     * })
     * 
    **/
    delete<T extends TimeBlockDeleteArgs>(
      args: SelectSubset<T, TimeBlockDeleteArgs>
    ): Prisma__TimeBlockClient<TimeBlockGetPayload<T>>

    /**
     * Update one TimeBlock.
     * @param {TimeBlockUpdateArgs} args - Arguments to update one TimeBlock.
     * @example
     * // Update one TimeBlock
     * const timeBlock = await prisma.timeBlock.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TimeBlockUpdateArgs>(
      args: SelectSubset<T, TimeBlockUpdateArgs>
    ): Prisma__TimeBlockClient<TimeBlockGetPayload<T>>

    /**
     * Delete zero or more TimeBlocks.
     * @param {TimeBlockDeleteManyArgs} args - Arguments to filter TimeBlocks to delete.
     * @example
     * // Delete a few TimeBlocks
     * const { count } = await prisma.timeBlock.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TimeBlockDeleteManyArgs>(
      args?: SelectSubset<T, TimeBlockDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more TimeBlocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TimeBlocks
     * const timeBlock = await prisma.timeBlock.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TimeBlockUpdateManyArgs>(
      args: SelectSubset<T, TimeBlockUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one TimeBlock.
     * @param {TimeBlockUpsertArgs} args - Arguments to update or create a TimeBlock.
     * @example
     * // Update or create a TimeBlock
     * const timeBlock = await prisma.timeBlock.upsert({
     *   create: {
     *     // ... data to create a TimeBlock
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TimeBlock we want to update
     *   }
     * })
    **/
    upsert<T extends TimeBlockUpsertArgs>(
      args: SelectSubset<T, TimeBlockUpsertArgs>
    ): Prisma__TimeBlockClient<TimeBlockGetPayload<T>>

    /**
     * Count the number of TimeBlocks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockCountArgs} args - Arguments to filter TimeBlocks to count.
     * @example
     * // Count the number of TimeBlocks
     * const count = await prisma.timeBlock.count({
     *   where: {
     *     // ... the filter for the TimeBlocks we want to count
     *   }
     * })
    **/
    count<T extends TimeBlockCountArgs>(
      args?: Subset<T, TimeBlockCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TimeBlockCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TimeBlock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TimeBlockAggregateArgs>(args: Subset<T, TimeBlockAggregateArgs>): PrismaPromise<GetTimeBlockAggregateType<T>>

    /**
     * Group by TimeBlock.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TimeBlockGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TimeBlockGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TimeBlockGroupByArgs['orderBy'] }
        : { orderBy?: TimeBlockGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TimeBlockGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTimeBlockGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for TimeBlock.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TimeBlockClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    DailyLogItem<T extends DailyLogItemArgs= {}>(args?: Subset<T, DailyLogItemArgs>): Prisma__DailyLogItemClient<DailyLogItemGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * TimeBlock base type for findUnique actions
   */
  export type TimeBlockFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * Filter, which TimeBlock to fetch.
     * 
    **/
    where: TimeBlockWhereUniqueInput
  }

  /**
   * TimeBlock findUnique
   */
  export interface TimeBlockFindUniqueArgs extends TimeBlockFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TimeBlock findUniqueOrThrow
   */
  export type TimeBlockFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * Filter, which TimeBlock to fetch.
     * 
    **/
    where: TimeBlockWhereUniqueInput
  }


  /**
   * TimeBlock base type for findFirst actions
   */
  export type TimeBlockFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * Filter, which TimeBlock to fetch.
     * 
    **/
    where?: TimeBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TimeBlocks to fetch.
     * 
    **/
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TimeBlocks.
     * 
    **/
    cursor?: TimeBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TimeBlocks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TimeBlocks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TimeBlocks.
     * 
    **/
    distinct?: Enumerable<TimeBlockScalarFieldEnum>
  }

  /**
   * TimeBlock findFirst
   */
  export interface TimeBlockFindFirstArgs extends TimeBlockFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * TimeBlock findFirstOrThrow
   */
  export type TimeBlockFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * Filter, which TimeBlock to fetch.
     * 
    **/
    where?: TimeBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TimeBlocks to fetch.
     * 
    **/
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TimeBlocks.
     * 
    **/
    cursor?: TimeBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TimeBlocks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TimeBlocks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TimeBlocks.
     * 
    **/
    distinct?: Enumerable<TimeBlockScalarFieldEnum>
  }


  /**
   * TimeBlock findMany
   */
  export type TimeBlockFindManyArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * Filter, which TimeBlocks to fetch.
     * 
    **/
    where?: TimeBlockWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TimeBlocks to fetch.
     * 
    **/
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TimeBlocks.
     * 
    **/
    cursor?: TimeBlockWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TimeBlocks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TimeBlocks.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TimeBlockScalarFieldEnum>
  }


  /**
   * TimeBlock create
   */
  export type TimeBlockCreateArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * The data needed to create a TimeBlock.
     * 
    **/
    data: XOR<TimeBlockCreateInput, TimeBlockUncheckedCreateInput>
  }


  /**
   * TimeBlock createMany
   */
  export type TimeBlockCreateManyArgs = {
    /**
     * The data used to create many TimeBlocks.
     * 
    **/
    data: Enumerable<TimeBlockCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * TimeBlock update
   */
  export type TimeBlockUpdateArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * The data needed to update a TimeBlock.
     * 
    **/
    data: XOR<TimeBlockUpdateInput, TimeBlockUncheckedUpdateInput>
    /**
     * Choose, which TimeBlock to update.
     * 
    **/
    where: TimeBlockWhereUniqueInput
  }


  /**
   * TimeBlock updateMany
   */
  export type TimeBlockUpdateManyArgs = {
    /**
     * The data used to update TimeBlocks.
     * 
    **/
    data: XOR<TimeBlockUpdateManyMutationInput, TimeBlockUncheckedUpdateManyInput>
    /**
     * Filter which TimeBlocks to update
     * 
    **/
    where?: TimeBlockWhereInput
  }


  /**
   * TimeBlock upsert
   */
  export type TimeBlockUpsertArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * The filter to search for the TimeBlock to update in case it exists.
     * 
    **/
    where: TimeBlockWhereUniqueInput
    /**
     * In case the TimeBlock found by the `where` argument doesn't exist, create a new TimeBlock with this data.
     * 
    **/
    create: XOR<TimeBlockCreateInput, TimeBlockUncheckedCreateInput>
    /**
     * In case the TimeBlock was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TimeBlockUpdateInput, TimeBlockUncheckedUpdateInput>
  }


  /**
   * TimeBlock delete
   */
  export type TimeBlockDeleteArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    /**
     * Filter which TimeBlock to delete.
     * 
    **/
    where: TimeBlockWhereUniqueInput
  }


  /**
   * TimeBlock deleteMany
   */
  export type TimeBlockDeleteManyArgs = {
    /**
     * Filter which TimeBlocks to delete
     * 
    **/
    where?: TimeBlockWhereInput
  }


  /**
   * TimeBlock without action
   */
  export type TimeBlockArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
  }



  /**
   * Model User
   */


  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    preferredLanguage: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    imageId: string | null
    currentTenantId: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    name: string | null
    preferredLanguage: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    imageId: string | null
    currentTenantId: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    name: number
    preferredLanguage: number
    settings: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    imageId: number
    currentTenantId: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    name?: true
    preferredLanguage?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    imageId?: true
    currentTenantId?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    name?: true
    preferredLanguage?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    imageId?: true
    currentTenantId?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    name?: true
    preferredLanguage?: true
    settings?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    imageId?: true
    currentTenantId?: true
    _all?: true
  }

  export type UserAggregateArgs = {
    /**
     * Filter which User to aggregate.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs = {
    where?: UserWhereInput
    orderBy?: Enumerable<UserOrderByWithAggregationInput>
    by: Array<UserScalarFieldEnum>
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }


  export type UserGroupByOutputType = {
    id: string
    email: string | null
    name: string | null
    preferredLanguage: string | null
    settings: JsonValue
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    imageId: string | null
    currentTenantId: string
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect = {
    id?: boolean
    email?: boolean
    name?: boolean
    preferredLanguage?: boolean
    settings?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    imageId?: boolean
    currentTenantId?: boolean
    ApiKey?: boolean | User$ApiKeyArgs
    DailyLog?: boolean | User$DailyLogArgs
    DailyLogItem?: boolean | User$DailyLogItemArgs
    Equipment_Equipment_createdByToUser?: boolean | User$Equipment_Equipment_createdByToUserArgs
    Equipment_Equipment_userIdToUser?: boolean | User$Equipment_Equipment_userIdToUserArgs
    EquipmentProperty?: boolean | User$EquipmentPropertyArgs
    EquipmentPropertyValue?: boolean | User$EquipmentPropertyValueArgs
    Feedback?: boolean | User$FeedbackArgs
    File?: boolean | User$FileArgs
    FileProperty?: boolean | User$FilePropertyArgs
    FilePropertyValue?: boolean | User$FilePropertyValueArgs
    Image_Image_createdByToUser?: boolean | User$Image_Image_createdByToUserArgs
    LocationEntry?: boolean | User$LocationEntryArgs
    Project?: boolean | User$ProjectArgs
    ProjectProperty?: boolean | User$ProjectPropertyArgs
    ProjectPropertyValue?: boolean | User$ProjectPropertyValueArgs
    Task?: boolean | User$TaskArgs
    TaskProperty?: boolean | User$TaskPropertyArgs
    TaskPropertyValue?: boolean | User$TaskPropertyValueArgs
    TaskStatus?: boolean | User$TaskStatusArgs
    Tenant_Tenant_createdByToUser?: boolean | User$Tenant_Tenant_createdByToUserArgs
    TenantUser_TenantUser_createdByToUser?: boolean | User$TenantUser_TenantUser_createdByToUserArgs
    TenantUser_TenantUser_userIdToUser?: boolean | User$TenantUser_TenantUser_userIdToUserArgs
    TimeBlock?: boolean | User$TimeBlockArgs
    Tenant_User_currentTenantIdToTenant?: boolean | TenantArgs
    Image_User_imageIdToImage?: boolean | ImageArgs
    UserTask_UserTask_createdByToUser?: boolean | User$UserTask_UserTask_createdByToUserArgs
    UserTask_UserTask_userIdToUser?: boolean | User$UserTask_UserTask_userIdToUserArgs
    _count?: boolean | UserCountOutputTypeArgs
  }


  export type UserInclude = {
    ApiKey?: boolean | User$ApiKeyArgs
    DailyLog?: boolean | User$DailyLogArgs
    DailyLogItem?: boolean | User$DailyLogItemArgs
    Equipment_Equipment_createdByToUser?: boolean | User$Equipment_Equipment_createdByToUserArgs
    Equipment_Equipment_userIdToUser?: boolean | User$Equipment_Equipment_userIdToUserArgs
    EquipmentProperty?: boolean | User$EquipmentPropertyArgs
    EquipmentPropertyValue?: boolean | User$EquipmentPropertyValueArgs
    Feedback?: boolean | User$FeedbackArgs
    File?: boolean | User$FileArgs
    FileProperty?: boolean | User$FilePropertyArgs
    FilePropertyValue?: boolean | User$FilePropertyValueArgs
    Image_Image_createdByToUser?: boolean | User$Image_Image_createdByToUserArgs
    LocationEntry?: boolean | User$LocationEntryArgs
    Project?: boolean | User$ProjectArgs
    ProjectProperty?: boolean | User$ProjectPropertyArgs
    ProjectPropertyValue?: boolean | User$ProjectPropertyValueArgs
    Task?: boolean | User$TaskArgs
    TaskProperty?: boolean | User$TaskPropertyArgs
    TaskPropertyValue?: boolean | User$TaskPropertyValueArgs
    TaskStatus?: boolean | User$TaskStatusArgs
    Tenant_Tenant_createdByToUser?: boolean | User$Tenant_Tenant_createdByToUserArgs
    TenantUser_TenantUser_createdByToUser?: boolean | User$TenantUser_TenantUser_createdByToUserArgs
    TenantUser_TenantUser_userIdToUser?: boolean | User$TenantUser_TenantUser_userIdToUserArgs
    TimeBlock?: boolean | User$TimeBlockArgs
    Tenant_User_currentTenantIdToTenant?: boolean | TenantArgs
    Image_User_imageIdToImage?: boolean | ImageArgs
    UserTask_UserTask_createdByToUser?: boolean | User$UserTask_UserTask_createdByToUserArgs
    UserTask_UserTask_userIdToUser?: boolean | User$UserTask_UserTask_userIdToUserArgs
    _count?: boolean | UserCountOutputTypeArgs
  } 

  export type UserGetPayload<S extends boolean | null | undefined | UserArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? User :
    S extends undefined ? never :
    S extends { include: any } & (UserArgs | UserFindManyArgs)
    ? User  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'ApiKey' ? Array < ApiKeyGetPayload<S['include'][P]>>  :
        P extends 'DailyLog' ? Array < DailyLogGetPayload<S['include'][P]>>  :
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['include'][P]>>  :
        P extends 'Equipment_Equipment_createdByToUser' ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'Equipment_Equipment_userIdToUser' ? Array < EquipmentGetPayload<S['include'][P]>>  :
        P extends 'EquipmentProperty' ? Array < EquipmentPropertyGetPayload<S['include'][P]>>  :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Feedback' ? Array < FeedbackGetPayload<S['include'][P]>>  :
        P extends 'File' ? Array < FileGetPayload<S['include'][P]>>  :
        P extends 'FileProperty' ? Array < FilePropertyGetPayload<S['include'][P]>>  :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Image_Image_createdByToUser' ? Array < ImageGetPayload<S['include'][P]>>  :
        P extends 'LocationEntry' ? Array < LocationEntryGetPayload<S['include'][P]>>  :
        P extends 'Project' ? Array < ProjectGetPayload<S['include'][P]>>  :
        P extends 'ProjectProperty' ? Array < ProjectPropertyGetPayload<S['include'][P]>>  :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'Task' ? Array < TaskGetPayload<S['include'][P]>>  :
        P extends 'TaskProperty' ? Array < TaskPropertyGetPayload<S['include'][P]>>  :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['include'][P]>>  :
        P extends 'TaskStatus' ? Array < TaskStatusGetPayload<S['include'][P]>>  :
        P extends 'Tenant_Tenant_createdByToUser' ? Array < TenantGetPayload<S['include'][P]>>  :
        P extends 'TenantUser_TenantUser_createdByToUser' ? Array < TenantUserGetPayload<S['include'][P]>>  :
        P extends 'TenantUser_TenantUser_userIdToUser' ? Array < TenantUserGetPayload<S['include'][P]>>  :
        P extends 'TimeBlock' ? Array < TimeBlockGetPayload<S['include'][P]>>  :
        P extends 'Tenant_User_currentTenantIdToTenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'Image_User_imageIdToImage' ? ImageGetPayload<S['include'][P]> | null :
        P extends 'UserTask_UserTask_createdByToUser' ? Array < UserTaskGetPayload<S['include'][P]>>  :
        P extends 'UserTask_UserTask_userIdToUser' ? Array < UserTaskGetPayload<S['include'][P]>>  :
        P extends '_count' ? UserCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (UserArgs | UserFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'ApiKey' ? Array < ApiKeyGetPayload<S['select'][P]>>  :
        P extends 'DailyLog' ? Array < DailyLogGetPayload<S['select'][P]>>  :
        P extends 'DailyLogItem' ? Array < DailyLogItemGetPayload<S['select'][P]>>  :
        P extends 'Equipment_Equipment_createdByToUser' ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'Equipment_Equipment_userIdToUser' ? Array < EquipmentGetPayload<S['select'][P]>>  :
        P extends 'EquipmentProperty' ? Array < EquipmentPropertyGetPayload<S['select'][P]>>  :
        P extends 'EquipmentPropertyValue' ? Array < EquipmentPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Feedback' ? Array < FeedbackGetPayload<S['select'][P]>>  :
        P extends 'File' ? Array < FileGetPayload<S['select'][P]>>  :
        P extends 'FileProperty' ? Array < FilePropertyGetPayload<S['select'][P]>>  :
        P extends 'FilePropertyValue' ? Array < FilePropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Image_Image_createdByToUser' ? Array < ImageGetPayload<S['select'][P]>>  :
        P extends 'LocationEntry' ? Array < LocationEntryGetPayload<S['select'][P]>>  :
        P extends 'Project' ? Array < ProjectGetPayload<S['select'][P]>>  :
        P extends 'ProjectProperty' ? Array < ProjectPropertyGetPayload<S['select'][P]>>  :
        P extends 'ProjectPropertyValue' ? Array < ProjectPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'Task' ? Array < TaskGetPayload<S['select'][P]>>  :
        P extends 'TaskProperty' ? Array < TaskPropertyGetPayload<S['select'][P]>>  :
        P extends 'TaskPropertyValue' ? Array < TaskPropertyValueGetPayload<S['select'][P]>>  :
        P extends 'TaskStatus' ? Array < TaskStatusGetPayload<S['select'][P]>>  :
        P extends 'Tenant_Tenant_createdByToUser' ? Array < TenantGetPayload<S['select'][P]>>  :
        P extends 'TenantUser_TenantUser_createdByToUser' ? Array < TenantUserGetPayload<S['select'][P]>>  :
        P extends 'TenantUser_TenantUser_userIdToUser' ? Array < TenantUserGetPayload<S['select'][P]>>  :
        P extends 'TimeBlock' ? Array < TimeBlockGetPayload<S['select'][P]>>  :
        P extends 'Tenant_User_currentTenantIdToTenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'Image_User_imageIdToImage' ? ImageGetPayload<S['select'][P]> | null :
        P extends 'UserTask_UserTask_createdByToUser' ? Array < UserTaskGetPayload<S['select'][P]>>  :
        P extends 'UserTask_UserTask_userIdToUser' ? Array < UserTaskGetPayload<S['select'][P]>>  :
        P extends '_count' ? UserCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof User ? User[P] : never
  } 
      : User


  type UserCountArgs = Merge<
    Omit<UserFindManyArgs, 'select' | 'include'> & {
      select?: UserCountAggregateInputType | true
    }
  >

  export interface UserDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User'> extends True ? Prisma__UserClient<UserGetPayload<T>> : Prisma__UserClient<UserGetPayload<T> | null, null>

    /**
     * Find one User that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UserFindUniqueOrThrowArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User'> extends True ? Prisma__UserClient<UserGetPayload<T>> : Prisma__UserClient<UserGetPayload<T> | null, null>

    /**
     * Find the first User that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UserFindFirstOrThrowArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserFindManyArgs>(
      args?: SelectSubset<T, UserFindManyArgs>
    ): PrismaPromise<Array<UserGetPayload<T>>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends UserCreateArgs>(
      args: SelectSubset<T, UserCreateArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Create many Users.
     *     @param {UserCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserCreateManyArgs>(
      args?: SelectSubset<T, UserCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends UserDeleteArgs>(
      args: SelectSubset<T, UserDeleteArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserUpdateArgs>(
      args: SelectSubset<T, UserUpdateArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserDeleteManyArgs>(
      args?: SelectSubset<T, UserDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserUpdateManyArgs>(
      args: SelectSubset<T, UserUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends UserUpsertArgs>(
      args: SelectSubset<T, UserUpsertArgs>
    ): Prisma__UserClient<UserGetPayload<T>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    ApiKey<T extends User$ApiKeyArgs= {}>(args?: Subset<T, User$ApiKeyArgs>): PrismaPromise<Array<ApiKeyGetPayload<T>>| Null>;

    DailyLog<T extends User$DailyLogArgs= {}>(args?: Subset<T, User$DailyLogArgs>): PrismaPromise<Array<DailyLogGetPayload<T>>| Null>;

    DailyLogItem<T extends User$DailyLogItemArgs= {}>(args?: Subset<T, User$DailyLogItemArgs>): PrismaPromise<Array<DailyLogItemGetPayload<T>>| Null>;

    Equipment_Equipment_createdByToUser<T extends User$Equipment_Equipment_createdByToUserArgs= {}>(args?: Subset<T, User$Equipment_Equipment_createdByToUserArgs>): PrismaPromise<Array<EquipmentGetPayload<T>>| Null>;

    Equipment_Equipment_userIdToUser<T extends User$Equipment_Equipment_userIdToUserArgs= {}>(args?: Subset<T, User$Equipment_Equipment_userIdToUserArgs>): PrismaPromise<Array<EquipmentGetPayload<T>>| Null>;

    EquipmentProperty<T extends User$EquipmentPropertyArgs= {}>(args?: Subset<T, User$EquipmentPropertyArgs>): PrismaPromise<Array<EquipmentPropertyGetPayload<T>>| Null>;

    EquipmentPropertyValue<T extends User$EquipmentPropertyValueArgs= {}>(args?: Subset<T, User$EquipmentPropertyValueArgs>): PrismaPromise<Array<EquipmentPropertyValueGetPayload<T>>| Null>;

    Feedback<T extends User$FeedbackArgs= {}>(args?: Subset<T, User$FeedbackArgs>): PrismaPromise<Array<FeedbackGetPayload<T>>| Null>;

    File<T extends User$FileArgs= {}>(args?: Subset<T, User$FileArgs>): PrismaPromise<Array<FileGetPayload<T>>| Null>;

    FileProperty<T extends User$FilePropertyArgs= {}>(args?: Subset<T, User$FilePropertyArgs>): PrismaPromise<Array<FilePropertyGetPayload<T>>| Null>;

    FilePropertyValue<T extends User$FilePropertyValueArgs= {}>(args?: Subset<T, User$FilePropertyValueArgs>): PrismaPromise<Array<FilePropertyValueGetPayload<T>>| Null>;

    Image_Image_createdByToUser<T extends User$Image_Image_createdByToUserArgs= {}>(args?: Subset<T, User$Image_Image_createdByToUserArgs>): PrismaPromise<Array<ImageGetPayload<T>>| Null>;

    LocationEntry<T extends User$LocationEntryArgs= {}>(args?: Subset<T, User$LocationEntryArgs>): PrismaPromise<Array<LocationEntryGetPayload<T>>| Null>;

    Project<T extends User$ProjectArgs= {}>(args?: Subset<T, User$ProjectArgs>): PrismaPromise<Array<ProjectGetPayload<T>>| Null>;

    ProjectProperty<T extends User$ProjectPropertyArgs= {}>(args?: Subset<T, User$ProjectPropertyArgs>): PrismaPromise<Array<ProjectPropertyGetPayload<T>>| Null>;

    ProjectPropertyValue<T extends User$ProjectPropertyValueArgs= {}>(args?: Subset<T, User$ProjectPropertyValueArgs>): PrismaPromise<Array<ProjectPropertyValueGetPayload<T>>| Null>;

    Task<T extends User$TaskArgs= {}>(args?: Subset<T, User$TaskArgs>): PrismaPromise<Array<TaskGetPayload<T>>| Null>;

    TaskProperty<T extends User$TaskPropertyArgs= {}>(args?: Subset<T, User$TaskPropertyArgs>): PrismaPromise<Array<TaskPropertyGetPayload<T>>| Null>;

    TaskPropertyValue<T extends User$TaskPropertyValueArgs= {}>(args?: Subset<T, User$TaskPropertyValueArgs>): PrismaPromise<Array<TaskPropertyValueGetPayload<T>>| Null>;

    TaskStatus<T extends User$TaskStatusArgs= {}>(args?: Subset<T, User$TaskStatusArgs>): PrismaPromise<Array<TaskStatusGetPayload<T>>| Null>;

    Tenant_Tenant_createdByToUser<T extends User$Tenant_Tenant_createdByToUserArgs= {}>(args?: Subset<T, User$Tenant_Tenant_createdByToUserArgs>): PrismaPromise<Array<TenantGetPayload<T>>| Null>;

    TenantUser_TenantUser_createdByToUser<T extends User$TenantUser_TenantUser_createdByToUserArgs= {}>(args?: Subset<T, User$TenantUser_TenantUser_createdByToUserArgs>): PrismaPromise<Array<TenantUserGetPayload<T>>| Null>;

    TenantUser_TenantUser_userIdToUser<T extends User$TenantUser_TenantUser_userIdToUserArgs= {}>(args?: Subset<T, User$TenantUser_TenantUser_userIdToUserArgs>): PrismaPromise<Array<TenantUserGetPayload<T>>| Null>;

    TimeBlock<T extends User$TimeBlockArgs= {}>(args?: Subset<T, User$TimeBlockArgs>): PrismaPromise<Array<TimeBlockGetPayload<T>>| Null>;

    Tenant_User_currentTenantIdToTenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    Image_User_imageIdToImage<T extends ImageArgs= {}>(args?: Subset<T, ImageArgs>): Prisma__ImageClient<ImageGetPayload<T> | Null>;

    UserTask_UserTask_createdByToUser<T extends User$UserTask_UserTask_createdByToUserArgs= {}>(args?: Subset<T, User$UserTask_UserTask_createdByToUserArgs>): PrismaPromise<Array<UserTaskGetPayload<T>>| Null>;

    UserTask_UserTask_userIdToUser<T extends User$UserTask_UserTask_userIdToUserArgs= {}>(args?: Subset<T, User$UserTask_UserTask_userIdToUserArgs>): PrismaPromise<Array<UserTaskGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * User base type for findUnique actions
   */
  export type UserFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where: UserWhereUniqueInput
  }

  /**
   * User findUnique
   */
  export interface UserFindUniqueArgs extends UserFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User base type for findFirst actions
   */
  export type UserFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }

  /**
   * User findFirst
   */
  export interface UserFindFirstArgs extends UserFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which User to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User findMany
   */
  export type UserFindManyArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UserOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     * 
    **/
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserScalarFieldEnum>
  }


  /**
   * User create
   */
  export type UserCreateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to create a User.
     * 
    **/
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }


  /**
   * User createMany
   */
  export type UserCreateManyArgs = {
    /**
     * The data used to create many Users.
     * 
    **/
    data: Enumerable<UserCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * User update
   */
  export type UserUpdateArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The data needed to update a User.
     * 
    **/
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User updateMany
   */
  export type UserUpdateManyArgs = {
    /**
     * The data used to update Users.
     * 
    **/
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     * 
    **/
    where?: UserWhereInput
  }


  /**
   * User upsert
   */
  export type UserUpsertArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * The filter to search for the User to update in case it exists.
     * 
    **/
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     * 
    **/
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }


  /**
   * User delete
   */
  export type UserDeleteArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
    /**
     * Filter which User to delete.
     * 
    **/
    where: UserWhereUniqueInput
  }


  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs = {
    /**
     * Filter which Users to delete
     * 
    **/
    where?: UserWhereInput
  }


  /**
   * User.ApiKey
   */
  export type User$ApiKeyArgs = {
    /**
     * Select specific fields to fetch from the ApiKey
     * 
    **/
    select?: ApiKeySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ApiKeyInclude | null
    where?: ApiKeyWhereInput
    orderBy?: Enumerable<ApiKeyOrderByWithRelationInput>
    cursor?: ApiKeyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ApiKeyScalarFieldEnum>
  }


  /**
   * User.DailyLog
   */
  export type User$DailyLogArgs = {
    /**
     * Select specific fields to fetch from the DailyLog
     * 
    **/
    select?: DailyLogSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogInclude | null
    where?: DailyLogWhereInput
    orderBy?: Enumerable<DailyLogOrderByWithRelationInput>
    cursor?: DailyLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogScalarFieldEnum>
  }


  /**
   * User.DailyLogItem
   */
  export type User$DailyLogItemArgs = {
    /**
     * Select specific fields to fetch from the DailyLogItem
     * 
    **/
    select?: DailyLogItemSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: DailyLogItemInclude | null
    where?: DailyLogItemWhereInput
    orderBy?: Enumerable<DailyLogItemOrderByWithRelationInput>
    cursor?: DailyLogItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<DailyLogItemScalarFieldEnum>
  }


  /**
   * User.Equipment_Equipment_createdByToUser
   */
  export type User$Equipment_Equipment_createdByToUserArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    where?: EquipmentWhereInput
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    cursor?: EquipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * User.Equipment_Equipment_userIdToUser
   */
  export type User$Equipment_Equipment_userIdToUserArgs = {
    /**
     * Select specific fields to fetch from the Equipment
     * 
    **/
    select?: EquipmentSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentInclude | null
    where?: EquipmentWhereInput
    orderBy?: Enumerable<EquipmentOrderByWithRelationInput>
    cursor?: EquipmentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentScalarFieldEnum>
  }


  /**
   * User.EquipmentProperty
   */
  export type User$EquipmentPropertyArgs = {
    /**
     * Select specific fields to fetch from the EquipmentProperty
     * 
    **/
    select?: EquipmentPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyInclude | null
    where?: EquipmentPropertyWhereInput
    orderBy?: Enumerable<EquipmentPropertyOrderByWithRelationInput>
    cursor?: EquipmentPropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentPropertyScalarFieldEnum>
  }


  /**
   * User.EquipmentPropertyValue
   */
  export type User$EquipmentPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the EquipmentPropertyValue
     * 
    **/
    select?: EquipmentPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: EquipmentPropertyValueInclude | null
    where?: EquipmentPropertyValueWhereInput
    orderBy?: Enumerable<EquipmentPropertyValueOrderByWithRelationInput>
    cursor?: EquipmentPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<EquipmentPropertyValueScalarFieldEnum>
  }


  /**
   * User.Feedback
   */
  export type User$FeedbackArgs = {
    /**
     * Select specific fields to fetch from the Feedback
     * 
    **/
    select?: FeedbackSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FeedbackInclude | null
    where?: FeedbackWhereInput
    orderBy?: Enumerable<FeedbackOrderByWithRelationInput>
    cursor?: FeedbackWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FeedbackScalarFieldEnum>
  }


  /**
   * User.File
   */
  export type User$FileArgs = {
    /**
     * Select specific fields to fetch from the File
     * 
    **/
    select?: FileSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FileInclude | null
    where?: FileWhereInput
    orderBy?: Enumerable<FileOrderByWithRelationInput>
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FileScalarFieldEnum>
  }


  /**
   * User.FileProperty
   */
  export type User$FilePropertyArgs = {
    /**
     * Select specific fields to fetch from the FileProperty
     * 
    **/
    select?: FilePropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyInclude | null
    where?: FilePropertyWhereInput
    orderBy?: Enumerable<FilePropertyOrderByWithRelationInput>
    cursor?: FilePropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilePropertyScalarFieldEnum>
  }


  /**
   * User.FilePropertyValue
   */
  export type User$FilePropertyValueArgs = {
    /**
     * Select specific fields to fetch from the FilePropertyValue
     * 
    **/
    select?: FilePropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: FilePropertyValueInclude | null
    where?: FilePropertyValueWhereInput
    orderBy?: Enumerable<FilePropertyValueOrderByWithRelationInput>
    cursor?: FilePropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<FilePropertyValueScalarFieldEnum>
  }


  /**
   * User.Image_Image_createdByToUser
   */
  export type User$Image_Image_createdByToUserArgs = {
    /**
     * Select specific fields to fetch from the Image
     * 
    **/
    select?: ImageSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ImageInclude | null
    where?: ImageWhereInput
    orderBy?: Enumerable<ImageOrderByWithRelationInput>
    cursor?: ImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ImageScalarFieldEnum>
  }


  /**
   * User.LocationEntry
   */
  export type User$LocationEntryArgs = {
    /**
     * Select specific fields to fetch from the LocationEntry
     * 
    **/
    select?: LocationEntrySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: LocationEntryInclude | null
    where?: LocationEntryWhereInput
    orderBy?: Enumerable<LocationEntryOrderByWithRelationInput>
    cursor?: LocationEntryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<LocationEntryScalarFieldEnum>
  }


  /**
   * User.Project
   */
  export type User$ProjectArgs = {
    /**
     * Select specific fields to fetch from the Project
     * 
    **/
    select?: ProjectSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectInclude | null
    where?: ProjectWhereInput
    orderBy?: Enumerable<ProjectOrderByWithRelationInput>
    cursor?: ProjectWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectScalarFieldEnum>
  }


  /**
   * User.ProjectProperty
   */
  export type User$ProjectPropertyArgs = {
    /**
     * Select specific fields to fetch from the ProjectProperty
     * 
    **/
    select?: ProjectPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyInclude | null
    where?: ProjectPropertyWhereInput
    orderBy?: Enumerable<ProjectPropertyOrderByWithRelationInput>
    cursor?: ProjectPropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectPropertyScalarFieldEnum>
  }


  /**
   * User.ProjectPropertyValue
   */
  export type User$ProjectPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the ProjectPropertyValue
     * 
    **/
    select?: ProjectPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectPropertyValueInclude | null
    where?: ProjectPropertyValueWhereInput
    orderBy?: Enumerable<ProjectPropertyValueOrderByWithRelationInput>
    cursor?: ProjectPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectPropertyValueScalarFieldEnum>
  }


  /**
   * User.Task
   */
  export type User$TaskArgs = {
    /**
     * Select specific fields to fetch from the Task
     * 
    **/
    select?: TaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskInclude | null
    where?: TaskWhereInput
    orderBy?: Enumerable<TaskOrderByWithRelationInput>
    cursor?: TaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskScalarFieldEnum>
  }


  /**
   * User.TaskProperty
   */
  export type User$TaskPropertyArgs = {
    /**
     * Select specific fields to fetch from the TaskProperty
     * 
    **/
    select?: TaskPropertySelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyInclude | null
    where?: TaskPropertyWhereInput
    orderBy?: Enumerable<TaskPropertyOrderByWithRelationInput>
    cursor?: TaskPropertyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskPropertyScalarFieldEnum>
  }


  /**
   * User.TaskPropertyValue
   */
  export type User$TaskPropertyValueArgs = {
    /**
     * Select specific fields to fetch from the TaskPropertyValue
     * 
    **/
    select?: TaskPropertyValueSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskPropertyValueInclude | null
    where?: TaskPropertyValueWhereInput
    orderBy?: Enumerable<TaskPropertyValueOrderByWithRelationInput>
    cursor?: TaskPropertyValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskPropertyValueScalarFieldEnum>
  }


  /**
   * User.TaskStatus
   */
  export type User$TaskStatusArgs = {
    /**
     * Select specific fields to fetch from the TaskStatus
     * 
    **/
    select?: TaskStatusSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaskStatusInclude | null
    where?: TaskStatusWhereInput
    orderBy?: Enumerable<TaskStatusOrderByWithRelationInput>
    cursor?: TaskStatusWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaskStatusScalarFieldEnum>
  }


  /**
   * User.Tenant_Tenant_createdByToUser
   */
  export type User$Tenant_Tenant_createdByToUserArgs = {
    /**
     * Select specific fields to fetch from the Tenant
     * 
    **/
    select?: TenantSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantInclude | null
    where?: TenantWhereInput
    orderBy?: Enumerable<TenantOrderByWithRelationInput>
    cursor?: TenantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TenantScalarFieldEnum>
  }


  /**
   * User.TenantUser_TenantUser_createdByToUser
   */
  export type User$TenantUser_TenantUser_createdByToUserArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    where?: TenantUserWhereInput
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    cursor?: TenantUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TenantUserScalarFieldEnum>
  }


  /**
   * User.TenantUser_TenantUser_userIdToUser
   */
  export type User$TenantUser_TenantUser_userIdToUserArgs = {
    /**
     * Select specific fields to fetch from the TenantUser
     * 
    **/
    select?: TenantUserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TenantUserInclude | null
    where?: TenantUserWhereInput
    orderBy?: Enumerable<TenantUserOrderByWithRelationInput>
    cursor?: TenantUserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TenantUserScalarFieldEnum>
  }


  /**
   * User.TimeBlock
   */
  export type User$TimeBlockArgs = {
    /**
     * Select specific fields to fetch from the TimeBlock
     * 
    **/
    select?: TimeBlockSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TimeBlockInclude | null
    where?: TimeBlockWhereInput
    orderBy?: Enumerable<TimeBlockOrderByWithRelationInput>
    cursor?: TimeBlockWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TimeBlockScalarFieldEnum>
  }


  /**
   * User.UserTask_UserTask_createdByToUser
   */
  export type User$UserTask_UserTask_createdByToUserArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    where?: UserTaskWhereInput
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    cursor?: UserTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }


  /**
   * User.UserTask_UserTask_userIdToUser
   */
  export type User$UserTask_UserTask_userIdToUserArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    where?: UserTaskWhereInput
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    cursor?: UserTaskWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }


  /**
   * User without action
   */
  export type UserArgs = {
    /**
     * Select specific fields to fetch from the User
     * 
    **/
    select?: UserSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserInclude | null
  }



  /**
   * Model UserTask
   */


  export type AggregateUserTask = {
    _count: UserTaskCountAggregateOutputType | null
    _min: UserTaskMinAggregateOutputType | null
    _max: UserTaskMaxAggregateOutputType | null
  }

  export type UserTaskMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskId: string | null
    tenantId: string | null
    userId: string | null
  }

  export type UserTaskMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskId: string | null
    tenantId: string | null
    userId: string | null
  }

  export type UserTaskCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    archivedAt: number
    deletedAt: number
    createdBy: number
    taskId: number
    tenantId: number
    userId: number
    _all: number
  }


  export type UserTaskMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskId?: true
    tenantId?: true
    userId?: true
  }

  export type UserTaskMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskId?: true
    tenantId?: true
    userId?: true
  }

  export type UserTaskCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    archivedAt?: true
    deletedAt?: true
    createdBy?: true
    taskId?: true
    tenantId?: true
    userId?: true
    _all?: true
  }

  export type UserTaskAggregateArgs = {
    /**
     * Filter which UserTask to aggregate.
     * 
    **/
    where?: UserTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTasks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UserTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTasks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserTasks
    **/
    _count?: true | UserTaskCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserTaskMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserTaskMaxAggregateInputType
  }

  export type GetUserTaskAggregateType<T extends UserTaskAggregateArgs> = {
        [P in keyof T & keyof AggregateUserTask]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserTask[P]>
      : GetScalarType<T[P], AggregateUserTask[P]>
  }




  export type UserTaskGroupByArgs = {
    where?: UserTaskWhereInput
    orderBy?: Enumerable<UserTaskOrderByWithAggregationInput>
    by: Array<UserTaskScalarFieldEnum>
    having?: UserTaskScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserTaskCountAggregateInputType | true
    _min?: UserTaskMinAggregateInputType
    _max?: UserTaskMaxAggregateInputType
  }


  export type UserTaskGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    archivedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    taskId: string
    tenantId: string
    userId: string
    _count: UserTaskCountAggregateOutputType | null
    _min: UserTaskMinAggregateOutputType | null
    _max: UserTaskMaxAggregateOutputType | null
  }

  type GetUserTaskGroupByPayload<T extends UserTaskGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UserTaskGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserTaskGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserTaskGroupByOutputType[P]>
            : GetScalarType<T[P], UserTaskGroupByOutputType[P]>
        }
      >
    >


  export type UserTaskSelect = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    archivedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    taskId?: boolean
    tenantId?: boolean
    userId?: boolean
    User_UserTask_createdByToUser?: boolean | UserArgs
    Task?: boolean | TaskArgs
    Tenant?: boolean | TenantArgs
    User_UserTask_userIdToUser?: boolean | UserArgs
  }


  export type UserTaskInclude = {
    User_UserTask_createdByToUser?: boolean | UserArgs
    Task?: boolean | TaskArgs
    Tenant?: boolean | TenantArgs
    User_UserTask_userIdToUser?: boolean | UserArgs
  } 

  export type UserTaskGetPayload<S extends boolean | null | undefined | UserTaskArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UserTask :
    S extends undefined ? never :
    S extends { include: any } & (UserTaskArgs | UserTaskFindManyArgs)
    ? UserTask  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'User_UserTask_createdByToUser' ? UserGetPayload<S['include'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['include'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['include'][P]> :
        P extends 'User_UserTask_userIdToUser' ? UserGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (UserTaskArgs | UserTaskFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'User_UserTask_createdByToUser' ? UserGetPayload<S['select'][P]> | null :
        P extends 'Task' ? TaskGetPayload<S['select'][P]> :
        P extends 'Tenant' ? TenantGetPayload<S['select'][P]> :
        P extends 'User_UserTask_userIdToUser' ? UserGetPayload<S['select'][P]> :  P extends keyof UserTask ? UserTask[P] : never
  } 
      : UserTask


  type UserTaskCountArgs = Merge<
    Omit<UserTaskFindManyArgs, 'select' | 'include'> & {
      select?: UserTaskCountAggregateInputType | true
    }
  >

  export interface UserTaskDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one UserTask that matches the filter.
     * @param {UserTaskFindUniqueArgs} args - Arguments to find a UserTask
     * @example
     * // Get one UserTask
     * const userTask = await prisma.userTask.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UserTaskFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UserTaskFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'UserTask'> extends True ? Prisma__UserTaskClient<UserTaskGetPayload<T>> : Prisma__UserTaskClient<UserTaskGetPayload<T> | null, null>

    /**
     * Find one UserTask that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UserTaskFindUniqueOrThrowArgs} args - Arguments to find a UserTask
     * @example
     * // Get one UserTask
     * const userTask = await prisma.userTask.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UserTaskFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UserTaskFindUniqueOrThrowArgs>
    ): Prisma__UserTaskClient<UserTaskGetPayload<T>>

    /**
     * Find the first UserTask that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskFindFirstArgs} args - Arguments to find a UserTask
     * @example
     * // Get one UserTask
     * const userTask = await prisma.userTask.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UserTaskFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UserTaskFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'UserTask'> extends True ? Prisma__UserTaskClient<UserTaskGetPayload<T>> : Prisma__UserTaskClient<UserTaskGetPayload<T> | null, null>

    /**
     * Find the first UserTask that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskFindFirstOrThrowArgs} args - Arguments to find a UserTask
     * @example
     * // Get one UserTask
     * const userTask = await prisma.userTask.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UserTaskFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UserTaskFindFirstOrThrowArgs>
    ): Prisma__UserTaskClient<UserTaskGetPayload<T>>

    /**
     * Find zero or more UserTasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserTasks
     * const userTasks = await prisma.userTask.findMany()
     * 
     * // Get first 10 UserTasks
     * const userTasks = await prisma.userTask.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userTaskWithIdOnly = await prisma.userTask.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UserTaskFindManyArgs>(
      args?: SelectSubset<T, UserTaskFindManyArgs>
    ): PrismaPromise<Array<UserTaskGetPayload<T>>>

    /**
     * Create a UserTask.
     * @param {UserTaskCreateArgs} args - Arguments to create a UserTask.
     * @example
     * // Create one UserTask
     * const UserTask = await prisma.userTask.create({
     *   data: {
     *     // ... data to create a UserTask
     *   }
     * })
     * 
    **/
    create<T extends UserTaskCreateArgs>(
      args: SelectSubset<T, UserTaskCreateArgs>
    ): Prisma__UserTaskClient<UserTaskGetPayload<T>>

    /**
     * Create many UserTasks.
     *     @param {UserTaskCreateManyArgs} args - Arguments to create many UserTasks.
     *     @example
     *     // Create many UserTasks
     *     const userTask = await prisma.userTask.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UserTaskCreateManyArgs>(
      args?: SelectSubset<T, UserTaskCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a UserTask.
     * @param {UserTaskDeleteArgs} args - Arguments to delete one UserTask.
     * @example
     * // Delete one UserTask
     * const UserTask = await prisma.userTask.delete({
     *   where: {
     *     // ... filter to delete one UserTask
     *   }
     * })
     * 
    **/
    delete<T extends UserTaskDeleteArgs>(
      args: SelectSubset<T, UserTaskDeleteArgs>
    ): Prisma__UserTaskClient<UserTaskGetPayload<T>>

    /**
     * Update one UserTask.
     * @param {UserTaskUpdateArgs} args - Arguments to update one UserTask.
     * @example
     * // Update one UserTask
     * const userTask = await prisma.userTask.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UserTaskUpdateArgs>(
      args: SelectSubset<T, UserTaskUpdateArgs>
    ): Prisma__UserTaskClient<UserTaskGetPayload<T>>

    /**
     * Delete zero or more UserTasks.
     * @param {UserTaskDeleteManyArgs} args - Arguments to filter UserTasks to delete.
     * @example
     * // Delete a few UserTasks
     * const { count } = await prisma.userTask.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UserTaskDeleteManyArgs>(
      args?: SelectSubset<T, UserTaskDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserTasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserTasks
     * const userTask = await prisma.userTask.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UserTaskUpdateManyArgs>(
      args: SelectSubset<T, UserTaskUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one UserTask.
     * @param {UserTaskUpsertArgs} args - Arguments to update or create a UserTask.
     * @example
     * // Update or create a UserTask
     * const userTask = await prisma.userTask.upsert({
     *   create: {
     *     // ... data to create a UserTask
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserTask we want to update
     *   }
     * })
    **/
    upsert<T extends UserTaskUpsertArgs>(
      args: SelectSubset<T, UserTaskUpsertArgs>
    ): Prisma__UserTaskClient<UserTaskGetPayload<T>>

    /**
     * Count the number of UserTasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskCountArgs} args - Arguments to filter UserTasks to count.
     * @example
     * // Count the number of UserTasks
     * const count = await prisma.userTask.count({
     *   where: {
     *     // ... the filter for the UserTasks we want to count
     *   }
     * })
    **/
    count<T extends UserTaskCountArgs>(
      args?: Subset<T, UserTaskCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserTaskCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserTask.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserTaskAggregateArgs>(args: Subset<T, UserTaskAggregateArgs>): PrismaPromise<GetUserTaskAggregateType<T>>

    /**
     * Group by UserTask.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserTaskGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserTaskGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserTaskGroupByArgs['orderBy'] }
        : { orderBy?: UserTaskGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserTaskGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserTaskGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for UserTask.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UserTaskClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    User_UserTask_createdByToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    Task<T extends TaskArgs= {}>(args?: Subset<T, TaskArgs>): Prisma__TaskClient<TaskGetPayload<T> | Null>;

    Tenant<T extends TenantArgs= {}>(args?: Subset<T, TenantArgs>): Prisma__TenantClient<TenantGetPayload<T> | Null>;

    User_UserTask_userIdToUser<T extends UserArgs= {}>(args?: Subset<T, UserArgs>): Prisma__UserClient<UserGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * UserTask base type for findUnique actions
   */
  export type UserTaskFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * Filter, which UserTask to fetch.
     * 
    **/
    where: UserTaskWhereUniqueInput
  }

  /**
   * UserTask findUnique
   */
  export interface UserTaskFindUniqueArgs extends UserTaskFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * UserTask findUniqueOrThrow
   */
  export type UserTaskFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * Filter, which UserTask to fetch.
     * 
    **/
    where: UserTaskWhereUniqueInput
  }


  /**
   * UserTask base type for findFirst actions
   */
  export type UserTaskFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * Filter, which UserTask to fetch.
     * 
    **/
    where?: UserTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTasks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserTasks.
     * 
    **/
    cursor?: UserTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTasks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserTasks.
     * 
    **/
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }

  /**
   * UserTask findFirst
   */
  export interface UserTaskFindFirstArgs extends UserTaskFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * UserTask findFirstOrThrow
   */
  export type UserTaskFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * Filter, which UserTask to fetch.
     * 
    **/
    where?: UserTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTasks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserTasks.
     * 
    **/
    cursor?: UserTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTasks.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserTasks.
     * 
    **/
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }


  /**
   * UserTask findMany
   */
  export type UserTaskFindManyArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * Filter, which UserTasks to fetch.
     * 
    **/
    where?: UserTaskWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserTasks to fetch.
     * 
    **/
    orderBy?: Enumerable<UserTaskOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserTasks.
     * 
    **/
    cursor?: UserTaskWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserTasks from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserTasks.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UserTaskScalarFieldEnum>
  }


  /**
   * UserTask create
   */
  export type UserTaskCreateArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * The data needed to create a UserTask.
     * 
    **/
    data: XOR<UserTaskCreateInput, UserTaskUncheckedCreateInput>
  }


  /**
   * UserTask createMany
   */
  export type UserTaskCreateManyArgs = {
    /**
     * The data used to create many UserTasks.
     * 
    **/
    data: Enumerable<UserTaskCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * UserTask update
   */
  export type UserTaskUpdateArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * The data needed to update a UserTask.
     * 
    **/
    data: XOR<UserTaskUpdateInput, UserTaskUncheckedUpdateInput>
    /**
     * Choose, which UserTask to update.
     * 
    **/
    where: UserTaskWhereUniqueInput
  }


  /**
   * UserTask updateMany
   */
  export type UserTaskUpdateManyArgs = {
    /**
     * The data used to update UserTasks.
     * 
    **/
    data: XOR<UserTaskUpdateManyMutationInput, UserTaskUncheckedUpdateManyInput>
    /**
     * Filter which UserTasks to update
     * 
    **/
    where?: UserTaskWhereInput
  }


  /**
   * UserTask upsert
   */
  export type UserTaskUpsertArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * The filter to search for the UserTask to update in case it exists.
     * 
    **/
    where: UserTaskWhereUniqueInput
    /**
     * In case the UserTask found by the `where` argument doesn't exist, create a new UserTask with this data.
     * 
    **/
    create: XOR<UserTaskCreateInput, UserTaskUncheckedCreateInput>
    /**
     * In case the UserTask was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UserTaskUpdateInput, UserTaskUncheckedUpdateInput>
  }


  /**
   * UserTask delete
   */
  export type UserTaskDeleteArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
    /**
     * Filter which UserTask to delete.
     * 
    **/
    where: UserTaskWhereUniqueInput
  }


  /**
   * UserTask deleteMany
   */
  export type UserTaskDeleteManyArgs = {
    /**
     * Filter which UserTasks to delete
     * 
    **/
    where?: UserTaskWhereInput
  }


  /**
   * UserTask without action
   */
  export type UserTaskArgs = {
    /**
     * Select specific fields to fetch from the UserTask
     * 
    **/
    select?: UserTaskSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UserTaskInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const ApiKeyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    createdAt: 'createdAt',
    tenantId: 'tenantId',
    userId: 'userId'
  };

  export type ApiKeyScalarFieldEnum = (typeof ApiKeyScalarFieldEnum)[keyof typeof ApiKeyScalarFieldEnum]


  export const DailyLogItemScalarFieldEnum: {
    id: 'id',
    note: 'note',
    isNoteVisible: 'isNoteVisible',
    itemType: 'itemType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    taskId: 'taskId',
    dailyLogId: 'dailyLogId',
    tenantId: 'tenantId',
    equipmentId: 'equipmentId'
  };

  export type DailyLogItemScalarFieldEnum = (typeof DailyLogItemScalarFieldEnum)[keyof typeof DailyLogItemScalarFieldEnum]


  export const DailyLogScalarFieldEnum: {
    id: 'id',
    date: 'date',
    status: 'status',
    note: 'note',
    rating: 'rating',
    ratingNote: 'ratingNote',
    managerNote: 'managerNote',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type DailyLogScalarFieldEnum = (typeof DailyLogScalarFieldEnum)[keyof typeof DailyLogScalarFieldEnum]


  export const EquipmentPropertyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    order: 'order',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type EquipmentPropertyScalarFieldEnum = (typeof EquipmentPropertyScalarFieldEnum)[keyof typeof EquipmentPropertyScalarFieldEnum]


  export const EquipmentPropertyValueScalarFieldEnum: {
    id: 'id',
    value: 'value',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    equipmentId: 'equipmentId',
    equipmentPropertyId: 'equipmentPropertyId',
    tenantId: 'tenantId'
  };

  export type EquipmentPropertyValueScalarFieldEnum = (typeof EquipmentPropertyValueScalarFieldEnum)[keyof typeof EquipmentPropertyValueScalarFieldEnum]


  export const EquipmentScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    organization: 'organization',
    description: 'description',
    updatedAt: 'updatedAt',
    createdAt: 'createdAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId',
    userId: 'userId'
  };

  export type EquipmentScalarFieldEnum = (typeof EquipmentScalarFieldEnum)[keyof typeof EquipmentScalarFieldEnum]


  export const FeedbackScalarFieldEnum: {
    id: 'id',
    text: 'text',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type FeedbackScalarFieldEnum = (typeof FeedbackScalarFieldEnum)[keyof typeof FeedbackScalarFieldEnum]


  export const FilePropertyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    order: 'order',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type FilePropertyScalarFieldEnum = (typeof FilePropertyScalarFieldEnum)[keyof typeof FilePropertyScalarFieldEnum]


  export const FilePropertyValueScalarFieldEnum: {
    id: 'id',
    value: 'value',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    fileId: 'fileId',
    propertyId: 'propertyId',
    tenantId: 'tenantId'
  };

  export type FilePropertyValueScalarFieldEnum = (typeof FilePropertyValueScalarFieldEnum)[keyof typeof FilePropertyValueScalarFieldEnum]


  export const FileScalarFieldEnum: {
    id: 'id',
    description: 'description',
    locationLabel: 'locationLabel',
    locationLatitude: 'locationLatitude',
    locationLongitude: 'locationLongitude',
    name: 'name',
    type: 'type',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    imageId: 'imageId',
    createdBy: 'createdBy',
    tenantId: 'tenantId',
    projectId: 'projectId',
    dailyLogId: 'dailyLogId'
  };

  export type FileScalarFieldEnum = (typeof FileScalarFieldEnum)[keyof typeof FileScalarFieldEnum]


  export const ImageScalarFieldEnum: {
    id: 'id',
    bucketId: 'bucketId',
    blurhash: 'blurhash',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type ImageScalarFieldEnum = (typeof ImageScalarFieldEnum)[keyof typeof ImageScalarFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const LocationEntryScalarFieldEnum: {
    id: 'id',
    latitude: 'latitude',
    longitude: 'longitude',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    dailyLogId: 'dailyLogId',
    tenantId: 'tenantId'
  };

  export type LocationEntryScalarFieldEnum = (typeof LocationEntryScalarFieldEnum)[keyof typeof LocationEntryScalarFieldEnum]


  export const ProjectPropertyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    order: 'order',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type ProjectPropertyScalarFieldEnum = (typeof ProjectPropertyScalarFieldEnum)[keyof typeof ProjectPropertyScalarFieldEnum]


  export const ProjectPropertyValueScalarFieldEnum: {
    id: 'id',
    value: 'value',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    projectId: 'projectId',
    projectPropertyId: 'projectPropertyId',
    tenantId: 'tenantId'
  };

  export type ProjectPropertyValueScalarFieldEnum = (typeof ProjectPropertyValueScalarFieldEnum)[keyof typeof ProjectPropertyValueScalarFieldEnum]


  export const ProjectScalarFieldEnum: {
    id: 'id',
    name: 'name',
    progress: 'progress',
    dueDate: 'dueDate',
    description: 'description',
    locationLabel: 'locationLabel',
    locationLatitude: 'locationLatitude',
    locationLongitude: 'locationLongitude',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type ProjectScalarFieldEnum = (typeof ProjectScalarFieldEnum)[keyof typeof ProjectScalarFieldEnum]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const TaskPropertyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    order: 'order',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type TaskPropertyScalarFieldEnum = (typeof TaskPropertyScalarFieldEnum)[keyof typeof TaskPropertyScalarFieldEnum]


  export const TaskPropertyValueScalarFieldEnum: {
    id: 'id',
    value: 'value',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    taskPropertyId: 'taskPropertyId',
    taskId: 'taskId',
    tenantId: 'tenantId'
  };

  export type TaskPropertyValueScalarFieldEnum = (typeof TaskPropertyValueScalarFieldEnum)[keyof typeof TaskPropertyValueScalarFieldEnum]


  export const TaskScalarFieldEnum: {
    id: 'id',
    description: 'description',
    name: 'name',
    statusId: 'statusId',
    systemStatusId: 'systemStatusId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    projectId: 'projectId',
    tenantId: 'tenantId',
    parentId: 'parentId',
    taskStatusId: 'taskStatusId'
  };

  export type TaskScalarFieldEnum = (typeof TaskScalarFieldEnum)[keyof typeof TaskScalarFieldEnum]


  export const TaskStatusScalarFieldEnum: {
    id: 'id',
    displayOrder: 'displayOrder',
    iconColor: 'iconColor',
    name: 'name',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    tenantId: 'tenantId'
  };

  export type TaskStatusScalarFieldEnum = (typeof TaskStatusScalarFieldEnum)[keyof typeof TaskStatusScalarFieldEnum]


  export const TenantScalarFieldEnum: {
    id: 'id',
    name: 'name',
    settings: 'settings',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy'
  };

  export type TenantScalarFieldEnum = (typeof TenantScalarFieldEnum)[keyof typeof TenantScalarFieldEnum]


  export const TenantUserScalarFieldEnum: {
    id: 'id',
    userRole: 'userRole',
    inviteEmail: 'inviteEmail',
    inviteSentAt: 'inviteSentAt',
    inviteStatus: 'inviteStatus',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    userId: 'userId',
    tenantId: 'tenantId'
  };

  export type TenantUserScalarFieldEnum = (typeof TenantUserScalarFieldEnum)[keyof typeof TenantUserScalarFieldEnum]


  export const TimeBlockScalarFieldEnum: {
    id: 'id',
    duration: 'duration',
    entryType: 'entryType',
    rangeStartAt: 'rangeStartAt',
    rangeEndAt: 'rangeEndAt',
    timerStartLatitude: 'timerStartLatitude',
    timerStartLongitude: 'timerStartLongitude',
    timerStartAddress: 'timerStartAddress',
    timerStartAt: 'timerStartAt',
    timerEndAt: 'timerEndAt',
    timerEndLatitude: 'timerEndLatitude',
    timerEndLongitude: 'timerEndLongitude',
    timerEndAddress: 'timerEndAddress',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    dailyLogItemId: 'dailyLogItemId',
    tenantId: 'tenantId'
  };

  export type TimeBlockScalarFieldEnum = (typeof TimeBlockScalarFieldEnum)[keyof typeof TimeBlockScalarFieldEnum]


  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    name: 'name',
    preferredLanguage: 'preferredLanguage',
    settings: 'settings',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    imageId: 'imageId',
    currentTenantId: 'currentTenantId'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserTaskScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    archivedAt: 'archivedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    taskId: 'taskId',
    tenantId: 'tenantId',
    userId: 'userId'
  };

  export type UserTaskScalarFieldEnum = (typeof UserTaskScalarFieldEnum)[keyof typeof UserTaskScalarFieldEnum]


  /**
   * Deep Input Types
   */


  export type ApiKeyWhereInput = {
    AND?: Enumerable<ApiKeyWhereInput>
    OR?: Enumerable<ApiKeyWhereInput>
    NOT?: Enumerable<ApiKeyWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tenantId?: StringFilter | string
    userId?: StringNullableFilter | string | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    User?: XOR<UserRelationFilter, UserWhereInput> | null
  }

  export type ApiKeyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    Tenant?: TenantOrderByWithRelationInput
    User?: UserOrderByWithRelationInput
  }

  export type ApiKeyWhereUniqueInput = {
    id?: string
  }

  export type ApiKeyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    _count?: ApiKeyCountOrderByAggregateInput
    _max?: ApiKeyMaxOrderByAggregateInput
    _min?: ApiKeyMinOrderByAggregateInput
  }

  export type ApiKeyScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ApiKeyScalarWhereWithAggregatesInput>
    OR?: Enumerable<ApiKeyScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ApiKeyScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    tenantId?: StringWithAggregatesFilter | string
    userId?: StringNullableWithAggregatesFilter | string | null
  }

  export type DailyLogWhereInput = {
    AND?: Enumerable<DailyLogWhereInput>
    OR?: Enumerable<DailyLogWhereInput>
    NOT?: Enumerable<DailyLogWhereInput>
    id?: StringFilter | string
    date?: DateTimeNullableFilter | Date | string | null
    status?: StringFilter | string
    note?: StringFilter | string
    rating?: IntFilter | number
    ratingNote?: StringFilter | string
    managerNote?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    DailyLogItem?: DailyLogItemListRelationFilter
    File?: FileListRelationFilter
    LocationEntry?: LocationEntryListRelationFilter
  }

  export type DailyLogOrderByWithRelationInput = {
    id?: SortOrder
    date?: SortOrder
    status?: SortOrder
    note?: SortOrder
    rating?: SortOrder
    ratingNote?: SortOrder
    managerNote?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    DailyLogItem?: DailyLogItemOrderByRelationAggregateInput
    File?: FileOrderByRelationAggregateInput
    LocationEntry?: LocationEntryOrderByRelationAggregateInput
  }

  export type DailyLogWhereUniqueInput = {
    id?: string
  }

  export type DailyLogOrderByWithAggregationInput = {
    id?: SortOrder
    date?: SortOrder
    status?: SortOrder
    note?: SortOrder
    rating?: SortOrder
    ratingNote?: SortOrder
    managerNote?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: DailyLogCountOrderByAggregateInput
    _avg?: DailyLogAvgOrderByAggregateInput
    _max?: DailyLogMaxOrderByAggregateInput
    _min?: DailyLogMinOrderByAggregateInput
    _sum?: DailyLogSumOrderByAggregateInput
  }

  export type DailyLogScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DailyLogScalarWhereWithAggregatesInput>
    OR?: Enumerable<DailyLogScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DailyLogScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    date?: DateTimeNullableWithAggregatesFilter | Date | string | null
    status?: StringWithAggregatesFilter | string
    note?: StringWithAggregatesFilter | string
    rating?: IntWithAggregatesFilter | number
    ratingNote?: StringWithAggregatesFilter | string
    managerNote?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type DailyLogItemWhereInput = {
    AND?: Enumerable<DailyLogItemWhereInput>
    OR?: Enumerable<DailyLogItemWhereInput>
    NOT?: Enumerable<DailyLogItemWhereInput>
    id?: StringFilter | string
    note?: StringNullableFilter | string | null
    isNoteVisible?: BoolNullableFilter | boolean | null
    itemType?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    taskId?: StringNullableFilter | string | null
    dailyLogId?: StringFilter | string
    tenantId?: StringFilter | string
    equipmentId?: StringNullableFilter | string | null
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    DailyLog?: XOR<DailyLogRelationFilter, DailyLogWhereInput>
    Equipment?: XOR<EquipmentRelationFilter, EquipmentWhereInput> | null
    Task?: XOR<TaskRelationFilter, TaskWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    TimeBlock?: TimeBlockListRelationFilter
  }

  export type DailyLogItemOrderByWithRelationInput = {
    id?: SortOrder
    note?: SortOrder
    isNoteVisible?: SortOrder
    itemType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    equipmentId?: SortOrder
    User?: UserOrderByWithRelationInput
    DailyLog?: DailyLogOrderByWithRelationInput
    Equipment?: EquipmentOrderByWithRelationInput
    Task?: TaskOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    TimeBlock?: TimeBlockOrderByRelationAggregateInput
  }

  export type DailyLogItemWhereUniqueInput = {
    id?: string
  }

  export type DailyLogItemOrderByWithAggregationInput = {
    id?: SortOrder
    note?: SortOrder
    isNoteVisible?: SortOrder
    itemType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    equipmentId?: SortOrder
    _count?: DailyLogItemCountOrderByAggregateInput
    _max?: DailyLogItemMaxOrderByAggregateInput
    _min?: DailyLogItemMinOrderByAggregateInput
  }

  export type DailyLogItemScalarWhereWithAggregatesInput = {
    AND?: Enumerable<DailyLogItemScalarWhereWithAggregatesInput>
    OR?: Enumerable<DailyLogItemScalarWhereWithAggregatesInput>
    NOT?: Enumerable<DailyLogItemScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    note?: StringNullableWithAggregatesFilter | string | null
    isNoteVisible?: BoolNullableWithAggregatesFilter | boolean | null
    itemType?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    taskId?: StringNullableWithAggregatesFilter | string | null
    dailyLogId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
    equipmentId?: StringNullableWithAggregatesFilter | string | null
  }

  export type EquipmentWhereInput = {
    AND?: Enumerable<EquipmentWhereInput>
    OR?: Enumerable<EquipmentWhereInput>
    NOT?: Enumerable<EquipmentWhereInput>
    id?: StringFilter | string
    name?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    organization?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    updatedAt?: DateTimeFilter | Date | string
    createdAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    userId?: StringNullableFilter | string | null
    DailyLogItem?: DailyLogItemListRelationFilter
    User_Equipment_createdByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    User_Equipment_userIdToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    EquipmentPropertyValue?: EquipmentPropertyValueListRelationFilter
  }

  export type EquipmentOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    organization?: SortOrder
    description?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    DailyLogItem?: DailyLogItemOrderByRelationAggregateInput
    User_Equipment_createdByToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_Equipment_userIdToUser?: UserOrderByWithRelationInput
    EquipmentPropertyValue?: EquipmentPropertyValueOrderByRelationAggregateInput
  }

  export type EquipmentWhereUniqueInput = {
    id?: string
  }

  export type EquipmentOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    organization?: SortOrder
    description?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    _count?: EquipmentCountOrderByAggregateInput
    _max?: EquipmentMaxOrderByAggregateInput
    _min?: EquipmentMinOrderByAggregateInput
  }

  export type EquipmentScalarWhereWithAggregatesInput = {
    AND?: Enumerable<EquipmentScalarWhereWithAggregatesInput>
    OR?: Enumerable<EquipmentScalarWhereWithAggregatesInput>
    NOT?: Enumerable<EquipmentScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    organization?: StringNullableWithAggregatesFilter | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
    userId?: StringNullableWithAggregatesFilter | string | null
  }

  export type EquipmentPropertyWhereInput = {
    AND?: Enumerable<EquipmentPropertyWhereInput>
    OR?: Enumerable<EquipmentPropertyWhereInput>
    NOT?: Enumerable<EquipmentPropertyWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    EquipmentPropertyValue?: EquipmentPropertyValueListRelationFilter
  }

  export type EquipmentPropertyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    EquipmentPropertyValue?: EquipmentPropertyValueOrderByRelationAggregateInput
  }

  export type EquipmentPropertyWhereUniqueInput = {
    id?: string
  }

  export type EquipmentPropertyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: EquipmentPropertyCountOrderByAggregateInput
    _avg?: EquipmentPropertyAvgOrderByAggregateInput
    _max?: EquipmentPropertyMaxOrderByAggregateInput
    _min?: EquipmentPropertyMinOrderByAggregateInput
    _sum?: EquipmentPropertySumOrderByAggregateInput
  }

  export type EquipmentPropertyScalarWhereWithAggregatesInput = {
    AND?: Enumerable<EquipmentPropertyScalarWhereWithAggregatesInput>
    OR?: Enumerable<EquipmentPropertyScalarWhereWithAggregatesInput>
    NOT?: Enumerable<EquipmentPropertyScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    order?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type EquipmentPropertyValueWhereInput = {
    AND?: Enumerable<EquipmentPropertyValueWhereInput>
    OR?: Enumerable<EquipmentPropertyValueWhereInput>
    NOT?: Enumerable<EquipmentPropertyValueWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    equipmentId?: StringFilter | string
    equipmentPropertyId?: StringFilter | string
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Equipment?: XOR<EquipmentRelationFilter, EquipmentWhereInput>
    EquipmentProperty?: XOR<EquipmentPropertyRelationFilter, EquipmentPropertyWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type EquipmentPropertyValueOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    equipmentId?: SortOrder
    equipmentPropertyId?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Equipment?: EquipmentOrderByWithRelationInput
    EquipmentProperty?: EquipmentPropertyOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type EquipmentPropertyValueWhereUniqueInput = {
    id?: string
  }

  export type EquipmentPropertyValueOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    equipmentId?: SortOrder
    equipmentPropertyId?: SortOrder
    tenantId?: SortOrder
    _count?: EquipmentPropertyValueCountOrderByAggregateInput
    _max?: EquipmentPropertyValueMaxOrderByAggregateInput
    _min?: EquipmentPropertyValueMinOrderByAggregateInput
  }

  export type EquipmentPropertyValueScalarWhereWithAggregatesInput = {
    AND?: Enumerable<EquipmentPropertyValueScalarWhereWithAggregatesInput>
    OR?: Enumerable<EquipmentPropertyValueScalarWhereWithAggregatesInput>
    NOT?: Enumerable<EquipmentPropertyValueScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    value?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    equipmentId?: StringWithAggregatesFilter | string
    equipmentPropertyId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
  }

  export type FeedbackWhereInput = {
    AND?: Enumerable<FeedbackWhereInput>
    OR?: Enumerable<FeedbackWhereInput>
    NOT?: Enumerable<FeedbackWhereInput>
    id?: StringFilter | string
    text?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type FeedbackOrderByWithRelationInput = {
    id?: SortOrder
    text?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type FeedbackWhereUniqueInput = {
    id?: string
  }

  export type FeedbackOrderByWithAggregationInput = {
    id?: SortOrder
    text?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: FeedbackCountOrderByAggregateInput
    _max?: FeedbackMaxOrderByAggregateInput
    _min?: FeedbackMinOrderByAggregateInput
  }

  export type FeedbackScalarWhereWithAggregatesInput = {
    AND?: Enumerable<FeedbackScalarWhereWithAggregatesInput>
    OR?: Enumerable<FeedbackScalarWhereWithAggregatesInput>
    NOT?: Enumerable<FeedbackScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    text?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type FileWhereInput = {
    AND?: Enumerable<FileWhereInput>
    OR?: Enumerable<FileWhereInput>
    NOT?: Enumerable<FileWhereInput>
    id?: StringFilter | string
    description?: StringNullableFilter | string | null
    locationLabel?: StringNullableFilter | string | null
    locationLatitude?: FloatNullableFilter | number | null
    locationLongitude?: FloatNullableFilter | number | null
    name?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    imageId?: StringFilter | string
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    projectId?: StringNullableFilter | string | null
    dailyLogId?: StringNullableFilter | string | null
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    DailyLog?: XOR<DailyLogRelationFilter, DailyLogWhereInput> | null
    Image?: XOR<ImageRelationFilter, ImageWhereInput>
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    FilePropertyValue?: FilePropertyValueListRelationFilter
  }

  export type FileOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    name?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    projectId?: SortOrder
    dailyLogId?: SortOrder
    User?: UserOrderByWithRelationInput
    DailyLog?: DailyLogOrderByWithRelationInput
    Image?: ImageOrderByWithRelationInput
    Project?: ProjectOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    FilePropertyValue?: FilePropertyValueOrderByRelationAggregateInput
  }

  export type FileWhereUniqueInput = {
    id?: string
  }

  export type FileOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    name?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    projectId?: SortOrder
    dailyLogId?: SortOrder
    _count?: FileCountOrderByAggregateInput
    _avg?: FileAvgOrderByAggregateInput
    _max?: FileMaxOrderByAggregateInput
    _min?: FileMinOrderByAggregateInput
    _sum?: FileSumOrderByAggregateInput
  }

  export type FileScalarWhereWithAggregatesInput = {
    AND?: Enumerable<FileScalarWhereWithAggregatesInput>
    OR?: Enumerable<FileScalarWhereWithAggregatesInput>
    NOT?: Enumerable<FileScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    locationLabel?: StringNullableWithAggregatesFilter | string | null
    locationLatitude?: FloatNullableWithAggregatesFilter | number | null
    locationLongitude?: FloatNullableWithAggregatesFilter | number | null
    name?: StringNullableWithAggregatesFilter | string | null
    type?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    imageId?: StringWithAggregatesFilter | string
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
    projectId?: StringNullableWithAggregatesFilter | string | null
    dailyLogId?: StringNullableWithAggregatesFilter | string | null
  }

  export type FilePropertyWhereInput = {
    AND?: Enumerable<FilePropertyWhereInput>
    OR?: Enumerable<FilePropertyWhereInput>
    NOT?: Enumerable<FilePropertyWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    FilePropertyValue?: FilePropertyValueListRelationFilter
  }

  export type FilePropertyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    FilePropertyValue?: FilePropertyValueOrderByRelationAggregateInput
  }

  export type FilePropertyWhereUniqueInput = {
    id?: string
  }

  export type FilePropertyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: FilePropertyCountOrderByAggregateInput
    _avg?: FilePropertyAvgOrderByAggregateInput
    _max?: FilePropertyMaxOrderByAggregateInput
    _min?: FilePropertyMinOrderByAggregateInput
    _sum?: FilePropertySumOrderByAggregateInput
  }

  export type FilePropertyScalarWhereWithAggregatesInput = {
    AND?: Enumerable<FilePropertyScalarWhereWithAggregatesInput>
    OR?: Enumerable<FilePropertyScalarWhereWithAggregatesInput>
    NOT?: Enumerable<FilePropertyScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    order?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type FilePropertyValueWhereInput = {
    AND?: Enumerable<FilePropertyValueWhereInput>
    OR?: Enumerable<FilePropertyValueWhereInput>
    NOT?: Enumerable<FilePropertyValueWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    fileId?: StringFilter | string
    propertyId?: StringFilter | string
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    File?: XOR<FileRelationFilter, FileWhereInput>
    FileProperty?: XOR<FilePropertyRelationFilter, FilePropertyWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type FilePropertyValueOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    fileId?: SortOrder
    propertyId?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    File?: FileOrderByWithRelationInput
    FileProperty?: FilePropertyOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type FilePropertyValueWhereUniqueInput = {
    id?: string
  }

  export type FilePropertyValueOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    fileId?: SortOrder
    propertyId?: SortOrder
    tenantId?: SortOrder
    _count?: FilePropertyValueCountOrderByAggregateInput
    _max?: FilePropertyValueMaxOrderByAggregateInput
    _min?: FilePropertyValueMinOrderByAggregateInput
  }

  export type FilePropertyValueScalarWhereWithAggregatesInput = {
    AND?: Enumerable<FilePropertyValueScalarWhereWithAggregatesInput>
    OR?: Enumerable<FilePropertyValueScalarWhereWithAggregatesInput>
    NOT?: Enumerable<FilePropertyValueScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    value?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    fileId?: StringWithAggregatesFilter | string
    propertyId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
  }

  export type ImageWhereInput = {
    AND?: Enumerable<ImageWhereInput>
    OR?: Enumerable<ImageWhereInput>
    NOT?: Enumerable<ImageWhereInput>
    id?: StringFilter | string
    bucketId?: StringFilter | string
    blurhash?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    File?: FileListRelationFilter
    User_Image_createdByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    User_User_imageIdToImage?: UserListRelationFilter
  }

  export type ImageOrderByWithRelationInput = {
    id?: SortOrder
    bucketId?: SortOrder
    blurhash?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    File?: FileOrderByRelationAggregateInput
    User_Image_createdByToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_User_imageIdToImage?: UserOrderByRelationAggregateInput
  }

  export type ImageWhereUniqueInput = {
    id?: string
  }

  export type ImageOrderByWithAggregationInput = {
    id?: SortOrder
    bucketId?: SortOrder
    blurhash?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: ImageCountOrderByAggregateInput
    _max?: ImageMaxOrderByAggregateInput
    _min?: ImageMinOrderByAggregateInput
  }

  export type ImageScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ImageScalarWhereWithAggregatesInput>
    OR?: Enumerable<ImageScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ImageScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    bucketId?: StringWithAggregatesFilter | string
    blurhash?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type LocationEntryWhereInput = {
    AND?: Enumerable<LocationEntryWhereInput>
    OR?: Enumerable<LocationEntryWhereInput>
    NOT?: Enumerable<LocationEntryWhereInput>
    id?: StringFilter | string
    latitude?: FloatNullableFilter | number | null
    longitude?: FloatNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    dailyLogId?: StringFilter | string
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    DailyLog?: XOR<DailyLogRelationFilter, DailyLogWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type LocationEntryOrderByWithRelationInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    DailyLog?: DailyLogOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type LocationEntryWhereUniqueInput = {
    id?: string
  }

  export type LocationEntryOrderByWithAggregationInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    _count?: LocationEntryCountOrderByAggregateInput
    _avg?: LocationEntryAvgOrderByAggregateInput
    _max?: LocationEntryMaxOrderByAggregateInput
    _min?: LocationEntryMinOrderByAggregateInput
    _sum?: LocationEntrySumOrderByAggregateInput
  }

  export type LocationEntryScalarWhereWithAggregatesInput = {
    AND?: Enumerable<LocationEntryScalarWhereWithAggregatesInput>
    OR?: Enumerable<LocationEntryScalarWhereWithAggregatesInput>
    NOT?: Enumerable<LocationEntryScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    latitude?: FloatNullableWithAggregatesFilter | number | null
    longitude?: FloatNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    dailyLogId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
  }

  export type ProjectWhereInput = {
    AND?: Enumerable<ProjectWhereInput>
    OR?: Enumerable<ProjectWhereInput>
    NOT?: Enumerable<ProjectWhereInput>
    id?: StringFilter | string
    name?: StringNullableFilter | string | null
    progress?: FloatNullableFilter | number | null
    dueDate?: DateTimeNullableFilter | Date | string | null
    description?: StringNullableFilter | string | null
    locationLabel?: StringNullableFilter | string | null
    locationLatitude?: FloatNullableFilter | number | null
    locationLongitude?: FloatNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    File?: FileListRelationFilter
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    ProjectPropertyValue?: ProjectPropertyValueListRelationFilter
    Task?: TaskListRelationFilter
  }

  export type ProjectOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    progress?: SortOrder
    dueDate?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    File?: FileOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    ProjectPropertyValue?: ProjectPropertyValueOrderByRelationAggregateInput
    Task?: TaskOrderByRelationAggregateInput
  }

  export type ProjectWhereUniqueInput = {
    id?: string
  }

  export type ProjectOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    progress?: SortOrder
    dueDate?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: ProjectCountOrderByAggregateInput
    _avg?: ProjectAvgOrderByAggregateInput
    _max?: ProjectMaxOrderByAggregateInput
    _min?: ProjectMinOrderByAggregateInput
    _sum?: ProjectSumOrderByAggregateInput
  }

  export type ProjectScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProjectScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProjectScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProjectScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringNullableWithAggregatesFilter | string | null
    progress?: FloatNullableWithAggregatesFilter | number | null
    dueDate?: DateTimeNullableWithAggregatesFilter | Date | string | null
    description?: StringNullableWithAggregatesFilter | string | null
    locationLabel?: StringNullableWithAggregatesFilter | string | null
    locationLatitude?: FloatNullableWithAggregatesFilter | number | null
    locationLongitude?: FloatNullableWithAggregatesFilter | number | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type ProjectPropertyWhereInput = {
    AND?: Enumerable<ProjectPropertyWhereInput>
    OR?: Enumerable<ProjectPropertyWhereInput>
    NOT?: Enumerable<ProjectPropertyWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    ProjectPropertyValue?: ProjectPropertyValueListRelationFilter
  }

  export type ProjectPropertyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    ProjectPropertyValue?: ProjectPropertyValueOrderByRelationAggregateInput
  }

  export type ProjectPropertyWhereUniqueInput = {
    id?: string
  }

  export type ProjectPropertyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: ProjectPropertyCountOrderByAggregateInput
    _avg?: ProjectPropertyAvgOrderByAggregateInput
    _max?: ProjectPropertyMaxOrderByAggregateInput
    _min?: ProjectPropertyMinOrderByAggregateInput
    _sum?: ProjectPropertySumOrderByAggregateInput
  }

  export type ProjectPropertyScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProjectPropertyScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProjectPropertyScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProjectPropertyScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    order?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type ProjectPropertyValueWhereInput = {
    AND?: Enumerable<ProjectPropertyValueWhereInput>
    OR?: Enumerable<ProjectPropertyValueWhereInput>
    NOT?: Enumerable<ProjectPropertyValueWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    projectId?: StringFilter | string
    projectPropertyId?: StringFilter | string
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    ProjectProperty?: XOR<ProjectPropertyRelationFilter, ProjectPropertyWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type ProjectPropertyValueOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    projectPropertyId?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Project?: ProjectOrderByWithRelationInput
    ProjectProperty?: ProjectPropertyOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type ProjectPropertyValueWhereUniqueInput = {
    id?: string
  }

  export type ProjectPropertyValueOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    projectPropertyId?: SortOrder
    tenantId?: SortOrder
    _count?: ProjectPropertyValueCountOrderByAggregateInput
    _max?: ProjectPropertyValueMaxOrderByAggregateInput
    _min?: ProjectPropertyValueMinOrderByAggregateInput
  }

  export type ProjectPropertyValueScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProjectPropertyValueScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProjectPropertyValueScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProjectPropertyValueScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    value?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    projectId?: StringWithAggregatesFilter | string
    projectPropertyId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
  }

  export type TaskWhereInput = {
    AND?: Enumerable<TaskWhereInput>
    OR?: Enumerable<TaskWhereInput>
    NOT?: Enumerable<TaskWhereInput>
    id?: StringFilter | string
    description?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    statusId?: StringNullableFilter | string | null
    systemStatusId?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    projectId?: StringFilter | string
    tenantId?: StringFilter | string
    parentId?: StringNullableFilter | string | null
    taskStatusId?: StringNullableFilter | string | null
    DailyLogItem?: DailyLogItemListRelationFilter
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Task?: XOR<TaskRelationFilter, TaskWhereInput> | null
    other_Task?: TaskListRelationFilter
    Project?: XOR<ProjectRelationFilter, ProjectWhereInput>
    TaskStatus?: XOR<TaskStatusRelationFilter, TaskStatusWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    TaskPropertyValue?: TaskPropertyValueListRelationFilter
    UserTask?: UserTaskListRelationFilter
  }

  export type TaskOrderByWithRelationInput = {
    id?: SortOrder
    description?: SortOrder
    name?: SortOrder
    statusId?: SortOrder
    systemStatusId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    tenantId?: SortOrder
    parentId?: SortOrder
    taskStatusId?: SortOrder
    DailyLogItem?: DailyLogItemOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    Task?: TaskOrderByWithRelationInput
    other_Task?: TaskOrderByRelationAggregateInput
    Project?: ProjectOrderByWithRelationInput
    TaskStatus?: TaskStatusOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    TaskPropertyValue?: TaskPropertyValueOrderByRelationAggregateInput
    UserTask?: UserTaskOrderByRelationAggregateInput
  }

  export type TaskWhereUniqueInput = {
    id?: string
  }

  export type TaskOrderByWithAggregationInput = {
    id?: SortOrder
    description?: SortOrder
    name?: SortOrder
    statusId?: SortOrder
    systemStatusId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    tenantId?: SortOrder
    parentId?: SortOrder
    taskStatusId?: SortOrder
    _count?: TaskCountOrderByAggregateInput
    _max?: TaskMaxOrderByAggregateInput
    _min?: TaskMinOrderByAggregateInput
  }

  export type TaskScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaskScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaskScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaskScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    description?: StringNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    statusId?: StringNullableWithAggregatesFilter | string | null
    systemStatusId?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    projectId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
    parentId?: StringNullableWithAggregatesFilter | string | null
    taskStatusId?: StringNullableWithAggregatesFilter | string | null
  }

  export type TaskPropertyWhereInput = {
    AND?: Enumerable<TaskPropertyWhereInput>
    OR?: Enumerable<TaskPropertyWhereInput>
    NOT?: Enumerable<TaskPropertyWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    TaskPropertyValue?: TaskPropertyValueListRelationFilter
  }

  export type TaskPropertyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    TaskPropertyValue?: TaskPropertyValueOrderByRelationAggregateInput
  }

  export type TaskPropertyWhereUniqueInput = {
    id?: string
  }

  export type TaskPropertyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: TaskPropertyCountOrderByAggregateInput
    _avg?: TaskPropertyAvgOrderByAggregateInput
    _max?: TaskPropertyMaxOrderByAggregateInput
    _min?: TaskPropertyMinOrderByAggregateInput
    _sum?: TaskPropertySumOrderByAggregateInput
  }

  export type TaskPropertyScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaskPropertyScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaskPropertyScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaskPropertyScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    order?: IntWithAggregatesFilter | number
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type TaskPropertyValueWhereInput = {
    AND?: Enumerable<TaskPropertyValueWhereInput>
    OR?: Enumerable<TaskPropertyValueWhereInput>
    NOT?: Enumerable<TaskPropertyValueWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    taskPropertyId?: StringFilter | string
    taskId?: StringFilter | string
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Task?: XOR<TaskRelationFilter, TaskWhereInput>
    TaskProperty?: XOR<TaskPropertyRelationFilter, TaskPropertyWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type TaskPropertyValueOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskPropertyId?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    Task?: TaskOrderByWithRelationInput
    TaskProperty?: TaskPropertyOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type TaskPropertyValueWhereUniqueInput = {
    id?: string
  }

  export type TaskPropertyValueOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskPropertyId?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    _count?: TaskPropertyValueCountOrderByAggregateInput
    _max?: TaskPropertyValueMaxOrderByAggregateInput
    _min?: TaskPropertyValueMinOrderByAggregateInput
  }

  export type TaskPropertyValueScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaskPropertyValueScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaskPropertyValueScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaskPropertyValueScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    value?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    taskPropertyId?: StringWithAggregatesFilter | string
    taskId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
  }

  export type TaskStatusWhereInput = {
    AND?: Enumerable<TaskStatusWhereInput>
    OR?: Enumerable<TaskStatusWhereInput>
    NOT?: Enumerable<TaskStatusWhereInput>
    id?: StringFilter | string
    displayOrder?: IntFilter | number
    iconColor?: StringFilter | string
    name?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    Task?: TaskListRelationFilter
    User?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type TaskStatusOrderByWithRelationInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    iconColor?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    Task?: TaskOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type TaskStatusWhereUniqueInput = {
    id?: string
  }

  export type TaskStatusOrderByWithAggregationInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    iconColor?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    _count?: TaskStatusCountOrderByAggregateInput
    _avg?: TaskStatusAvgOrderByAggregateInput
    _max?: TaskStatusMaxOrderByAggregateInput
    _min?: TaskStatusMinOrderByAggregateInput
    _sum?: TaskStatusSumOrderByAggregateInput
  }

  export type TaskStatusScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaskStatusScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaskStatusScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaskStatusScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    displayOrder?: IntWithAggregatesFilter | number
    iconColor?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type TenantWhereInput = {
    AND?: Enumerable<TenantWhereInput>
    OR?: Enumerable<TenantWhereInput>
    NOT?: Enumerable<TenantWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    settings?: JsonFilter
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    ApiKey?: ApiKeyListRelationFilter
    DailyLog?: DailyLogListRelationFilter
    DailyLogItem?: DailyLogItemListRelationFilter
    Equipment?: EquipmentListRelationFilter
    EquipmentProperty?: EquipmentPropertyListRelationFilter
    EquipmentPropertyValue?: EquipmentPropertyValueListRelationFilter
    Feedback?: FeedbackListRelationFilter
    File?: FileListRelationFilter
    FileProperty?: FilePropertyListRelationFilter
    FilePropertyValue?: FilePropertyValueListRelationFilter
    Image?: ImageListRelationFilter
    LocationEntry?: LocationEntryListRelationFilter
    Project?: ProjectListRelationFilter
    ProjectProperty?: ProjectPropertyListRelationFilter
    ProjectPropertyValue?: ProjectPropertyValueListRelationFilter
    Task?: TaskListRelationFilter
    TaskProperty?: TaskPropertyListRelationFilter
    TaskPropertyValue?: TaskPropertyValueListRelationFilter
    TaskStatus?: TaskStatusListRelationFilter
    User_Tenant_createdByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    TenantUser?: TenantUserListRelationFilter
    TimeBlock?: TimeBlockListRelationFilter
    User_User_currentTenantIdToTenant?: UserListRelationFilter
    UserTask?: UserTaskListRelationFilter
  }

  export type TenantOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    ApiKey?: ApiKeyOrderByRelationAggregateInput
    DailyLog?: DailyLogOrderByRelationAggregateInput
    DailyLogItem?: DailyLogItemOrderByRelationAggregateInput
    Equipment?: EquipmentOrderByRelationAggregateInput
    EquipmentProperty?: EquipmentPropertyOrderByRelationAggregateInput
    EquipmentPropertyValue?: EquipmentPropertyValueOrderByRelationAggregateInput
    Feedback?: FeedbackOrderByRelationAggregateInput
    File?: FileOrderByRelationAggregateInput
    FileProperty?: FilePropertyOrderByRelationAggregateInput
    FilePropertyValue?: FilePropertyValueOrderByRelationAggregateInput
    Image?: ImageOrderByRelationAggregateInput
    LocationEntry?: LocationEntryOrderByRelationAggregateInput
    Project?: ProjectOrderByRelationAggregateInput
    ProjectProperty?: ProjectPropertyOrderByRelationAggregateInput
    ProjectPropertyValue?: ProjectPropertyValueOrderByRelationAggregateInput
    Task?: TaskOrderByRelationAggregateInput
    TaskProperty?: TaskPropertyOrderByRelationAggregateInput
    TaskPropertyValue?: TaskPropertyValueOrderByRelationAggregateInput
    TaskStatus?: TaskStatusOrderByRelationAggregateInput
    User_Tenant_createdByToUser?: UserOrderByWithRelationInput
    TenantUser?: TenantUserOrderByRelationAggregateInput
    TimeBlock?: TimeBlockOrderByRelationAggregateInput
    User_User_currentTenantIdToTenant?: UserOrderByRelationAggregateInput
    UserTask?: UserTaskOrderByRelationAggregateInput
  }

  export type TenantWhereUniqueInput = {
    id?: string
  }

  export type TenantOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    _count?: TenantCountOrderByAggregateInput
    _max?: TenantMaxOrderByAggregateInput
    _min?: TenantMinOrderByAggregateInput
  }

  export type TenantScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TenantScalarWhereWithAggregatesInput>
    OR?: Enumerable<TenantScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TenantScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    name?: StringWithAggregatesFilter | string
    settings?: JsonWithAggregatesFilter
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
  }

  export type TenantUserWhereInput = {
    AND?: Enumerable<TenantUserWhereInput>
    OR?: Enumerable<TenantUserWhereInput>
    NOT?: Enumerable<TenantUserWhereInput>
    id?: StringFilter | string
    userRole?: StringFilter | string
    inviteEmail?: StringNullableFilter | string | null
    inviteSentAt?: DateTimeNullableFilter | Date | string | null
    inviteStatus?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    userId?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    User_TenantUser_createdByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    User_TenantUser_userIdToUser?: XOR<UserRelationFilter, UserWhereInput> | null
  }

  export type TenantUserOrderByWithRelationInput = {
    id?: SortOrder
    userRole?: SortOrder
    inviteEmail?: SortOrder
    inviteSentAt?: SortOrder
    inviteStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    userId?: SortOrder
    tenantId?: SortOrder
    User_TenantUser_createdByToUser?: UserOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_TenantUser_userIdToUser?: UserOrderByWithRelationInput
  }

  export type TenantUserWhereUniqueInput = {
    id?: string
  }

  export type TenantUserOrderByWithAggregationInput = {
    id?: SortOrder
    userRole?: SortOrder
    inviteEmail?: SortOrder
    inviteSentAt?: SortOrder
    inviteStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    userId?: SortOrder
    tenantId?: SortOrder
    _count?: TenantUserCountOrderByAggregateInput
    _max?: TenantUserMaxOrderByAggregateInput
    _min?: TenantUserMinOrderByAggregateInput
  }

  export type TenantUserScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TenantUserScalarWhereWithAggregatesInput>
    OR?: Enumerable<TenantUserScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TenantUserScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    userRole?: StringWithAggregatesFilter | string
    inviteEmail?: StringNullableWithAggregatesFilter | string | null
    inviteSentAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    inviteStatus?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    userId?: StringNullableWithAggregatesFilter | string | null
    tenantId?: StringWithAggregatesFilter | string
  }

  export type TimeBlockWhereInput = {
    AND?: Enumerable<TimeBlockWhereInput>
    OR?: Enumerable<TimeBlockWhereInput>
    NOT?: Enumerable<TimeBlockWhereInput>
    id?: StringFilter | string
    duration?: IntNullableFilter | number | null
    entryType?: StringFilter | string
    rangeStartAt?: DateTimeNullableFilter | Date | string | null
    rangeEndAt?: DateTimeNullableFilter | Date | string | null
    timerStartLatitude?: FloatNullableFilter | number | null
    timerStartLongitude?: FloatNullableFilter | number | null
    timerStartAddress?: StringNullableFilter | string | null
    timerStartAt?: DateTimeNullableFilter | Date | string | null
    timerEndAt?: DateTimeNullableFilter | Date | string | null
    timerEndLatitude?: FloatNullableFilter | number | null
    timerEndLongitude?: FloatNullableFilter | number | null
    timerEndAddress?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringFilter | string
    dailyLogItemId?: StringFilter | string
    tenantId?: StringFilter | string
    User?: XOR<UserRelationFilter, UserWhereInput>
    DailyLogItem?: XOR<DailyLogItemRelationFilter, DailyLogItemWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
  }

  export type TimeBlockOrderByWithRelationInput = {
    id?: SortOrder
    duration?: SortOrder
    entryType?: SortOrder
    rangeStartAt?: SortOrder
    rangeEndAt?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerStartAddress?: SortOrder
    timerStartAt?: SortOrder
    timerEndAt?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
    timerEndAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogItemId?: SortOrder
    tenantId?: SortOrder
    User?: UserOrderByWithRelationInput
    DailyLogItem?: DailyLogItemOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
  }

  export type TimeBlockWhereUniqueInput = {
    id?: string
  }

  export type TimeBlockOrderByWithAggregationInput = {
    id?: SortOrder
    duration?: SortOrder
    entryType?: SortOrder
    rangeStartAt?: SortOrder
    rangeEndAt?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerStartAddress?: SortOrder
    timerStartAt?: SortOrder
    timerEndAt?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
    timerEndAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogItemId?: SortOrder
    tenantId?: SortOrder
    _count?: TimeBlockCountOrderByAggregateInput
    _avg?: TimeBlockAvgOrderByAggregateInput
    _max?: TimeBlockMaxOrderByAggregateInput
    _min?: TimeBlockMinOrderByAggregateInput
    _sum?: TimeBlockSumOrderByAggregateInput
  }

  export type TimeBlockScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TimeBlockScalarWhereWithAggregatesInput>
    OR?: Enumerable<TimeBlockScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TimeBlockScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    duration?: IntNullableWithAggregatesFilter | number | null
    entryType?: StringWithAggregatesFilter | string
    rangeStartAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    rangeEndAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    timerStartLatitude?: FloatNullableWithAggregatesFilter | number | null
    timerStartLongitude?: FloatNullableWithAggregatesFilter | number | null
    timerStartAddress?: StringNullableWithAggregatesFilter | string | null
    timerStartAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    timerEndAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    timerEndLatitude?: FloatNullableWithAggregatesFilter | number | null
    timerEndLongitude?: FloatNullableWithAggregatesFilter | number | null
    timerEndAddress?: StringNullableWithAggregatesFilter | string | null
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringWithAggregatesFilter | string
    dailyLogItemId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
  }

  export type UserWhereInput = {
    AND?: Enumerable<UserWhereInput>
    OR?: Enumerable<UserWhereInput>
    NOT?: Enumerable<UserWhereInput>
    id?: StringFilter | string
    email?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    preferredLanguage?: StringNullableFilter | string | null
    settings?: JsonFilter
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    imageId?: StringNullableFilter | string | null
    currentTenantId?: StringFilter | string
    ApiKey?: ApiKeyListRelationFilter
    DailyLog?: DailyLogListRelationFilter
    DailyLogItem?: DailyLogItemListRelationFilter
    Equipment_Equipment_createdByToUser?: EquipmentListRelationFilter
    Equipment_Equipment_userIdToUser?: EquipmentListRelationFilter
    EquipmentProperty?: EquipmentPropertyListRelationFilter
    EquipmentPropertyValue?: EquipmentPropertyValueListRelationFilter
    Feedback?: FeedbackListRelationFilter
    File?: FileListRelationFilter
    FileProperty?: FilePropertyListRelationFilter
    FilePropertyValue?: FilePropertyValueListRelationFilter
    Image_Image_createdByToUser?: ImageListRelationFilter
    LocationEntry?: LocationEntryListRelationFilter
    Project?: ProjectListRelationFilter
    ProjectProperty?: ProjectPropertyListRelationFilter
    ProjectPropertyValue?: ProjectPropertyValueListRelationFilter
    Task?: TaskListRelationFilter
    TaskProperty?: TaskPropertyListRelationFilter
    TaskPropertyValue?: TaskPropertyValueListRelationFilter
    TaskStatus?: TaskStatusListRelationFilter
    Tenant_Tenant_createdByToUser?: TenantListRelationFilter
    TenantUser_TenantUser_createdByToUser?: TenantUserListRelationFilter
    TenantUser_TenantUser_userIdToUser?: TenantUserListRelationFilter
    TimeBlock?: TimeBlockListRelationFilter
    Tenant_User_currentTenantIdToTenant?: XOR<TenantRelationFilter, TenantWhereInput>
    Image_User_imageIdToImage?: XOR<ImageRelationFilter, ImageWhereInput> | null
    UserTask_UserTask_createdByToUser?: UserTaskListRelationFilter
    UserTask_UserTask_userIdToUser?: UserTaskListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    preferredLanguage?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    currentTenantId?: SortOrder
    ApiKey?: ApiKeyOrderByRelationAggregateInput
    DailyLog?: DailyLogOrderByRelationAggregateInput
    DailyLogItem?: DailyLogItemOrderByRelationAggregateInput
    Equipment_Equipment_createdByToUser?: EquipmentOrderByRelationAggregateInput
    Equipment_Equipment_userIdToUser?: EquipmentOrderByRelationAggregateInput
    EquipmentProperty?: EquipmentPropertyOrderByRelationAggregateInput
    EquipmentPropertyValue?: EquipmentPropertyValueOrderByRelationAggregateInput
    Feedback?: FeedbackOrderByRelationAggregateInput
    File?: FileOrderByRelationAggregateInput
    FileProperty?: FilePropertyOrderByRelationAggregateInput
    FilePropertyValue?: FilePropertyValueOrderByRelationAggregateInput
    Image_Image_createdByToUser?: ImageOrderByRelationAggregateInput
    LocationEntry?: LocationEntryOrderByRelationAggregateInput
    Project?: ProjectOrderByRelationAggregateInput
    ProjectProperty?: ProjectPropertyOrderByRelationAggregateInput
    ProjectPropertyValue?: ProjectPropertyValueOrderByRelationAggregateInput
    Task?: TaskOrderByRelationAggregateInput
    TaskProperty?: TaskPropertyOrderByRelationAggregateInput
    TaskPropertyValue?: TaskPropertyValueOrderByRelationAggregateInput
    TaskStatus?: TaskStatusOrderByRelationAggregateInput
    Tenant_Tenant_createdByToUser?: TenantOrderByRelationAggregateInput
    TenantUser_TenantUser_createdByToUser?: TenantUserOrderByRelationAggregateInput
    TenantUser_TenantUser_userIdToUser?: TenantUserOrderByRelationAggregateInput
    TimeBlock?: TimeBlockOrderByRelationAggregateInput
    Tenant_User_currentTenantIdToTenant?: TenantOrderByWithRelationInput
    Image_User_imageIdToImage?: ImageOrderByWithRelationInput
    UserTask_UserTask_createdByToUser?: UserTaskOrderByRelationAggregateInput
    UserTask_UserTask_userIdToUser?: UserTaskOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = {
    id?: string
  }

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    preferredLanguage?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    currentTenantId?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    email?: StringNullableWithAggregatesFilter | string | null
    name?: StringNullableWithAggregatesFilter | string | null
    preferredLanguage?: StringNullableWithAggregatesFilter | string | null
    settings?: JsonWithAggregatesFilter
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    imageId?: StringNullableWithAggregatesFilter | string | null
    currentTenantId?: StringWithAggregatesFilter | string
  }

  export type UserTaskWhereInput = {
    AND?: Enumerable<UserTaskWhereInput>
    OR?: Enumerable<UserTaskWhereInput>
    NOT?: Enumerable<UserTaskWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    taskId?: StringFilter | string
    tenantId?: StringFilter | string
    userId?: StringFilter | string
    User_UserTask_createdByToUser?: XOR<UserRelationFilter, UserWhereInput> | null
    Task?: XOR<TaskRelationFilter, TaskWhereInput>
    Tenant?: XOR<TenantRelationFilter, TenantWhereInput>
    User_UserTask_userIdToUser?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserTaskOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    User_UserTask_createdByToUser?: UserOrderByWithRelationInput
    Task?: TaskOrderByWithRelationInput
    Tenant?: TenantOrderByWithRelationInput
    User_UserTask_userIdToUser?: UserOrderByWithRelationInput
  }

  export type UserTaskWhereUniqueInput = {
    id?: string
  }

  export type UserTaskOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
    _count?: UserTaskCountOrderByAggregateInput
    _max?: UserTaskMaxOrderByAggregateInput
    _min?: UserTaskMinOrderByAggregateInput
  }

  export type UserTaskScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UserTaskScalarWhereWithAggregatesInput>
    OR?: Enumerable<UserTaskScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UserTaskScalarWhereWithAggregatesInput>
    id?: StringWithAggregatesFilter | string
    createdAt?: DateTimeWithAggregatesFilter | Date | string
    updatedAt?: DateTimeWithAggregatesFilter | Date | string
    archivedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter | string | null
    taskId?: StringWithAggregatesFilter | string
    tenantId?: StringWithAggregatesFilter | string
    userId?: StringWithAggregatesFilter | string
  }

  export type ApiKeyCreateInput = {
    id: string
    name: string
    createdAt: Date | string
    Tenant: TenantCreateNestedOneWithoutApiKeyInput
    User?: UserCreateNestedOneWithoutApiKeyInput
  }

  export type ApiKeyUncheckedCreateInput = {
    id: string
    name: string
    createdAt: Date | string
    tenantId: string
    userId?: string | null
  }

  export type ApiKeyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Tenant?: TenantUpdateOneRequiredWithoutApiKeyNestedInput
    User?: UserUpdateOneWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApiKeyCreateManyInput = {
    id: string
    name: string
    createdAt: Date | string
    tenantId: string
    userId?: string | null
  }

  export type ApiKeyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApiKeyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DailyLogCreateInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogInput
    Tenant: TenantCreateNestedOneWithoutDailyLogInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutDailyLogInput
    File?: FileCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUncheckedCreateInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutDailyLogInput
    File?: FileUncheckedCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutDailyLogNestedInput
    File?: FileUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutDailyLogNestedInput
    File?: FileUncheckedUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogCreateManyInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type DailyLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DailyLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type DailyLogItemCreateInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogItemInput
    DailyLog: DailyLogCreateNestedOneWithoutDailyLogItemInput
    Equipment?: EquipmentCreateNestedOneWithoutDailyLogItemInput
    Task?: TaskCreateNestedOneWithoutDailyLogItemInput
    Tenant: TenantCreateNestedOneWithoutDailyLogItemInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogItemNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput
    Equipment?: EquipmentUpdateOneWithoutDailyLogItemNestedInput
    Task?: TaskUpdateOneWithoutDailyLogItemNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogItemNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemCreateManyInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
  }

  export type DailyLogItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DailyLogItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentCreateInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutEquipmentInput
    User_Equipment_createdByToUser?: UserCreateNestedOneWithoutEquipment_Equipment_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutEquipmentInput
    User_Equipment_userIdToUser?: UserCreateNestedOneWithoutEquipment_Equipment_userIdToUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    userId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutEquipmentInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutEquipmentNestedInput
    User_Equipment_createdByToUser?: UserUpdateOneWithoutEquipment_Equipment_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentNestedInput
    User_Equipment_userIdToUser?: UserUpdateOneWithoutEquipment_Equipment_userIdToUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutEquipmentNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentCreateManyInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    userId?: string | null
  }

  export type EquipmentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EquipmentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentPropertyCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyInput
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyUncheckedCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyCreateManyInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type EquipmentPropertyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EquipmentPropertyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentPropertyValueCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyValueInput
    Equipment: EquipmentCreateNestedOneWithoutEquipmentPropertyValueInput
    EquipmentProperty: EquipmentPropertyCreateNestedOneWithoutEquipmentPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyValueInput
  }

  export type EquipmentPropertyValueUncheckedCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentId: string
    equipmentPropertyId: string
    tenantId: string
  }

  export type EquipmentPropertyValueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyValueNestedInput
    Equipment?: EquipmentUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
  }

  export type EquipmentPropertyValueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentId?: StringFieldUpdateOperationsInput | string
    equipmentPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentPropertyValueCreateManyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentId: string
    equipmentPropertyId: string
    tenantId: string
  }

  export type EquipmentPropertyValueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type EquipmentPropertyValueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentId?: StringFieldUpdateOperationsInput | string
    equipmentPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FeedbackCreateInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFeedbackInput
    Tenant: TenantCreateNestedOneWithoutFeedbackInput
  }

  export type FeedbackUncheckedCreateInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type FeedbackUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFeedbackNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFeedbackNestedInput
  }

  export type FeedbackUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FeedbackCreateManyInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type FeedbackUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FeedbackUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FileCreateInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFileInput
    DailyLog?: DailyLogCreateNestedOneWithoutFileInput
    Image: ImageCreateNestedOneWithoutFileInput
    Project?: ProjectCreateNestedOneWithoutFileInput
    Tenant: TenantCreateNestedOneWithoutFileInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFileInput
  }

  export type FileUncheckedCreateInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFileInput
  }

  export type FileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFileNestedInput
    DailyLog?: DailyLogUpdateOneWithoutFileNestedInput
    Image?: ImageUpdateOneRequiredWithoutFileNestedInput
    Project?: ProjectUpdateOneWithoutFileNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFileNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput
  }

  export type FileCreateManyInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
  }

  export type FileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FilePropertyCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyInput
    Tenant: TenantCreateNestedOneWithoutFilePropertyInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFilePropertyInput
  }

  export type FilePropertyUncheckedCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFilePropertyInput
  }

  export type FilePropertyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFilePropertyNestedInput
  }

  export type FilePropertyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFilePropertyNestedInput
  }

  export type FilePropertyCreateManyInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type FilePropertyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FilePropertyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FilePropertyValueCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyValueInput
    File: FileCreateNestedOneWithoutFilePropertyValueInput
    FileProperty: FilePropertyCreateNestedOneWithoutFilePropertyValueInput
    Tenant: TenantCreateNestedOneWithoutFilePropertyValueInput
  }

  export type FilePropertyValueUncheckedCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    fileId: string
    propertyId: string
    tenantId: string
  }

  export type FilePropertyValueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyValueNestedInput
    File?: FileUpdateOneRequiredWithoutFilePropertyValueNestedInput
    FileProperty?: FilePropertyUpdateOneRequiredWithoutFilePropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyValueNestedInput
  }

  export type FilePropertyValueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    fileId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FilePropertyValueCreateManyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    fileId: string
    propertyId: string
    tenantId: string
  }

  export type FilePropertyValueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type FilePropertyValueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    fileId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ImageCreateInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutImageInput
    User_Image_createdByToUser?: UserCreateNestedOneWithoutImage_Image_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutImageInput
    User_User_imageIdToImage?: UserCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageUncheckedCreateInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutImageInput
    User_User_imageIdToImage?: UserUncheckedCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutImageNestedInput
    User_Image_createdByToUser?: UserUpdateOneWithoutImage_Image_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutImageNestedInput
    User_User_imageIdToImage?: UserUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutImageNestedInput
    User_User_imageIdToImage?: UserUncheckedUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageCreateManyInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type ImageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ImageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type LocationEntryCreateInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutLocationEntryInput
    DailyLog: DailyLogCreateNestedOneWithoutLocationEntryInput
    Tenant: TenantCreateNestedOneWithoutLocationEntryInput
  }

  export type LocationEntryUncheckedCreateInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    dailyLogId: string
    tenantId: string
  }

  export type LocationEntryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutLocationEntryNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutLocationEntryNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutLocationEntryNestedInput
  }

  export type LocationEntryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type LocationEntryCreateManyInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    dailyLogId: string
    tenantId: string
  }

  export type LocationEntryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type LocationEntryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectCreateInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutProjectInput
    User?: UserCreateNestedOneWithoutProjectInput
    Tenant: TenantCreateNestedOneWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectInput
    Task?: TaskCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectInput
    Task?: TaskUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutProjectNestedInput
    User?: UserUpdateOneWithoutProjectNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectNestedInput
    Task?: TaskUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectNestedInput
    Task?: TaskUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectCreateManyInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type ProjectUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectPropertyCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyInput
    Tenant: TenantCreateNestedOneWithoutProjectPropertyInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectPropertyInput
  }

  export type ProjectPropertyUncheckedCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectPropertyInput
  }

  export type ProjectPropertyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyCreateManyInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type ProjectPropertyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectPropertyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectPropertyValueCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyValueInput
    Project: ProjectCreateNestedOneWithoutProjectPropertyValueInput
    ProjectProperty: ProjectPropertyCreateNestedOneWithoutProjectPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutProjectPropertyValueInput
  }

  export type ProjectPropertyValueUncheckedCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    projectPropertyId: string
    tenantId: string
  }

  export type ProjectPropertyValueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyValueNestedInput
    Project?: ProjectUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    ProjectProperty?: ProjectPropertyUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyValueNestedInput
  }

  export type ProjectPropertyValueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    projectPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectPropertyValueCreateManyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    projectPropertyId: string
    tenantId: string
  }

  export type ProjectPropertyValueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProjectPropertyValueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    projectPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskCreateInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskCreateManyInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
  }

  export type TaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskPropertyCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyInput
    Tenant: TenantCreateNestedOneWithoutTaskPropertyInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskPropertyInput
  }

  export type TaskPropertyUncheckedCreateInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskPropertyInput
  }

  export type TaskPropertyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyCreateManyInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type TaskPropertyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TaskPropertyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskPropertyValueCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyValueInput
    Task: TaskCreateNestedOneWithoutTaskPropertyValueInput
    TaskProperty: TaskPropertyCreateNestedOneWithoutTaskPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutTaskPropertyValueInput
  }

  export type TaskPropertyValueUncheckedCreateInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskPropertyId: string
    taskId: string
    tenantId: string
  }

  export type TaskPropertyValueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyValueNestedInput
    Task?: TaskUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    TaskProperty?: TaskPropertyUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyValueNestedInput
  }

  export type TaskPropertyValueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskPropertyId?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskPropertyValueCreateManyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskPropertyId: string
    taskId: string
    tenantId: string
  }

  export type TaskPropertyValueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TaskPropertyValueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskPropertyId?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskStatusCreateInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Task?: TaskCreateNestedManyWithoutTaskStatusInput
    User?: UserCreateNestedOneWithoutTaskStatusInput
    Tenant: TenantCreateNestedOneWithoutTaskStatusInput
  }

  export type TaskStatusUncheckedCreateInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    Task?: TaskUncheckedCreateNestedManyWithoutTaskStatusInput
  }

  export type TaskStatusUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Task?: TaskUpdateManyWithoutTaskStatusNestedInput
    User?: UserUpdateOneWithoutTaskStatusNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskStatusNestedInput
  }

  export type TaskStatusUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    Task?: TaskUncheckedUpdateManyWithoutTaskStatusNestedInput
  }

  export type TaskStatusCreateManyInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type TaskStatusUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TaskStatusUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantCreateInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TenantCreateManyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type TenantUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TenantUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TenantUserCreateInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_TenantUser_createdByToUser?: UserCreateNestedOneWithoutTenantUser_TenantUser_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutTenantUserInput
    User_TenantUser_userIdToUser?: UserCreateNestedOneWithoutTenantUser_TenantUser_userIdToUserInput
  }

  export type TenantUserUncheckedCreateInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    userId?: string | null
    tenantId: string
  }

  export type TenantUserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_TenantUser_createdByToUser?: UserUpdateOneWithoutTenantUser_TenantUser_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTenantUserNestedInput
    User_TenantUser_userIdToUser?: UserUpdateOneWithoutTenantUser_TenantUser_userIdToUserNestedInput
  }

  export type TenantUserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUserCreateManyInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    userId?: string | null
    tenantId: string
  }

  export type TenantUserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TenantUserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TimeBlockCreateInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User: UserCreateNestedOneWithoutTimeBlockInput
    DailyLogItem: DailyLogItemCreateNestedOneWithoutTimeBlockInput
    Tenant: TenantCreateNestedOneWithoutTimeBlockInput
  }

  export type TimeBlockUncheckedCreateInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy: string
    dailyLogItemId: string
    tenantId: string
  }

  export type TimeBlockUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutTimeBlockNestedInput
    DailyLogItem?: DailyLogItemUpdateOneRequiredWithoutTimeBlockNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTimeBlockNestedInput
  }

  export type TimeBlockUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    dailyLogItemId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TimeBlockCreateManyInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy: string
    dailyLogItemId: string
    tenantId: string
  }

  export type TimeBlockUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TimeBlockUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    dailyLogItemId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type UserCreateInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserCreateManyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskCreateInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_UserTask_createdByToUser?: UserCreateNestedOneWithoutUserTask_UserTask_createdByToUserInput
    Task: TaskCreateNestedOneWithoutUserTaskInput
    Tenant: TenantCreateNestedOneWithoutUserTaskInput
    User_UserTask_userIdToUser: UserCreateNestedOneWithoutUserTask_UserTask_userIdToUserInput
  }

  export type UserTaskUncheckedCreateInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    tenantId: string
    userId: string
  }

  export type UserTaskUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserTask_createdByToUser?: UserUpdateOneWithoutUserTask_UserTask_createdByToUserNestedInput
    Task?: TaskUpdateOneRequiredWithoutUserTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutUserTaskNestedInput
    User_UserTask_userIdToUser?: UserUpdateOneRequiredWithoutUserTask_UserTask_userIdToUserNestedInput
  }

  export type UserTaskUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskCreateManyInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    tenantId: string
    userId: string
  }

  export type UserTaskUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserTaskUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringFilter | string
  }

  export type DateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type StringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableFilter | string | null
  }

  export type TenantRelationFilter = {
    is?: TenantWhereInput
    isNot?: TenantWhereInput
  }

  export type UserRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type ApiKeyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type ApiKeyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type ApiKeyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type StringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type DateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type StringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type DateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type IntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type DailyLogItemListRelationFilter = {
    every?: DailyLogItemWhereInput
    some?: DailyLogItemWhereInput
    none?: DailyLogItemWhereInput
  }

  export type FileListRelationFilter = {
    every?: FileWhereInput
    some?: FileWhereInput
    none?: FileWhereInput
  }

  export type LocationEntryListRelationFilter = {
    every?: LocationEntryWhereInput
    some?: LocationEntryWhereInput
    none?: LocationEntryWhereInput
  }

  export type DailyLogItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LocationEntryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DailyLogCountOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    status?: SortOrder
    note?: SortOrder
    rating?: SortOrder
    ratingNote?: SortOrder
    managerNote?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type DailyLogAvgOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type DailyLogMaxOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    status?: SortOrder
    note?: SortOrder
    rating?: SortOrder
    ratingNote?: SortOrder
    managerNote?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type DailyLogMinOrderByAggregateInput = {
    id?: SortOrder
    date?: SortOrder
    status?: SortOrder
    note?: SortOrder
    rating?: SortOrder
    ratingNote?: SortOrder
    managerNote?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type DailyLogSumOrderByAggregateInput = {
    rating?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type IntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type BoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type DailyLogRelationFilter = {
    is?: DailyLogWhereInput | null
    isNot?: DailyLogWhereInput | null
  }

  export type EquipmentRelationFilter = {
    is?: EquipmentWhereInput
    isNot?: EquipmentWhereInput
  }

  export type TaskRelationFilter = {
    is?: TaskWhereInput | null
    isNot?: TaskWhereInput | null
  }

  export type TimeBlockListRelationFilter = {
    every?: TimeBlockWhereInput
    some?: TimeBlockWhereInput
    none?: TimeBlockWhereInput
  }

  export type TimeBlockOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DailyLogItemCountOrderByAggregateInput = {
    id?: SortOrder
    note?: SortOrder
    isNoteVisible?: SortOrder
    itemType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    equipmentId?: SortOrder
  }

  export type DailyLogItemMaxOrderByAggregateInput = {
    id?: SortOrder
    note?: SortOrder
    isNoteVisible?: SortOrder
    itemType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    equipmentId?: SortOrder
  }

  export type DailyLogItemMinOrderByAggregateInput = {
    id?: SortOrder
    note?: SortOrder
    isNoteVisible?: SortOrder
    itemType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
    equipmentId?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type EquipmentPropertyValueListRelationFilter = {
    every?: EquipmentPropertyValueWhereInput
    some?: EquipmentPropertyValueWhereInput
    none?: EquipmentPropertyValueWhereInput
  }

  export type EquipmentPropertyValueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipmentCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    organization?: SortOrder
    description?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type EquipmentMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    organization?: SortOrder
    description?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type EquipmentMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    organization?: SortOrder
    description?: SortOrder
    updatedAt?: SortOrder
    createdAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type EquipmentPropertyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type EquipmentPropertyAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type EquipmentPropertyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type EquipmentPropertyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type EquipmentPropertySumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type EquipmentPropertyRelationFilter = {
    is?: EquipmentPropertyWhereInput
    isNot?: EquipmentPropertyWhereInput
  }

  export type EquipmentPropertyValueCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    equipmentId?: SortOrder
    equipmentPropertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type EquipmentPropertyValueMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    equipmentId?: SortOrder
    equipmentPropertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type EquipmentPropertyValueMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    equipmentId?: SortOrder
    equipmentPropertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type FeedbackCountOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type FeedbackMaxOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type FeedbackMinOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type FloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type ImageRelationFilter = {
    is?: ImageWhereInput
    isNot?: ImageWhereInput
  }

  export type ProjectRelationFilter = {
    is?: ProjectWhereInput
    isNot?: ProjectWhereInput
  }

  export type FilePropertyValueListRelationFilter = {
    every?: FilePropertyValueWhereInput
    some?: FilePropertyValueWhereInput
    none?: FilePropertyValueWhereInput
  }

  export type FilePropertyValueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FileCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    name?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    projectId?: SortOrder
    dailyLogId?: SortOrder
  }

  export type FileAvgOrderByAggregateInput = {
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
  }

  export type FileMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    name?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    projectId?: SortOrder
    dailyLogId?: SortOrder
  }

  export type FileMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    name?: SortOrder
    type?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
    projectId?: SortOrder
    dailyLogId?: SortOrder
  }

  export type FileSumOrderByAggregateInput = {
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }

  export type FilePropertyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type FilePropertyAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type FilePropertyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type FilePropertyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type FilePropertySumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type FileRelationFilter = {
    is?: FileWhereInput
    isNot?: FileWhereInput
  }

  export type FilePropertyRelationFilter = {
    is?: FilePropertyWhereInput
    isNot?: FilePropertyWhereInput
  }

  export type FilePropertyValueCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    fileId?: SortOrder
    propertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type FilePropertyValueMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    fileId?: SortOrder
    propertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type FilePropertyValueMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    fileId?: SortOrder
    propertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ImageCountOrderByAggregateInput = {
    id?: SortOrder
    bucketId?: SortOrder
    blurhash?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ImageMaxOrderByAggregateInput = {
    id?: SortOrder
    bucketId?: SortOrder
    blurhash?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ImageMinOrderByAggregateInput = {
    id?: SortOrder
    bucketId?: SortOrder
    blurhash?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type LocationEntryCountOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
  }

  export type LocationEntryAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type LocationEntryMaxOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
  }

  export type LocationEntryMinOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogId?: SortOrder
    tenantId?: SortOrder
  }

  export type LocationEntrySumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type ProjectPropertyValueListRelationFilter = {
    every?: ProjectPropertyValueWhereInput
    some?: ProjectPropertyValueWhereInput
    none?: ProjectPropertyValueWhereInput
  }

  export type TaskListRelationFilter = {
    every?: TaskWhereInput
    some?: TaskWhereInput
    none?: TaskWhereInput
  }

  export type ProjectPropertyValueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    progress?: SortOrder
    dueDate?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectAvgOrderByAggregateInput = {
    progress?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
  }

  export type ProjectMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    progress?: SortOrder
    dueDate?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    progress?: SortOrder
    dueDate?: SortOrder
    description?: SortOrder
    locationLabel?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectSumOrderByAggregateInput = {
    progress?: SortOrder
    locationLatitude?: SortOrder
    locationLongitude?: SortOrder
  }

  export type ProjectPropertyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectPropertyAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type ProjectPropertyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectPropertyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectPropertySumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type ProjectPropertyRelationFilter = {
    is?: ProjectPropertyWhereInput
    isNot?: ProjectPropertyWhereInput
  }

  export type ProjectPropertyValueCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    projectPropertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectPropertyValueMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    projectPropertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type ProjectPropertyValueMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    projectPropertyId?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskStatusRelationFilter = {
    is?: TaskStatusWhereInput | null
    isNot?: TaskStatusWhereInput | null
  }

  export type TaskPropertyValueListRelationFilter = {
    every?: TaskPropertyValueWhereInput
    some?: TaskPropertyValueWhereInput
    none?: TaskPropertyValueWhereInput
  }

  export type UserTaskListRelationFilter = {
    every?: UserTaskWhereInput
    some?: UserTaskWhereInput
    none?: UserTaskWhereInput
  }

  export type TaskPropertyValueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserTaskOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskCountOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    name?: SortOrder
    statusId?: SortOrder
    systemStatusId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    tenantId?: SortOrder
    parentId?: SortOrder
    taskStatusId?: SortOrder
  }

  export type TaskMaxOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    name?: SortOrder
    statusId?: SortOrder
    systemStatusId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    tenantId?: SortOrder
    parentId?: SortOrder
    taskStatusId?: SortOrder
  }

  export type TaskMinOrderByAggregateInput = {
    id?: SortOrder
    description?: SortOrder
    name?: SortOrder
    statusId?: SortOrder
    systemStatusId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    projectId?: SortOrder
    tenantId?: SortOrder
    parentId?: SortOrder
    taskStatusId?: SortOrder
  }

  export type TaskPropertyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskPropertyAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type TaskPropertyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskPropertyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    order?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskPropertySumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type TaskPropertyRelationFilter = {
    is?: TaskPropertyWhereInput
    isNot?: TaskPropertyWhereInput
  }

  export type TaskPropertyValueCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskPropertyId?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskPropertyValueMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskPropertyId?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskPropertyValueMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskPropertyId?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskStatusCountOrderByAggregateInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    iconColor?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskStatusAvgOrderByAggregateInput = {
    displayOrder?: SortOrder
  }

  export type TaskStatusMaxOrderByAggregateInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    iconColor?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskStatusMinOrderByAggregateInput = {
    id?: SortOrder
    displayOrder?: SortOrder
    iconColor?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    tenantId?: SortOrder
  }

  export type TaskStatusSumOrderByAggregateInput = {
    displayOrder?: SortOrder
  }
  export type JsonFilter = 
    | PatchUndefined<
        Either<Required<JsonFilterBase>, Exclude<keyof Required<JsonFilterBase>, 'path'>>,
        Required<JsonFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase>, 'path'>>

  export type JsonFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type ApiKeyListRelationFilter = {
    every?: ApiKeyWhereInput
    some?: ApiKeyWhereInput
    none?: ApiKeyWhereInput
  }

  export type DailyLogListRelationFilter = {
    every?: DailyLogWhereInput
    some?: DailyLogWhereInput
    none?: DailyLogWhereInput
  }

  export type EquipmentListRelationFilter = {
    every?: EquipmentWhereInput
    some?: EquipmentWhereInput
    none?: EquipmentWhereInput
  }

  export type EquipmentPropertyListRelationFilter = {
    every?: EquipmentPropertyWhereInput
    some?: EquipmentPropertyWhereInput
    none?: EquipmentPropertyWhereInput
  }

  export type FeedbackListRelationFilter = {
    every?: FeedbackWhereInput
    some?: FeedbackWhereInput
    none?: FeedbackWhereInput
  }

  export type FilePropertyListRelationFilter = {
    every?: FilePropertyWhereInput
    some?: FilePropertyWhereInput
    none?: FilePropertyWhereInput
  }

  export type ImageListRelationFilter = {
    every?: ImageWhereInput
    some?: ImageWhereInput
    none?: ImageWhereInput
  }

  export type ProjectListRelationFilter = {
    every?: ProjectWhereInput
    some?: ProjectWhereInput
    none?: ProjectWhereInput
  }

  export type ProjectPropertyListRelationFilter = {
    every?: ProjectPropertyWhereInput
    some?: ProjectPropertyWhereInput
    none?: ProjectPropertyWhereInput
  }

  export type TaskPropertyListRelationFilter = {
    every?: TaskPropertyWhereInput
    some?: TaskPropertyWhereInput
    none?: TaskPropertyWhereInput
  }

  export type TaskStatusListRelationFilter = {
    every?: TaskStatusWhereInput
    some?: TaskStatusWhereInput
    none?: TaskStatusWhereInput
  }

  export type TenantUserListRelationFilter = {
    every?: TenantUserWhereInput
    some?: TenantUserWhereInput
    none?: TenantUserWhereInput
  }

  export type ApiKeyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DailyLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipmentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EquipmentPropertyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FeedbackOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FilePropertyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectPropertyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskPropertyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaskStatusOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TenantUserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TenantCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type TenantMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type TenantMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
  }
  export type JsonWithAggregatesFilter = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase>, Exclude<keyof Required<JsonWithAggregatesFilterBase>, 'path'>>,
        Required<JsonWithAggregatesFilterBase>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase>, 'path'>>

  export type JsonWithAggregatesFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
    _count?: NestedIntFilter
    _min?: NestedJsonFilter
    _max?: NestedJsonFilter
  }

  export type TenantUserCountOrderByAggregateInput = {
    id?: SortOrder
    userRole?: SortOrder
    inviteEmail?: SortOrder
    inviteSentAt?: SortOrder
    inviteStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    userId?: SortOrder
    tenantId?: SortOrder
  }

  export type TenantUserMaxOrderByAggregateInput = {
    id?: SortOrder
    userRole?: SortOrder
    inviteEmail?: SortOrder
    inviteSentAt?: SortOrder
    inviteStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    userId?: SortOrder
    tenantId?: SortOrder
  }

  export type TenantUserMinOrderByAggregateInput = {
    id?: SortOrder
    userRole?: SortOrder
    inviteEmail?: SortOrder
    inviteSentAt?: SortOrder
    inviteStatus?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    userId?: SortOrder
    tenantId?: SortOrder
  }

  export type IntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type DailyLogItemRelationFilter = {
    is?: DailyLogItemWhereInput
    isNot?: DailyLogItemWhereInput
  }

  export type TimeBlockCountOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    entryType?: SortOrder
    rangeStartAt?: SortOrder
    rangeEndAt?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerStartAddress?: SortOrder
    timerStartAt?: SortOrder
    timerEndAt?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
    timerEndAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogItemId?: SortOrder
    tenantId?: SortOrder
  }

  export type TimeBlockAvgOrderByAggregateInput = {
    duration?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
  }

  export type TimeBlockMaxOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    entryType?: SortOrder
    rangeStartAt?: SortOrder
    rangeEndAt?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerStartAddress?: SortOrder
    timerStartAt?: SortOrder
    timerEndAt?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
    timerEndAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogItemId?: SortOrder
    tenantId?: SortOrder
  }

  export type TimeBlockMinOrderByAggregateInput = {
    id?: SortOrder
    duration?: SortOrder
    entryType?: SortOrder
    rangeStartAt?: SortOrder
    rangeEndAt?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerStartAddress?: SortOrder
    timerStartAt?: SortOrder
    timerEndAt?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
    timerEndAddress?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    dailyLogItemId?: SortOrder
    tenantId?: SortOrder
  }

  export type TimeBlockSumOrderByAggregateInput = {
    duration?: SortOrder
    timerStartLatitude?: SortOrder
    timerStartLongitude?: SortOrder
    timerEndLatitude?: SortOrder
    timerEndLongitude?: SortOrder
  }

  export type IntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type TenantListRelationFilter = {
    every?: TenantWhereInput
    some?: TenantWhereInput
    none?: TenantWhereInput
  }

  export type TenantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    preferredLanguage?: SortOrder
    settings?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    currentTenantId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    preferredLanguage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    currentTenantId?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    name?: SortOrder
    preferredLanguage?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    imageId?: SortOrder
    currentTenantId?: SortOrder
  }

  export type UserTaskCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type UserTaskMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type UserTaskMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    archivedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    taskId?: SortOrder
    tenantId?: SortOrder
    userId?: SortOrder
  }

  export type TenantCreateNestedOneWithoutApiKeyInput = {
    create?: XOR<TenantCreateWithoutApiKeyInput, TenantUncheckedCreateWithoutApiKeyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutApiKeyInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutApiKeyInput = {
    create?: XOR<UserCreateWithoutApiKeyInput, UserUncheckedCreateWithoutApiKeyInput>
    connectOrCreate?: UserCreateOrConnectWithoutApiKeyInput
    connect?: UserWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type TenantUpdateOneRequiredWithoutApiKeyNestedInput = {
    create?: XOR<TenantCreateWithoutApiKeyInput, TenantUncheckedCreateWithoutApiKeyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutApiKeyInput
    upsert?: TenantUpsertWithoutApiKeyInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutApiKeyInput, TenantUncheckedUpdateWithoutApiKeyInput>
  }

  export type UserUpdateOneWithoutApiKeyNestedInput = {
    create?: XOR<UserCreateWithoutApiKeyInput, UserUncheckedCreateWithoutApiKeyInput>
    connectOrCreate?: UserCreateOrConnectWithoutApiKeyInput
    upsert?: UserUpsertWithoutApiKeyInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutApiKeyInput, UserUncheckedUpdateWithoutApiKeyInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type UserCreateNestedOneWithoutDailyLogInput = {
    create?: XOR<UserCreateWithoutDailyLogInput, UserUncheckedCreateWithoutDailyLogInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyLogInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutDailyLogInput = {
    create?: XOR<TenantCreateWithoutDailyLogInput, TenantUncheckedCreateWithoutDailyLogInput>
    connectOrCreate?: TenantCreateOrConnectWithoutDailyLogInput
    connect?: TenantWhereUniqueInput
  }

  export type DailyLogItemCreateNestedManyWithoutDailyLogInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutDailyLogInput>, Enumerable<DailyLogItemUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutDailyLogInput>
    createMany?: DailyLogItemCreateManyDailyLogInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type FileCreateNestedManyWithoutDailyLogInput = {
    create?: XOR<Enumerable<FileCreateWithoutDailyLogInput>, Enumerable<FileUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutDailyLogInput>
    createMany?: FileCreateManyDailyLogInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type LocationEntryCreateNestedManyWithoutDailyLogInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutDailyLogInput>, Enumerable<LocationEntryUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutDailyLogInput>
    createMany?: LocationEntryCreateManyDailyLogInputEnvelope
    connect?: Enumerable<LocationEntryWhereUniqueInput>
  }

  export type DailyLogItemUncheckedCreateNestedManyWithoutDailyLogInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutDailyLogInput>, Enumerable<DailyLogItemUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutDailyLogInput>
    createMany?: DailyLogItemCreateManyDailyLogInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type FileUncheckedCreateNestedManyWithoutDailyLogInput = {
    create?: XOR<Enumerable<FileCreateWithoutDailyLogInput>, Enumerable<FileUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutDailyLogInput>
    createMany?: FileCreateManyDailyLogInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type LocationEntryUncheckedCreateNestedManyWithoutDailyLogInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutDailyLogInput>, Enumerable<LocationEntryUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutDailyLogInput>
    createMany?: LocationEntryCreateManyDailyLogInputEnvelope
    connect?: Enumerable<LocationEntryWhereUniqueInput>
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneWithoutDailyLogNestedInput = {
    create?: XOR<UserCreateWithoutDailyLogInput, UserUncheckedCreateWithoutDailyLogInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyLogInput
    upsert?: UserUpsertWithoutDailyLogInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutDailyLogInput, UserUncheckedUpdateWithoutDailyLogInput>
  }

  export type TenantUpdateOneRequiredWithoutDailyLogNestedInput = {
    create?: XOR<TenantCreateWithoutDailyLogInput, TenantUncheckedCreateWithoutDailyLogInput>
    connectOrCreate?: TenantCreateOrConnectWithoutDailyLogInput
    upsert?: TenantUpsertWithoutDailyLogInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutDailyLogInput, TenantUncheckedUpdateWithoutDailyLogInput>
  }

  export type DailyLogItemUpdateManyWithoutDailyLogNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutDailyLogInput>, Enumerable<DailyLogItemUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutDailyLogInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutDailyLogInput>
    createMany?: DailyLogItemCreateManyDailyLogInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutDailyLogInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutDailyLogInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type FileUpdateManyWithoutDailyLogNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutDailyLogInput>, Enumerable<FileUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutDailyLogInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutDailyLogInput>
    createMany?: FileCreateManyDailyLogInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutDailyLogInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutDailyLogInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type LocationEntryUpdateManyWithoutDailyLogNestedInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutDailyLogInput>, Enumerable<LocationEntryUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutDailyLogInput>
    upsert?: Enumerable<LocationEntryUpsertWithWhereUniqueWithoutDailyLogInput>
    createMany?: LocationEntryCreateManyDailyLogInputEnvelope
    set?: Enumerable<LocationEntryWhereUniqueInput>
    disconnect?: Enumerable<LocationEntryWhereUniqueInput>
    delete?: Enumerable<LocationEntryWhereUniqueInput>
    connect?: Enumerable<LocationEntryWhereUniqueInput>
    update?: Enumerable<LocationEntryUpdateWithWhereUniqueWithoutDailyLogInput>
    updateMany?: Enumerable<LocationEntryUpdateManyWithWhereWithoutDailyLogInput>
    deleteMany?: Enumerable<LocationEntryScalarWhereInput>
  }

  export type DailyLogItemUncheckedUpdateManyWithoutDailyLogNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutDailyLogInput>, Enumerable<DailyLogItemUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutDailyLogInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutDailyLogInput>
    createMany?: DailyLogItemCreateManyDailyLogInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutDailyLogInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutDailyLogInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type FileUncheckedUpdateManyWithoutDailyLogNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutDailyLogInput>, Enumerable<FileUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutDailyLogInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutDailyLogInput>
    createMany?: FileCreateManyDailyLogInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutDailyLogInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutDailyLogInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type LocationEntryUncheckedUpdateManyWithoutDailyLogNestedInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutDailyLogInput>, Enumerable<LocationEntryUncheckedCreateWithoutDailyLogInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutDailyLogInput>
    upsert?: Enumerable<LocationEntryUpsertWithWhereUniqueWithoutDailyLogInput>
    createMany?: LocationEntryCreateManyDailyLogInputEnvelope
    set?: Enumerable<LocationEntryWhereUniqueInput>
    disconnect?: Enumerable<LocationEntryWhereUniqueInput>
    delete?: Enumerable<LocationEntryWhereUniqueInput>
    connect?: Enumerable<LocationEntryWhereUniqueInput>
    update?: Enumerable<LocationEntryUpdateWithWhereUniqueWithoutDailyLogInput>
    updateMany?: Enumerable<LocationEntryUpdateManyWithWhereWithoutDailyLogInput>
    deleteMany?: Enumerable<LocationEntryScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutDailyLogItemInput = {
    create?: XOR<UserCreateWithoutDailyLogItemInput, UserUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyLogItemInput
    connect?: UserWhereUniqueInput
  }

  export type DailyLogCreateNestedOneWithoutDailyLogItemInput = {
    create?: XOR<DailyLogCreateWithoutDailyLogItemInput, DailyLogUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: DailyLogCreateOrConnectWithoutDailyLogItemInput
    connect?: DailyLogWhereUniqueInput
  }

  export type EquipmentCreateNestedOneWithoutDailyLogItemInput = {
    create?: XOR<EquipmentCreateWithoutDailyLogItemInput, EquipmentUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutDailyLogItemInput
    connect?: EquipmentWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutDailyLogItemInput = {
    create?: XOR<TaskCreateWithoutDailyLogItemInput, TaskUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: TaskCreateOrConnectWithoutDailyLogItemInput
    connect?: TaskWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutDailyLogItemInput = {
    create?: XOR<TenantCreateWithoutDailyLogItemInput, TenantUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: TenantCreateOrConnectWithoutDailyLogItemInput
    connect?: TenantWhereUniqueInput
  }

  export type TimeBlockCreateNestedManyWithoutDailyLogItemInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutDailyLogItemInput>, Enumerable<TimeBlockUncheckedCreateWithoutDailyLogItemInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutDailyLogItemInput>
    createMany?: TimeBlockCreateManyDailyLogItemInputEnvelope
    connect?: Enumerable<TimeBlockWhereUniqueInput>
  }

  export type TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutDailyLogItemInput>, Enumerable<TimeBlockUncheckedCreateWithoutDailyLogItemInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutDailyLogItemInput>
    createMany?: TimeBlockCreateManyDailyLogItemInputEnvelope
    connect?: Enumerable<TimeBlockWhereUniqueInput>
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type UserUpdateOneWithoutDailyLogItemNestedInput = {
    create?: XOR<UserCreateWithoutDailyLogItemInput, UserUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: UserCreateOrConnectWithoutDailyLogItemInput
    upsert?: UserUpsertWithoutDailyLogItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutDailyLogItemInput, UserUncheckedUpdateWithoutDailyLogItemInput>
  }

  export type DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput = {
    create?: XOR<DailyLogCreateWithoutDailyLogItemInput, DailyLogUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: DailyLogCreateOrConnectWithoutDailyLogItemInput
    upsert?: DailyLogUpsertWithoutDailyLogItemInput
    connect?: DailyLogWhereUniqueInput
    update?: XOR<DailyLogUpdateWithoutDailyLogItemInput, DailyLogUncheckedUpdateWithoutDailyLogItemInput>
  }

  export type EquipmentUpdateOneWithoutDailyLogItemNestedInput = {
    create?: XOR<EquipmentCreateWithoutDailyLogItemInput, EquipmentUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutDailyLogItemInput
    upsert?: EquipmentUpsertWithoutDailyLogItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: EquipmentWhereUniqueInput
    update?: XOR<EquipmentUpdateWithoutDailyLogItemInput, EquipmentUncheckedUpdateWithoutDailyLogItemInput>
  }

  export type TaskUpdateOneWithoutDailyLogItemNestedInput = {
    create?: XOR<TaskCreateWithoutDailyLogItemInput, TaskUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: TaskCreateOrConnectWithoutDailyLogItemInput
    upsert?: TaskUpsertWithoutDailyLogItemInput
    disconnect?: boolean
    delete?: boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<TaskUpdateWithoutDailyLogItemInput, TaskUncheckedUpdateWithoutDailyLogItemInput>
  }

  export type TenantUpdateOneRequiredWithoutDailyLogItemNestedInput = {
    create?: XOR<TenantCreateWithoutDailyLogItemInput, TenantUncheckedCreateWithoutDailyLogItemInput>
    connectOrCreate?: TenantCreateOrConnectWithoutDailyLogItemInput
    upsert?: TenantUpsertWithoutDailyLogItemInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutDailyLogItemInput, TenantUncheckedUpdateWithoutDailyLogItemInput>
  }

  export type TimeBlockUpdateManyWithoutDailyLogItemNestedInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutDailyLogItemInput>, Enumerable<TimeBlockUncheckedCreateWithoutDailyLogItemInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutDailyLogItemInput>
    upsert?: Enumerable<TimeBlockUpsertWithWhereUniqueWithoutDailyLogItemInput>
    createMany?: TimeBlockCreateManyDailyLogItemInputEnvelope
    set?: Enumerable<TimeBlockWhereUniqueInput>
    disconnect?: Enumerable<TimeBlockWhereUniqueInput>
    delete?: Enumerable<TimeBlockWhereUniqueInput>
    connect?: Enumerable<TimeBlockWhereUniqueInput>
    update?: Enumerable<TimeBlockUpdateWithWhereUniqueWithoutDailyLogItemInput>
    updateMany?: Enumerable<TimeBlockUpdateManyWithWhereWithoutDailyLogItemInput>
    deleteMany?: Enumerable<TimeBlockScalarWhereInput>
  }

  export type TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutDailyLogItemInput>, Enumerable<TimeBlockUncheckedCreateWithoutDailyLogItemInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutDailyLogItemInput>
    upsert?: Enumerable<TimeBlockUpsertWithWhereUniqueWithoutDailyLogItemInput>
    createMany?: TimeBlockCreateManyDailyLogItemInputEnvelope
    set?: Enumerable<TimeBlockWhereUniqueInput>
    disconnect?: Enumerable<TimeBlockWhereUniqueInput>
    delete?: Enumerable<TimeBlockWhereUniqueInput>
    connect?: Enumerable<TimeBlockWhereUniqueInput>
    update?: Enumerable<TimeBlockUpdateWithWhereUniqueWithoutDailyLogItemInput>
    updateMany?: Enumerable<TimeBlockUpdateManyWithWhereWithoutDailyLogItemInput>
    deleteMany?: Enumerable<TimeBlockScalarWhereInput>
  }

  export type DailyLogItemCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutEquipmentInput>, Enumerable<DailyLogItemUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutEquipmentInput>
    createMany?: DailyLogItemCreateManyEquipmentInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type UserCreateNestedOneWithoutEquipment_Equipment_createdByToUserInput = {
    create?: XOR<UserCreateWithoutEquipment_Equipment_createdByToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipment_Equipment_createdByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutEquipmentInput = {
    create?: XOR<TenantCreateWithoutEquipmentInput, TenantUncheckedCreateWithoutEquipmentInput>
    connectOrCreate?: TenantCreateOrConnectWithoutEquipmentInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutEquipment_Equipment_userIdToUserInput = {
    create?: XOR<UserCreateWithoutEquipment_Equipment_userIdToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipment_Equipment_userIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type EquipmentPropertyValueCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type DailyLogItemUncheckedCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutEquipmentInput>, Enumerable<DailyLogItemUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutEquipmentInput>
    createMany?: DailyLogItemCreateManyEquipmentInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type DailyLogItemUpdateManyWithoutEquipmentNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutEquipmentInput>, Enumerable<DailyLogItemUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: DailyLogItemCreateManyEquipmentInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type UserUpdateOneWithoutEquipment_Equipment_createdByToUserNestedInput = {
    create?: XOR<UserCreateWithoutEquipment_Equipment_createdByToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipment_Equipment_createdByToUserInput
    upsert?: UserUpsertWithoutEquipment_Equipment_createdByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutEquipment_Equipment_createdByToUserInput, UserUncheckedUpdateWithoutEquipment_Equipment_createdByToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutEquipmentNestedInput = {
    create?: XOR<TenantCreateWithoutEquipmentInput, TenantUncheckedCreateWithoutEquipmentInput>
    connectOrCreate?: TenantCreateOrConnectWithoutEquipmentInput
    upsert?: TenantUpsertWithoutEquipmentInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutEquipmentInput, TenantUncheckedUpdateWithoutEquipmentInput>
  }

  export type UserUpdateOneWithoutEquipment_Equipment_userIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutEquipment_Equipment_userIdToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipment_Equipment_userIdToUserInput
    upsert?: UserUpsertWithoutEquipment_Equipment_userIdToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutEquipment_Equipment_userIdToUserInput, UserUncheckedUpdateWithoutEquipment_Equipment_userIdToUserInput>
  }

  export type EquipmentPropertyValueUpdateManyWithoutEquipmentNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type DailyLogItemUncheckedUpdateManyWithoutEquipmentNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutEquipmentInput>, Enumerable<DailyLogItemUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: DailyLogItemCreateManyEquipmentInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutEquipmentInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutEquipmentInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutEquipmentInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutEquipmentPropertyInput = {
    create?: XOR<UserCreateWithoutEquipmentPropertyInput, UserUncheckedCreateWithoutEquipmentPropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipmentPropertyInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutEquipmentPropertyInput = {
    create?: XOR<TenantCreateWithoutEquipmentPropertyInput, TenantUncheckedCreateWithoutEquipmentPropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutEquipmentPropertyInput
    connect?: TenantWhereUniqueInput
  }

  export type EquipmentPropertyValueCreateNestedManyWithoutEquipmentPropertyInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentPropertyInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentPropertyInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentPropertyInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentPropertyInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentPropertyInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentPropertyInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentPropertyInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type UserUpdateOneWithoutEquipmentPropertyNestedInput = {
    create?: XOR<UserCreateWithoutEquipmentPropertyInput, UserUncheckedCreateWithoutEquipmentPropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipmentPropertyInput
    upsert?: UserUpsertWithoutEquipmentPropertyInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutEquipmentPropertyInput, UserUncheckedUpdateWithoutEquipmentPropertyInput>
  }

  export type TenantUpdateOneRequiredWithoutEquipmentPropertyNestedInput = {
    create?: XOR<TenantCreateWithoutEquipmentPropertyInput, TenantUncheckedCreateWithoutEquipmentPropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutEquipmentPropertyInput
    upsert?: TenantUpsertWithoutEquipmentPropertyInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutEquipmentPropertyInput, TenantUncheckedUpdateWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyValueUpdateManyWithoutEquipmentPropertyNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentPropertyInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentPropertyInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutEquipmentPropertyInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentPropertyInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutEquipmentPropertyInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutEquipmentPropertyInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutEquipmentPropertyInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutEquipmentPropertyInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutEquipmentPropertyInput>
    createMany?: EquipmentPropertyValueCreateManyEquipmentPropertyInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutEquipmentPropertyInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutEquipmentPropertyInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutEquipmentPropertyValueInput = {
    create?: XOR<UserCreateWithoutEquipmentPropertyValueInput, UserUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipmentPropertyValueInput
    connect?: UserWhereUniqueInput
  }

  export type EquipmentCreateNestedOneWithoutEquipmentPropertyValueInput = {
    create?: XOR<EquipmentCreateWithoutEquipmentPropertyValueInput, EquipmentUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutEquipmentPropertyValueInput
    connect?: EquipmentWhereUniqueInput
  }

  export type EquipmentPropertyCreateNestedOneWithoutEquipmentPropertyValueInput = {
    create?: XOR<EquipmentPropertyCreateWithoutEquipmentPropertyValueInput, EquipmentPropertyUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: EquipmentPropertyCreateOrConnectWithoutEquipmentPropertyValueInput
    connect?: EquipmentPropertyWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutEquipmentPropertyValueInput = {
    create?: XOR<TenantCreateWithoutEquipmentPropertyValueInput, TenantUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutEquipmentPropertyValueInput
    connect?: TenantWhereUniqueInput
  }

  export type UserUpdateOneWithoutEquipmentPropertyValueNestedInput = {
    create?: XOR<UserCreateWithoutEquipmentPropertyValueInput, UserUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutEquipmentPropertyValueInput
    upsert?: UserUpsertWithoutEquipmentPropertyValueInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutEquipmentPropertyValueInput, UserUncheckedUpdateWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput = {
    create?: XOR<EquipmentCreateWithoutEquipmentPropertyValueInput, EquipmentUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: EquipmentCreateOrConnectWithoutEquipmentPropertyValueInput
    upsert?: EquipmentUpsertWithoutEquipmentPropertyValueInput
    connect?: EquipmentWhereUniqueInput
    update?: XOR<EquipmentUpdateWithoutEquipmentPropertyValueInput, EquipmentUncheckedUpdateWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentPropertyUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput = {
    create?: XOR<EquipmentPropertyCreateWithoutEquipmentPropertyValueInput, EquipmentPropertyUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: EquipmentPropertyCreateOrConnectWithoutEquipmentPropertyValueInput
    upsert?: EquipmentPropertyUpsertWithoutEquipmentPropertyValueInput
    connect?: EquipmentPropertyWhereUniqueInput
    update?: XOR<EquipmentPropertyUpdateWithoutEquipmentPropertyValueInput, EquipmentPropertyUncheckedUpdateWithoutEquipmentPropertyValueInput>
  }

  export type TenantUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput = {
    create?: XOR<TenantCreateWithoutEquipmentPropertyValueInput, TenantUncheckedCreateWithoutEquipmentPropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutEquipmentPropertyValueInput
    upsert?: TenantUpsertWithoutEquipmentPropertyValueInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutEquipmentPropertyValueInput, TenantUncheckedUpdateWithoutEquipmentPropertyValueInput>
  }

  export type UserCreateNestedOneWithoutFeedbackInput = {
    create?: XOR<UserCreateWithoutFeedbackInput, UserUncheckedCreateWithoutFeedbackInput>
    connectOrCreate?: UserCreateOrConnectWithoutFeedbackInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutFeedbackInput = {
    create?: XOR<TenantCreateWithoutFeedbackInput, TenantUncheckedCreateWithoutFeedbackInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFeedbackInput
    connect?: TenantWhereUniqueInput
  }

  export type UserUpdateOneWithoutFeedbackNestedInput = {
    create?: XOR<UserCreateWithoutFeedbackInput, UserUncheckedCreateWithoutFeedbackInput>
    connectOrCreate?: UserCreateOrConnectWithoutFeedbackInput
    upsert?: UserUpsertWithoutFeedbackInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutFeedbackInput, UserUncheckedUpdateWithoutFeedbackInput>
  }

  export type TenantUpdateOneRequiredWithoutFeedbackNestedInput = {
    create?: XOR<TenantCreateWithoutFeedbackInput, TenantUncheckedCreateWithoutFeedbackInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFeedbackInput
    upsert?: TenantUpsertWithoutFeedbackInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutFeedbackInput, TenantUncheckedUpdateWithoutFeedbackInput>
  }

  export type UserCreateNestedOneWithoutFileInput = {
    create?: XOR<UserCreateWithoutFileInput, UserUncheckedCreateWithoutFileInput>
    connectOrCreate?: UserCreateOrConnectWithoutFileInput
    connect?: UserWhereUniqueInput
  }

  export type DailyLogCreateNestedOneWithoutFileInput = {
    create?: XOR<DailyLogCreateWithoutFileInput, DailyLogUncheckedCreateWithoutFileInput>
    connectOrCreate?: DailyLogCreateOrConnectWithoutFileInput
    connect?: DailyLogWhereUniqueInput
  }

  export type ImageCreateNestedOneWithoutFileInput = {
    create?: XOR<ImageCreateWithoutFileInput, ImageUncheckedCreateWithoutFileInput>
    connectOrCreate?: ImageCreateOrConnectWithoutFileInput
    connect?: ImageWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutFileInput = {
    create?: XOR<ProjectCreateWithoutFileInput, ProjectUncheckedCreateWithoutFileInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutFileInput
    connect?: ProjectWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutFileInput = {
    create?: XOR<TenantCreateWithoutFileInput, TenantUncheckedCreateWithoutFileInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFileInput
    connect?: TenantWhereUniqueInput
  }

  export type FilePropertyValueCreateNestedManyWithoutFileInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFileInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFileInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFileInput>
    createMany?: FilePropertyValueCreateManyFileInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type FilePropertyValueUncheckedCreateNestedManyWithoutFileInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFileInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFileInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFileInput>
    createMany?: FilePropertyValueCreateManyFileInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneWithoutFileNestedInput = {
    create?: XOR<UserCreateWithoutFileInput, UserUncheckedCreateWithoutFileInput>
    connectOrCreate?: UserCreateOrConnectWithoutFileInput
    upsert?: UserUpsertWithoutFileInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutFileInput, UserUncheckedUpdateWithoutFileInput>
  }

  export type DailyLogUpdateOneWithoutFileNestedInput = {
    create?: XOR<DailyLogCreateWithoutFileInput, DailyLogUncheckedCreateWithoutFileInput>
    connectOrCreate?: DailyLogCreateOrConnectWithoutFileInput
    upsert?: DailyLogUpsertWithoutFileInput
    disconnect?: boolean
    delete?: boolean
    connect?: DailyLogWhereUniqueInput
    update?: XOR<DailyLogUpdateWithoutFileInput, DailyLogUncheckedUpdateWithoutFileInput>
  }

  export type ImageUpdateOneRequiredWithoutFileNestedInput = {
    create?: XOR<ImageCreateWithoutFileInput, ImageUncheckedCreateWithoutFileInput>
    connectOrCreate?: ImageCreateOrConnectWithoutFileInput
    upsert?: ImageUpsertWithoutFileInput
    connect?: ImageWhereUniqueInput
    update?: XOR<ImageUpdateWithoutFileInput, ImageUncheckedUpdateWithoutFileInput>
  }

  export type ProjectUpdateOneWithoutFileNestedInput = {
    create?: XOR<ProjectCreateWithoutFileInput, ProjectUncheckedCreateWithoutFileInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutFileInput
    upsert?: ProjectUpsertWithoutFileInput
    disconnect?: boolean
    delete?: boolean
    connect?: ProjectWhereUniqueInput
    update?: XOR<ProjectUpdateWithoutFileInput, ProjectUncheckedUpdateWithoutFileInput>
  }

  export type TenantUpdateOneRequiredWithoutFileNestedInput = {
    create?: XOR<TenantCreateWithoutFileInput, TenantUncheckedCreateWithoutFileInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFileInput
    upsert?: TenantUpsertWithoutFileInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutFileInput, TenantUncheckedUpdateWithoutFileInput>
  }

  export type FilePropertyValueUpdateManyWithoutFileNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFileInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFileInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFileInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutFileInput>
    createMany?: FilePropertyValueCreateManyFileInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutFileInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutFileInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFileInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFileInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFileInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutFileInput>
    createMany?: FilePropertyValueCreateManyFileInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutFileInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutFileInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutFilePropertyInput = {
    create?: XOR<UserCreateWithoutFilePropertyInput, UserUncheckedCreateWithoutFilePropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutFilePropertyInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutFilePropertyInput = {
    create?: XOR<TenantCreateWithoutFilePropertyInput, TenantUncheckedCreateWithoutFilePropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFilePropertyInput
    connect?: TenantWhereUniqueInput
  }

  export type FilePropertyValueCreateNestedManyWithoutFilePropertyInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFilePropertyInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFilePropertyInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFilePropertyInput>
    createMany?: FilePropertyValueCreateManyFilePropertyInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type FilePropertyValueUncheckedCreateNestedManyWithoutFilePropertyInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFilePropertyInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFilePropertyInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFilePropertyInput>
    createMany?: FilePropertyValueCreateManyFilePropertyInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type UserUpdateOneWithoutFilePropertyNestedInput = {
    create?: XOR<UserCreateWithoutFilePropertyInput, UserUncheckedCreateWithoutFilePropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutFilePropertyInput
    upsert?: UserUpsertWithoutFilePropertyInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutFilePropertyInput, UserUncheckedUpdateWithoutFilePropertyInput>
  }

  export type TenantUpdateOneRequiredWithoutFilePropertyNestedInput = {
    create?: XOR<TenantCreateWithoutFilePropertyInput, TenantUncheckedCreateWithoutFilePropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFilePropertyInput
    upsert?: TenantUpsertWithoutFilePropertyInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutFilePropertyInput, TenantUncheckedUpdateWithoutFilePropertyInput>
  }

  export type FilePropertyValueUpdateManyWithoutFilePropertyNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFilePropertyInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFilePropertyInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFilePropertyInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutFilePropertyInput>
    createMany?: FilePropertyValueCreateManyFilePropertyInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutFilePropertyInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutFilePropertyInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type FilePropertyValueUncheckedUpdateManyWithoutFilePropertyNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutFilePropertyInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutFilePropertyInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutFilePropertyInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutFilePropertyInput>
    createMany?: FilePropertyValueCreateManyFilePropertyInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutFilePropertyInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutFilePropertyInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutFilePropertyValueInput = {
    create?: XOR<UserCreateWithoutFilePropertyValueInput, UserUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutFilePropertyValueInput
    connect?: UserWhereUniqueInput
  }

  export type FileCreateNestedOneWithoutFilePropertyValueInput = {
    create?: XOR<FileCreateWithoutFilePropertyValueInput, FileUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: FileCreateOrConnectWithoutFilePropertyValueInput
    connect?: FileWhereUniqueInput
  }

  export type FilePropertyCreateNestedOneWithoutFilePropertyValueInput = {
    create?: XOR<FilePropertyCreateWithoutFilePropertyValueInput, FilePropertyUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: FilePropertyCreateOrConnectWithoutFilePropertyValueInput
    connect?: FilePropertyWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutFilePropertyValueInput = {
    create?: XOR<TenantCreateWithoutFilePropertyValueInput, TenantUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFilePropertyValueInput
    connect?: TenantWhereUniqueInput
  }

  export type UserUpdateOneWithoutFilePropertyValueNestedInput = {
    create?: XOR<UserCreateWithoutFilePropertyValueInput, UserUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutFilePropertyValueInput
    upsert?: UserUpsertWithoutFilePropertyValueInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutFilePropertyValueInput, UserUncheckedUpdateWithoutFilePropertyValueInput>
  }

  export type FileUpdateOneRequiredWithoutFilePropertyValueNestedInput = {
    create?: XOR<FileCreateWithoutFilePropertyValueInput, FileUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: FileCreateOrConnectWithoutFilePropertyValueInput
    upsert?: FileUpsertWithoutFilePropertyValueInput
    connect?: FileWhereUniqueInput
    update?: XOR<FileUpdateWithoutFilePropertyValueInput, FileUncheckedUpdateWithoutFilePropertyValueInput>
  }

  export type FilePropertyUpdateOneRequiredWithoutFilePropertyValueNestedInput = {
    create?: XOR<FilePropertyCreateWithoutFilePropertyValueInput, FilePropertyUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: FilePropertyCreateOrConnectWithoutFilePropertyValueInput
    upsert?: FilePropertyUpsertWithoutFilePropertyValueInput
    connect?: FilePropertyWhereUniqueInput
    update?: XOR<FilePropertyUpdateWithoutFilePropertyValueInput, FilePropertyUncheckedUpdateWithoutFilePropertyValueInput>
  }

  export type TenantUpdateOneRequiredWithoutFilePropertyValueNestedInput = {
    create?: XOR<TenantCreateWithoutFilePropertyValueInput, TenantUncheckedCreateWithoutFilePropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutFilePropertyValueInput
    upsert?: TenantUpsertWithoutFilePropertyValueInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutFilePropertyValueInput, TenantUncheckedUpdateWithoutFilePropertyValueInput>
  }

  export type FileCreateNestedManyWithoutImageInput = {
    create?: XOR<Enumerable<FileCreateWithoutImageInput>, Enumerable<FileUncheckedCreateWithoutImageInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutImageInput>
    createMany?: FileCreateManyImageInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type UserCreateNestedOneWithoutImage_Image_createdByToUserInput = {
    create?: XOR<UserCreateWithoutImage_Image_createdByToUserInput, UserUncheckedCreateWithoutImage_Image_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutImage_Image_createdByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutImageInput = {
    create?: XOR<TenantCreateWithoutImageInput, TenantUncheckedCreateWithoutImageInput>
    connectOrCreate?: TenantCreateOrConnectWithoutImageInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutImage_User_imageIdToImageInput = {
    create?: XOR<Enumerable<UserCreateWithoutImage_User_imageIdToImageInput>, Enumerable<UserUncheckedCreateWithoutImage_User_imageIdToImageInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutImage_User_imageIdToImageInput>
    createMany?: UserCreateManyImage_User_imageIdToImageInputEnvelope
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type FileUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<Enumerable<FileCreateWithoutImageInput>, Enumerable<FileUncheckedCreateWithoutImageInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutImageInput>
    createMany?: FileCreateManyImageInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type UserUncheckedCreateNestedManyWithoutImage_User_imageIdToImageInput = {
    create?: XOR<Enumerable<UserCreateWithoutImage_User_imageIdToImageInput>, Enumerable<UserUncheckedCreateWithoutImage_User_imageIdToImageInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutImage_User_imageIdToImageInput>
    createMany?: UserCreateManyImage_User_imageIdToImageInputEnvelope
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type FileUpdateManyWithoutImageNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutImageInput>, Enumerable<FileUncheckedCreateWithoutImageInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutImageInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutImageInput>
    createMany?: FileCreateManyImageInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutImageInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutImageInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type UserUpdateOneWithoutImage_Image_createdByToUserNestedInput = {
    create?: XOR<UserCreateWithoutImage_Image_createdByToUserInput, UserUncheckedCreateWithoutImage_Image_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutImage_Image_createdByToUserInput
    upsert?: UserUpsertWithoutImage_Image_createdByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutImage_Image_createdByToUserInput, UserUncheckedUpdateWithoutImage_Image_createdByToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutImageNestedInput = {
    create?: XOR<TenantCreateWithoutImageInput, TenantUncheckedCreateWithoutImageInput>
    connectOrCreate?: TenantCreateOrConnectWithoutImageInput
    upsert?: TenantUpsertWithoutImageInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutImageInput, TenantUncheckedUpdateWithoutImageInput>
  }

  export type UserUpdateManyWithoutImage_User_imageIdToImageNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutImage_User_imageIdToImageInput>, Enumerable<UserUncheckedCreateWithoutImage_User_imageIdToImageInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutImage_User_imageIdToImageInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutImage_User_imageIdToImageInput>
    createMany?: UserCreateManyImage_User_imageIdToImageInputEnvelope
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutImage_User_imageIdToImageInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutImage_User_imageIdToImageInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type FileUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutImageInput>, Enumerable<FileUncheckedCreateWithoutImageInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutImageInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutImageInput>
    createMany?: FileCreateManyImageInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutImageInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutImageInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type UserUncheckedUpdateManyWithoutImage_User_imageIdToImageNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutImage_User_imageIdToImageInput>, Enumerable<UserUncheckedCreateWithoutImage_User_imageIdToImageInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutImage_User_imageIdToImageInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutImage_User_imageIdToImageInput>
    createMany?: UserCreateManyImage_User_imageIdToImageInputEnvelope
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutImage_User_imageIdToImageInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutImage_User_imageIdToImageInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutLocationEntryInput = {
    create?: XOR<UserCreateWithoutLocationEntryInput, UserUncheckedCreateWithoutLocationEntryInput>
    connectOrCreate?: UserCreateOrConnectWithoutLocationEntryInput
    connect?: UserWhereUniqueInput
  }

  export type DailyLogCreateNestedOneWithoutLocationEntryInput = {
    create?: XOR<DailyLogCreateWithoutLocationEntryInput, DailyLogUncheckedCreateWithoutLocationEntryInput>
    connectOrCreate?: DailyLogCreateOrConnectWithoutLocationEntryInput
    connect?: DailyLogWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutLocationEntryInput = {
    create?: XOR<TenantCreateWithoutLocationEntryInput, TenantUncheckedCreateWithoutLocationEntryInput>
    connectOrCreate?: TenantCreateOrConnectWithoutLocationEntryInput
    connect?: TenantWhereUniqueInput
  }

  export type UserUpdateOneWithoutLocationEntryNestedInput = {
    create?: XOR<UserCreateWithoutLocationEntryInput, UserUncheckedCreateWithoutLocationEntryInput>
    connectOrCreate?: UserCreateOrConnectWithoutLocationEntryInput
    upsert?: UserUpsertWithoutLocationEntryInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutLocationEntryInput, UserUncheckedUpdateWithoutLocationEntryInput>
  }

  export type DailyLogUpdateOneRequiredWithoutLocationEntryNestedInput = {
    create?: XOR<DailyLogCreateWithoutLocationEntryInput, DailyLogUncheckedCreateWithoutLocationEntryInput>
    connectOrCreate?: DailyLogCreateOrConnectWithoutLocationEntryInput
    upsert?: DailyLogUpsertWithoutLocationEntryInput
    connect?: DailyLogWhereUniqueInput
    update?: XOR<DailyLogUpdateWithoutLocationEntryInput, DailyLogUncheckedUpdateWithoutLocationEntryInput>
  }

  export type TenantUpdateOneRequiredWithoutLocationEntryNestedInput = {
    create?: XOR<TenantCreateWithoutLocationEntryInput, TenantUncheckedCreateWithoutLocationEntryInput>
    connectOrCreate?: TenantCreateOrConnectWithoutLocationEntryInput
    upsert?: TenantUpsertWithoutLocationEntryInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutLocationEntryInput, TenantUncheckedUpdateWithoutLocationEntryInput>
  }

  export type FileCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<FileCreateWithoutProjectInput>, Enumerable<FileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutProjectInput>
    createMany?: FileCreateManyProjectInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type UserCreateNestedOneWithoutProjectInput = {
    create?: XOR<UserCreateWithoutProjectInput, UserUncheckedCreateWithoutProjectInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutProjectInput = {
    create?: XOR<TenantCreateWithoutProjectInput, TenantUncheckedCreateWithoutProjectInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProjectInput
    connect?: TenantWhereUniqueInput
  }

  export type ProjectPropertyValueCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectInput>
    createMany?: ProjectPropertyValueCreateManyProjectInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type TaskCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<TaskCreateWithoutProjectInput>, Enumerable<TaskUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutProjectInput>
    createMany?: TaskCreateManyProjectInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type FileUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<FileCreateWithoutProjectInput>, Enumerable<FileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutProjectInput>
    createMany?: FileCreateManyProjectInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectInput>
    createMany?: ProjectPropertyValueCreateManyProjectInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type TaskUncheckedCreateNestedManyWithoutProjectInput = {
    create?: XOR<Enumerable<TaskCreateWithoutProjectInput>, Enumerable<TaskUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutProjectInput>
    createMany?: TaskCreateManyProjectInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type FileUpdateManyWithoutProjectNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutProjectInput>, Enumerable<FileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: FileCreateManyProjectInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type UserUpdateOneWithoutProjectNestedInput = {
    create?: XOR<UserCreateWithoutProjectInput, UserUncheckedCreateWithoutProjectInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectInput
    upsert?: UserUpsertWithoutProjectInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProjectInput, UserUncheckedUpdateWithoutProjectInput>
  }

  export type TenantUpdateOneRequiredWithoutProjectNestedInput = {
    create?: XOR<TenantCreateWithoutProjectInput, TenantUncheckedCreateWithoutProjectInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProjectInput
    upsert?: TenantUpsertWithoutProjectInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutProjectInput, TenantUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectPropertyValueUpdateManyWithoutProjectNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: ProjectPropertyValueCreateManyProjectInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type TaskUpdateManyWithoutProjectNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutProjectInput>, Enumerable<TaskUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: TaskCreateManyProjectInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type FileUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutProjectInput>, Enumerable<FileUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: FileCreateManyProjectInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type ProjectPropertyValueUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: ProjectPropertyValueCreateManyProjectInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type TaskUncheckedUpdateManyWithoutProjectNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutProjectInput>, Enumerable<TaskUncheckedCreateWithoutProjectInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutProjectInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutProjectInput>
    createMany?: TaskCreateManyProjectInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutProjectInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutProjectInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutProjectPropertyInput = {
    create?: XOR<UserCreateWithoutProjectPropertyInput, UserUncheckedCreateWithoutProjectPropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectPropertyInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutProjectPropertyInput = {
    create?: XOR<TenantCreateWithoutProjectPropertyInput, TenantUncheckedCreateWithoutProjectPropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProjectPropertyInput
    connect?: TenantWhereUniqueInput
  }

  export type ProjectPropertyValueCreateNestedManyWithoutProjectPropertyInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectPropertyInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectPropertyInput>
    createMany?: ProjectPropertyValueCreateManyProjectPropertyInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectPropertyInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectPropertyInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectPropertyInput>
    createMany?: ProjectPropertyValueCreateManyProjectPropertyInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type UserUpdateOneWithoutProjectPropertyNestedInput = {
    create?: XOR<UserCreateWithoutProjectPropertyInput, UserUncheckedCreateWithoutProjectPropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectPropertyInput
    upsert?: UserUpsertWithoutProjectPropertyInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProjectPropertyInput, UserUncheckedUpdateWithoutProjectPropertyInput>
  }

  export type TenantUpdateOneRequiredWithoutProjectPropertyNestedInput = {
    create?: XOR<TenantCreateWithoutProjectPropertyInput, TenantUncheckedCreateWithoutProjectPropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProjectPropertyInput
    upsert?: TenantUpsertWithoutProjectPropertyInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutProjectPropertyInput, TenantUncheckedUpdateWithoutProjectPropertyInput>
  }

  export type ProjectPropertyValueUpdateManyWithoutProjectPropertyNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectPropertyInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectPropertyInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutProjectPropertyInput>
    createMany?: ProjectPropertyValueCreateManyProjectPropertyInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutProjectPropertyInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutProjectPropertyInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutProjectPropertyInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutProjectPropertyInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutProjectPropertyInput>
    createMany?: ProjectPropertyValueCreateManyProjectPropertyInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutProjectPropertyInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutProjectPropertyInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutProjectPropertyValueInput = {
    create?: XOR<UserCreateWithoutProjectPropertyValueInput, UserUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectPropertyValueInput
    connect?: UserWhereUniqueInput
  }

  export type ProjectCreateNestedOneWithoutProjectPropertyValueInput = {
    create?: XOR<ProjectCreateWithoutProjectPropertyValueInput, ProjectUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutProjectPropertyValueInput
    connect?: ProjectWhereUniqueInput
  }

  export type ProjectPropertyCreateNestedOneWithoutProjectPropertyValueInput = {
    create?: XOR<ProjectPropertyCreateWithoutProjectPropertyValueInput, ProjectPropertyUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: ProjectPropertyCreateOrConnectWithoutProjectPropertyValueInput
    connect?: ProjectPropertyWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutProjectPropertyValueInput = {
    create?: XOR<TenantCreateWithoutProjectPropertyValueInput, TenantUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProjectPropertyValueInput
    connect?: TenantWhereUniqueInput
  }

  export type UserUpdateOneWithoutProjectPropertyValueNestedInput = {
    create?: XOR<UserCreateWithoutProjectPropertyValueInput, UserUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutProjectPropertyValueInput
    upsert?: UserUpsertWithoutProjectPropertyValueInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutProjectPropertyValueInput, UserUncheckedUpdateWithoutProjectPropertyValueInput>
  }

  export type ProjectUpdateOneRequiredWithoutProjectPropertyValueNestedInput = {
    create?: XOR<ProjectCreateWithoutProjectPropertyValueInput, ProjectUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutProjectPropertyValueInput
    upsert?: ProjectUpsertWithoutProjectPropertyValueInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<ProjectUpdateWithoutProjectPropertyValueInput, ProjectUncheckedUpdateWithoutProjectPropertyValueInput>
  }

  export type ProjectPropertyUpdateOneRequiredWithoutProjectPropertyValueNestedInput = {
    create?: XOR<ProjectPropertyCreateWithoutProjectPropertyValueInput, ProjectPropertyUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: ProjectPropertyCreateOrConnectWithoutProjectPropertyValueInput
    upsert?: ProjectPropertyUpsertWithoutProjectPropertyValueInput
    connect?: ProjectPropertyWhereUniqueInput
    update?: XOR<ProjectPropertyUpdateWithoutProjectPropertyValueInput, ProjectPropertyUncheckedUpdateWithoutProjectPropertyValueInput>
  }

  export type TenantUpdateOneRequiredWithoutProjectPropertyValueNestedInput = {
    create?: XOR<TenantCreateWithoutProjectPropertyValueInput, TenantUncheckedCreateWithoutProjectPropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutProjectPropertyValueInput
    upsert?: TenantUpsertWithoutProjectPropertyValueInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutProjectPropertyValueInput, TenantUncheckedUpdateWithoutProjectPropertyValueInput>
  }

  export type DailyLogItemCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTaskInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTaskInput>
    createMany?: DailyLogItemCreateManyTaskInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type UserCreateNestedOneWithoutTaskInput = {
    create?: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskInput
    connect?: UserWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutOther_TaskInput = {
    create?: XOR<TaskCreateWithoutOther_TaskInput, TaskUncheckedCreateWithoutOther_TaskInput>
    connectOrCreate?: TaskCreateOrConnectWithoutOther_TaskInput
    connect?: TaskWhereUniqueInput
  }

  export type TaskCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskInput>, Enumerable<TaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskInput>
    createMany?: TaskCreateManyTaskInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type ProjectCreateNestedOneWithoutTaskInput = {
    create?: XOR<ProjectCreateWithoutTaskInput, ProjectUncheckedCreateWithoutTaskInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutTaskInput
    connect?: ProjectWhereUniqueInput
  }

  export type TaskStatusCreateNestedOneWithoutTaskInput = {
    create?: XOR<TaskStatusCreateWithoutTaskInput, TaskStatusUncheckedCreateWithoutTaskInput>
    connectOrCreate?: TaskStatusCreateOrConnectWithoutTaskInput
    connect?: TaskStatusWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutTaskInput = {
    create?: XOR<TenantCreateWithoutTaskInput, TenantUncheckedCreateWithoutTaskInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskInput
    connect?: TenantWhereUniqueInput
  }

  export type TaskPropertyValueCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskInput>
    createMany?: TaskPropertyValueCreateManyTaskInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type UserTaskCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTaskInput>, Enumerable<UserTaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTaskInput>
    createMany?: UserTaskCreateManyTaskInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type DailyLogItemUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTaskInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTaskInput>
    createMany?: DailyLogItemCreateManyTaskInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type TaskUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskInput>, Enumerable<TaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskInput>
    createMany?: TaskCreateManyTaskInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskInput>
    createMany?: TaskPropertyValueCreateManyTaskInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type UserTaskUncheckedCreateNestedManyWithoutTaskInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTaskInput>, Enumerable<UserTaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTaskInput>
    createMany?: UserTaskCreateManyTaskInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type DailyLogItemUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTaskInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: DailyLogItemCreateManyTaskInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type UserUpdateOneWithoutTaskNestedInput = {
    create?: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskInput
    upsert?: UserUpsertWithoutTaskInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTaskInput, UserUncheckedUpdateWithoutTaskInput>
  }

  export type TaskUpdateOneWithoutOther_TaskNestedInput = {
    create?: XOR<TaskCreateWithoutOther_TaskInput, TaskUncheckedCreateWithoutOther_TaskInput>
    connectOrCreate?: TaskCreateOrConnectWithoutOther_TaskInput
    upsert?: TaskUpsertWithoutOther_TaskInput
    disconnect?: boolean
    delete?: boolean
    connect?: TaskWhereUniqueInput
    update?: XOR<TaskUpdateWithoutOther_TaskInput, TaskUncheckedUpdateWithoutOther_TaskInput>
  }

  export type TaskUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskInput>, Enumerable<TaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: TaskCreateManyTaskInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type ProjectUpdateOneRequiredWithoutTaskNestedInput = {
    create?: XOR<ProjectCreateWithoutTaskInput, ProjectUncheckedCreateWithoutTaskInput>
    connectOrCreate?: ProjectCreateOrConnectWithoutTaskInput
    upsert?: ProjectUpsertWithoutTaskInput
    connect?: ProjectWhereUniqueInput
    update?: XOR<ProjectUpdateWithoutTaskInput, ProjectUncheckedUpdateWithoutTaskInput>
  }

  export type TaskStatusUpdateOneWithoutTaskNestedInput = {
    create?: XOR<TaskStatusCreateWithoutTaskInput, TaskStatusUncheckedCreateWithoutTaskInput>
    connectOrCreate?: TaskStatusCreateOrConnectWithoutTaskInput
    upsert?: TaskStatusUpsertWithoutTaskInput
    disconnect?: boolean
    delete?: boolean
    connect?: TaskStatusWhereUniqueInput
    update?: XOR<TaskStatusUpdateWithoutTaskInput, TaskStatusUncheckedUpdateWithoutTaskInput>
  }

  export type TenantUpdateOneRequiredWithoutTaskNestedInput = {
    create?: XOR<TenantCreateWithoutTaskInput, TenantUncheckedCreateWithoutTaskInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskInput
    upsert?: TenantUpsertWithoutTaskInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutTaskInput, TenantUncheckedUpdateWithoutTaskInput>
  }

  export type TaskPropertyValueUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: TaskPropertyValueCreateManyTaskInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type UserTaskUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTaskInput>, Enumerable<UserTaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: UserTaskCreateManyTaskInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTaskInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: DailyLogItemCreateManyTaskInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type TaskUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskInput>, Enumerable<TaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: TaskCreateManyTaskInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: TaskPropertyValueCreateManyTaskInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type UserTaskUncheckedUpdateManyWithoutTaskNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTaskInput>, Enumerable<UserTaskUncheckedCreateWithoutTaskInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTaskInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutTaskInput>
    createMany?: UserTaskCreateManyTaskInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutTaskInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutTaskInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutTaskPropertyInput = {
    create?: XOR<UserCreateWithoutTaskPropertyInput, UserUncheckedCreateWithoutTaskPropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskPropertyInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutTaskPropertyInput = {
    create?: XOR<TenantCreateWithoutTaskPropertyInput, TenantUncheckedCreateWithoutTaskPropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskPropertyInput
    connect?: TenantWhereUniqueInput
  }

  export type TaskPropertyValueCreateNestedManyWithoutTaskPropertyInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskPropertyInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskPropertyInput>
    createMany?: TaskPropertyValueCreateManyTaskPropertyInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type TaskPropertyValueUncheckedCreateNestedManyWithoutTaskPropertyInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskPropertyInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskPropertyInput>
    createMany?: TaskPropertyValueCreateManyTaskPropertyInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type UserUpdateOneWithoutTaskPropertyNestedInput = {
    create?: XOR<UserCreateWithoutTaskPropertyInput, UserUncheckedCreateWithoutTaskPropertyInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskPropertyInput
    upsert?: UserUpsertWithoutTaskPropertyInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTaskPropertyInput, UserUncheckedUpdateWithoutTaskPropertyInput>
  }

  export type TenantUpdateOneRequiredWithoutTaskPropertyNestedInput = {
    create?: XOR<TenantCreateWithoutTaskPropertyInput, TenantUncheckedCreateWithoutTaskPropertyInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskPropertyInput
    upsert?: TenantUpsertWithoutTaskPropertyInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutTaskPropertyInput, TenantUncheckedUpdateWithoutTaskPropertyInput>
  }

  export type TaskPropertyValueUpdateManyWithoutTaskPropertyNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskPropertyInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskPropertyInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutTaskPropertyInput>
    createMany?: TaskPropertyValueCreateManyTaskPropertyInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutTaskPropertyInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutTaskPropertyInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTaskPropertyInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTaskPropertyInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutTaskPropertyInput>
    createMany?: TaskPropertyValueCreateManyTaskPropertyInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutTaskPropertyInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutTaskPropertyInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutTaskPropertyValueInput = {
    create?: XOR<UserCreateWithoutTaskPropertyValueInput, UserUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskPropertyValueInput
    connect?: UserWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutTaskPropertyValueInput = {
    create?: XOR<TaskCreateWithoutTaskPropertyValueInput, TaskUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: TaskCreateOrConnectWithoutTaskPropertyValueInput
    connect?: TaskWhereUniqueInput
  }

  export type TaskPropertyCreateNestedOneWithoutTaskPropertyValueInput = {
    create?: XOR<TaskPropertyCreateWithoutTaskPropertyValueInput, TaskPropertyUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: TaskPropertyCreateOrConnectWithoutTaskPropertyValueInput
    connect?: TaskPropertyWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutTaskPropertyValueInput = {
    create?: XOR<TenantCreateWithoutTaskPropertyValueInput, TenantUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskPropertyValueInput
    connect?: TenantWhereUniqueInput
  }

  export type UserUpdateOneWithoutTaskPropertyValueNestedInput = {
    create?: XOR<UserCreateWithoutTaskPropertyValueInput, UserUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskPropertyValueInput
    upsert?: UserUpsertWithoutTaskPropertyValueInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTaskPropertyValueInput, UserUncheckedUpdateWithoutTaskPropertyValueInput>
  }

  export type TaskUpdateOneRequiredWithoutTaskPropertyValueNestedInput = {
    create?: XOR<TaskCreateWithoutTaskPropertyValueInput, TaskUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: TaskCreateOrConnectWithoutTaskPropertyValueInput
    upsert?: TaskUpsertWithoutTaskPropertyValueInput
    connect?: TaskWhereUniqueInput
    update?: XOR<TaskUpdateWithoutTaskPropertyValueInput, TaskUncheckedUpdateWithoutTaskPropertyValueInput>
  }

  export type TaskPropertyUpdateOneRequiredWithoutTaskPropertyValueNestedInput = {
    create?: XOR<TaskPropertyCreateWithoutTaskPropertyValueInput, TaskPropertyUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: TaskPropertyCreateOrConnectWithoutTaskPropertyValueInput
    upsert?: TaskPropertyUpsertWithoutTaskPropertyValueInput
    connect?: TaskPropertyWhereUniqueInput
    update?: XOR<TaskPropertyUpdateWithoutTaskPropertyValueInput, TaskPropertyUncheckedUpdateWithoutTaskPropertyValueInput>
  }

  export type TenantUpdateOneRequiredWithoutTaskPropertyValueNestedInput = {
    create?: XOR<TenantCreateWithoutTaskPropertyValueInput, TenantUncheckedCreateWithoutTaskPropertyValueInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskPropertyValueInput
    upsert?: TenantUpsertWithoutTaskPropertyValueInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutTaskPropertyValueInput, TenantUncheckedUpdateWithoutTaskPropertyValueInput>
  }

  export type TaskCreateNestedManyWithoutTaskStatusInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskStatusInput>, Enumerable<TaskUncheckedCreateWithoutTaskStatusInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskStatusInput>
    createMany?: TaskCreateManyTaskStatusInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type UserCreateNestedOneWithoutTaskStatusInput = {
    create?: XOR<UserCreateWithoutTaskStatusInput, UserUncheckedCreateWithoutTaskStatusInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskStatusInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutTaskStatusInput = {
    create?: XOR<TenantCreateWithoutTaskStatusInput, TenantUncheckedCreateWithoutTaskStatusInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskStatusInput
    connect?: TenantWhereUniqueInput
  }

  export type TaskUncheckedCreateNestedManyWithoutTaskStatusInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskStatusInput>, Enumerable<TaskUncheckedCreateWithoutTaskStatusInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskStatusInput>
    createMany?: TaskCreateManyTaskStatusInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type TaskUpdateManyWithoutTaskStatusNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskStatusInput>, Enumerable<TaskUncheckedCreateWithoutTaskStatusInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskStatusInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutTaskStatusInput>
    createMany?: TaskCreateManyTaskStatusInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutTaskStatusInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutTaskStatusInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type UserUpdateOneWithoutTaskStatusNestedInput = {
    create?: XOR<UserCreateWithoutTaskStatusInput, UserUncheckedCreateWithoutTaskStatusInput>
    connectOrCreate?: UserCreateOrConnectWithoutTaskStatusInput
    upsert?: UserUpsertWithoutTaskStatusInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTaskStatusInput, UserUncheckedUpdateWithoutTaskStatusInput>
  }

  export type TenantUpdateOneRequiredWithoutTaskStatusNestedInput = {
    create?: XOR<TenantCreateWithoutTaskStatusInput, TenantUncheckedCreateWithoutTaskStatusInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTaskStatusInput
    upsert?: TenantUpsertWithoutTaskStatusInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutTaskStatusInput, TenantUncheckedUpdateWithoutTaskStatusInput>
  }

  export type TaskUncheckedUpdateManyWithoutTaskStatusNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTaskStatusInput>, Enumerable<TaskUncheckedCreateWithoutTaskStatusInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTaskStatusInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutTaskStatusInput>
    createMany?: TaskCreateManyTaskStatusInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutTaskStatusInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutTaskStatusInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type ApiKeyCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutTenantInput>, Enumerable<ApiKeyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutTenantInput>
    createMany?: ApiKeyCreateManyTenantInputEnvelope
    connect?: Enumerable<ApiKeyWhereUniqueInput>
  }

  export type DailyLogCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutTenantInput>, Enumerable<DailyLogUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutTenantInput>
    createMany?: DailyLogCreateManyTenantInputEnvelope
    connect?: Enumerable<DailyLogWhereUniqueInput>
  }

  export type DailyLogItemCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTenantInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTenantInput>
    createMany?: DailyLogItemCreateManyTenantInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type EquipmentCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutTenantInput>, Enumerable<EquipmentUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutTenantInput>
    createMany?: EquipmentCreateManyTenantInputEnvelope
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentPropertyCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutTenantInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutTenantInput>
    createMany?: EquipmentPropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
  }

  export type EquipmentPropertyValueCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutTenantInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: EquipmentPropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type FeedbackCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutTenantInput>, Enumerable<FeedbackUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutTenantInput>
    createMany?: FeedbackCreateManyTenantInputEnvelope
    connect?: Enumerable<FeedbackWhereUniqueInput>
  }

  export type FileCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FileCreateWithoutTenantInput>, Enumerable<FileUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutTenantInput>
    createMany?: FileCreateManyTenantInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type FilePropertyCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutTenantInput>, Enumerable<FilePropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutTenantInput>
    createMany?: FilePropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<FilePropertyWhereUniqueInput>
  }

  export type FilePropertyValueCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutTenantInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: FilePropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type ImageCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ImageCreateWithoutTenantInput>, Enumerable<ImageUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutTenantInput>
    createMany?: ImageCreateManyTenantInputEnvelope
    connect?: Enumerable<ImageWhereUniqueInput>
  }

  export type LocationEntryCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutTenantInput>, Enumerable<LocationEntryUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutTenantInput>
    createMany?: LocationEntryCreateManyTenantInputEnvelope
    connect?: Enumerable<LocationEntryWhereUniqueInput>
  }

  export type ProjectCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutTenantInput>, Enumerable<ProjectUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutTenantInput>
    createMany?: ProjectCreateManyTenantInputEnvelope
    connect?: Enumerable<ProjectWhereUniqueInput>
  }

  export type ProjectPropertyCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutTenantInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutTenantInput>
    createMany?: ProjectPropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
  }

  export type ProjectPropertyValueCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutTenantInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: ProjectPropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type TaskCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTenantInput>, Enumerable<TaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTenantInput>
    createMany?: TaskCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type TaskPropertyCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutTenantInput>, Enumerable<TaskPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutTenantInput>
    createMany?: TaskPropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
  }

  export type TaskPropertyValueCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTenantInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: TaskPropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type TaskStatusCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutTenantInput>, Enumerable<TaskStatusUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutTenantInput>
    createMany?: TaskStatusCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskStatusWhereUniqueInput>
  }

  export type UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput = {
    create?: XOR<UserCreateWithoutTenant_Tenant_createdByToUserInput, UserUncheckedCreateWithoutTenant_Tenant_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenant_Tenant_createdByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantUserCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutTenantInput>, Enumerable<TenantUserUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutTenantInput>
    createMany?: TenantUserCreateManyTenantInputEnvelope
    connect?: Enumerable<TenantUserWhereUniqueInput>
  }

  export type TimeBlockCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutTenantInput>, Enumerable<TimeBlockUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutTenantInput>
    createMany?: TimeBlockCreateManyTenantInputEnvelope
    connect?: Enumerable<TimeBlockWhereUniqueInput>
  }

  export type UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput = {
    create?: XOR<Enumerable<UserCreateWithoutTenant_User_currentTenantIdToTenantInput>, Enumerable<UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutTenant_User_currentTenantIdToTenantInput>
    createMany?: UserCreateManyTenant_User_currentTenantIdToTenantInputEnvelope
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type UserTaskCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTenantInput>, Enumerable<UserTaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTenantInput>
    createMany?: UserTaskCreateManyTenantInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type ApiKeyUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutTenantInput>, Enumerable<ApiKeyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutTenantInput>
    createMany?: ApiKeyCreateManyTenantInputEnvelope
    connect?: Enumerable<ApiKeyWhereUniqueInput>
  }

  export type DailyLogUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutTenantInput>, Enumerable<DailyLogUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutTenantInput>
    createMany?: DailyLogCreateManyTenantInputEnvelope
    connect?: Enumerable<DailyLogWhereUniqueInput>
  }

  export type DailyLogItemUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTenantInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTenantInput>
    createMany?: DailyLogItemCreateManyTenantInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type EquipmentUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutTenantInput>, Enumerable<EquipmentUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutTenantInput>
    createMany?: EquipmentCreateManyTenantInputEnvelope
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutTenantInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutTenantInput>
    createMany?: EquipmentPropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
  }

  export type EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutTenantInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: EquipmentPropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type FeedbackUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutTenantInput>, Enumerable<FeedbackUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutTenantInput>
    createMany?: FeedbackCreateManyTenantInputEnvelope
    connect?: Enumerable<FeedbackWhereUniqueInput>
  }

  export type FileUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FileCreateWithoutTenantInput>, Enumerable<FileUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutTenantInput>
    createMany?: FileCreateManyTenantInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type FilePropertyUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutTenantInput>, Enumerable<FilePropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutTenantInput>
    createMany?: FilePropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<FilePropertyWhereUniqueInput>
  }

  export type FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutTenantInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: FilePropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type ImageUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ImageCreateWithoutTenantInput>, Enumerable<ImageUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutTenantInput>
    createMany?: ImageCreateManyTenantInputEnvelope
    connect?: Enumerable<ImageWhereUniqueInput>
  }

  export type LocationEntryUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutTenantInput>, Enumerable<LocationEntryUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutTenantInput>
    createMany?: LocationEntryCreateManyTenantInputEnvelope
    connect?: Enumerable<LocationEntryWhereUniqueInput>
  }

  export type ProjectUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutTenantInput>, Enumerable<ProjectUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutTenantInput>
    createMany?: ProjectCreateManyTenantInputEnvelope
    connect?: Enumerable<ProjectWhereUniqueInput>
  }

  export type ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutTenantInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutTenantInput>
    createMany?: ProjectPropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
  }

  export type ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutTenantInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: ProjectPropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type TaskUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTenantInput>, Enumerable<TaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTenantInput>
    createMany?: TaskCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type TaskPropertyUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutTenantInput>, Enumerable<TaskPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutTenantInput>
    createMany?: TaskPropertyCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
  }

  export type TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTenantInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTenantInput>
    createMany?: TaskPropertyValueCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type TaskStatusUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutTenantInput>, Enumerable<TaskStatusUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutTenantInput>
    createMany?: TaskStatusCreateManyTenantInputEnvelope
    connect?: Enumerable<TaskStatusWhereUniqueInput>
  }

  export type TenantUserUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutTenantInput>, Enumerable<TenantUserUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutTenantInput>
    createMany?: TenantUserCreateManyTenantInputEnvelope
    connect?: Enumerable<TenantUserWhereUniqueInput>
  }

  export type TimeBlockUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutTenantInput>, Enumerable<TimeBlockUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutTenantInput>
    createMany?: TimeBlockCreateManyTenantInputEnvelope
    connect?: Enumerable<TimeBlockWhereUniqueInput>
  }

  export type UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput = {
    create?: XOR<Enumerable<UserCreateWithoutTenant_User_currentTenantIdToTenantInput>, Enumerable<UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutTenant_User_currentTenantIdToTenantInput>
    createMany?: UserCreateManyTenant_User_currentTenantIdToTenantInputEnvelope
    connect?: Enumerable<UserWhereUniqueInput>
  }

  export type UserTaskUncheckedCreateNestedManyWithoutTenantInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTenantInput>, Enumerable<UserTaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTenantInput>
    createMany?: UserTaskCreateManyTenantInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type ApiKeyUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutTenantInput>, Enumerable<ApiKeyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ApiKeyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ApiKeyCreateManyTenantInputEnvelope
    set?: Enumerable<ApiKeyWhereUniqueInput>
    disconnect?: Enumerable<ApiKeyWhereUniqueInput>
    delete?: Enumerable<ApiKeyWhereUniqueInput>
    connect?: Enumerable<ApiKeyWhereUniqueInput>
    update?: Enumerable<ApiKeyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ApiKeyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ApiKeyScalarWhereInput>
  }

  export type DailyLogUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutTenantInput>, Enumerable<DailyLogUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<DailyLogUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: DailyLogCreateManyTenantInputEnvelope
    set?: Enumerable<DailyLogWhereUniqueInput>
    disconnect?: Enumerable<DailyLogWhereUniqueInput>
    delete?: Enumerable<DailyLogWhereUniqueInput>
    connect?: Enumerable<DailyLogWhereUniqueInput>
    update?: Enumerable<DailyLogUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<DailyLogUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<DailyLogScalarWhereInput>
  }

  export type DailyLogItemUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTenantInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: DailyLogItemCreateManyTenantInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type EquipmentUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutTenantInput>, Enumerable<EquipmentUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: EquipmentCreateManyTenantInputEnvelope
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentPropertyUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutTenantInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<EquipmentPropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: EquipmentPropertyCreateManyTenantInputEnvelope
    set?: Enumerable<EquipmentPropertyWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<EquipmentPropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<EquipmentPropertyScalarWhereInput>
  }

  export type EquipmentPropertyValueUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutTenantInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: EquipmentPropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type FeedbackUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutTenantInput>, Enumerable<FeedbackUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FeedbackUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FeedbackCreateManyTenantInputEnvelope
    set?: Enumerable<FeedbackWhereUniqueInput>
    disconnect?: Enumerable<FeedbackWhereUniqueInput>
    delete?: Enumerable<FeedbackWhereUniqueInput>
    connect?: Enumerable<FeedbackWhereUniqueInput>
    update?: Enumerable<FeedbackUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FeedbackUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FeedbackScalarWhereInput>
  }

  export type FileUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutTenantInput>, Enumerable<FileUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FileCreateManyTenantInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type FilePropertyUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutTenantInput>, Enumerable<FilePropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FilePropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FilePropertyCreateManyTenantInputEnvelope
    set?: Enumerable<FilePropertyWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyWhereUniqueInput>
    delete?: Enumerable<FilePropertyWhereUniqueInput>
    connect?: Enumerable<FilePropertyWhereUniqueInput>
    update?: Enumerable<FilePropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FilePropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FilePropertyScalarWhereInput>
  }

  export type FilePropertyValueUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutTenantInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FilePropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type ImageUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ImageCreateWithoutTenantInput>, Enumerable<ImageUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ImageUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ImageCreateManyTenantInputEnvelope
    set?: Enumerable<ImageWhereUniqueInput>
    disconnect?: Enumerable<ImageWhereUniqueInput>
    delete?: Enumerable<ImageWhereUniqueInput>
    connect?: Enumerable<ImageWhereUniqueInput>
    update?: Enumerable<ImageUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ImageUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ImageScalarWhereInput>
  }

  export type LocationEntryUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutTenantInput>, Enumerable<LocationEntryUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<LocationEntryUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: LocationEntryCreateManyTenantInputEnvelope
    set?: Enumerable<LocationEntryWhereUniqueInput>
    disconnect?: Enumerable<LocationEntryWhereUniqueInput>
    delete?: Enumerable<LocationEntryWhereUniqueInput>
    connect?: Enumerable<LocationEntryWhereUniqueInput>
    update?: Enumerable<LocationEntryUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<LocationEntryUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<LocationEntryScalarWhereInput>
  }

  export type ProjectUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutTenantInput>, Enumerable<ProjectUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ProjectUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ProjectCreateManyTenantInputEnvelope
    set?: Enumerable<ProjectWhereUniqueInput>
    disconnect?: Enumerable<ProjectWhereUniqueInput>
    delete?: Enumerable<ProjectWhereUniqueInput>
    connect?: Enumerable<ProjectWhereUniqueInput>
    update?: Enumerable<ProjectUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ProjectUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ProjectScalarWhereInput>
  }

  export type ProjectPropertyUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutTenantInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ProjectPropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ProjectPropertyCreateManyTenantInputEnvelope
    set?: Enumerable<ProjectPropertyWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
    update?: Enumerable<ProjectPropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ProjectPropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ProjectPropertyScalarWhereInput>
  }

  export type ProjectPropertyValueUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutTenantInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ProjectPropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type TaskUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTenantInput>, Enumerable<TaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskCreateManyTenantInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type TaskPropertyUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutTenantInput>, Enumerable<TaskPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskPropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskPropertyCreateManyTenantInputEnvelope
    set?: Enumerable<TaskPropertyWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyWhereUniqueInput>
    delete?: Enumerable<TaskPropertyWhereUniqueInput>
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
    update?: Enumerable<TaskPropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskPropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskPropertyScalarWhereInput>
  }

  export type TaskPropertyValueUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTenantInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskPropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type TaskStatusUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutTenantInput>, Enumerable<TaskStatusUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskStatusUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskStatusCreateManyTenantInputEnvelope
    set?: Enumerable<TaskStatusWhereUniqueInput>
    disconnect?: Enumerable<TaskStatusWhereUniqueInput>
    delete?: Enumerable<TaskStatusWhereUniqueInput>
    connect?: Enumerable<TaskStatusWhereUniqueInput>
    update?: Enumerable<TaskStatusUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskStatusUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskStatusScalarWhereInput>
  }

  export type UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput = {
    create?: XOR<UserCreateWithoutTenant_Tenant_createdByToUserInput, UserUncheckedCreateWithoutTenant_Tenant_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenant_Tenant_createdByToUserInput
    upsert?: UserUpsertWithoutTenant_Tenant_createdByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTenant_Tenant_createdByToUserInput, UserUncheckedUpdateWithoutTenant_Tenant_createdByToUserInput>
  }

  export type TenantUserUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutTenantInput>, Enumerable<TenantUserUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TenantUserUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TenantUserCreateManyTenantInputEnvelope
    set?: Enumerable<TenantUserWhereUniqueInput>
    disconnect?: Enumerable<TenantUserWhereUniqueInput>
    delete?: Enumerable<TenantUserWhereUniqueInput>
    connect?: Enumerable<TenantUserWhereUniqueInput>
    update?: Enumerable<TenantUserUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TenantUserUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TenantUserScalarWhereInput>
  }

  export type TimeBlockUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutTenantInput>, Enumerable<TimeBlockUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TimeBlockUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TimeBlockCreateManyTenantInputEnvelope
    set?: Enumerable<TimeBlockWhereUniqueInput>
    disconnect?: Enumerable<TimeBlockWhereUniqueInput>
    delete?: Enumerable<TimeBlockWhereUniqueInput>
    connect?: Enumerable<TimeBlockWhereUniqueInput>
    update?: Enumerable<TimeBlockUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TimeBlockUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TimeBlockScalarWhereInput>
  }

  export type UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutTenant_User_currentTenantIdToTenantInput>, Enumerable<UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutTenant_User_currentTenantIdToTenantInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutTenant_User_currentTenantIdToTenantInput>
    createMany?: UserCreateManyTenant_User_currentTenantIdToTenantInputEnvelope
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutTenant_User_currentTenantIdToTenantInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutTenant_User_currentTenantIdToTenantInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type UserTaskUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTenantInput>, Enumerable<UserTaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: UserTaskCreateManyTenantInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type ApiKeyUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutTenantInput>, Enumerable<ApiKeyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ApiKeyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ApiKeyCreateManyTenantInputEnvelope
    set?: Enumerable<ApiKeyWhereUniqueInput>
    disconnect?: Enumerable<ApiKeyWhereUniqueInput>
    delete?: Enumerable<ApiKeyWhereUniqueInput>
    connect?: Enumerable<ApiKeyWhereUniqueInput>
    update?: Enumerable<ApiKeyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ApiKeyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ApiKeyScalarWhereInput>
  }

  export type DailyLogUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutTenantInput>, Enumerable<DailyLogUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<DailyLogUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: DailyLogCreateManyTenantInputEnvelope
    set?: Enumerable<DailyLogWhereUniqueInput>
    disconnect?: Enumerable<DailyLogWhereUniqueInput>
    delete?: Enumerable<DailyLogWhereUniqueInput>
    connect?: Enumerable<DailyLogWhereUniqueInput>
    update?: Enumerable<DailyLogUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<DailyLogUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<DailyLogScalarWhereInput>
  }

  export type DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutTenantInput>, Enumerable<DailyLogItemUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: DailyLogItemCreateManyTenantInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type EquipmentUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutTenantInput>, Enumerable<EquipmentUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: EquipmentCreateManyTenantInputEnvelope
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutTenantInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<EquipmentPropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: EquipmentPropertyCreateManyTenantInputEnvelope
    set?: Enumerable<EquipmentPropertyWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<EquipmentPropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<EquipmentPropertyScalarWhereInput>
  }

  export type EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutTenantInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: EquipmentPropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type FeedbackUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutTenantInput>, Enumerable<FeedbackUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FeedbackUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FeedbackCreateManyTenantInputEnvelope
    set?: Enumerable<FeedbackWhereUniqueInput>
    disconnect?: Enumerable<FeedbackWhereUniqueInput>
    delete?: Enumerable<FeedbackWhereUniqueInput>
    connect?: Enumerable<FeedbackWhereUniqueInput>
    update?: Enumerable<FeedbackUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FeedbackUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FeedbackScalarWhereInput>
  }

  export type FileUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutTenantInput>, Enumerable<FileUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FileCreateManyTenantInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type FilePropertyUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutTenantInput>, Enumerable<FilePropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FilePropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FilePropertyCreateManyTenantInputEnvelope
    set?: Enumerable<FilePropertyWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyWhereUniqueInput>
    delete?: Enumerable<FilePropertyWhereUniqueInput>
    connect?: Enumerable<FilePropertyWhereUniqueInput>
    update?: Enumerable<FilePropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FilePropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FilePropertyScalarWhereInput>
  }

  export type FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutTenantInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: FilePropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type ImageUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ImageCreateWithoutTenantInput>, Enumerable<ImageUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ImageUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ImageCreateManyTenantInputEnvelope
    set?: Enumerable<ImageWhereUniqueInput>
    disconnect?: Enumerable<ImageWhereUniqueInput>
    delete?: Enumerable<ImageWhereUniqueInput>
    connect?: Enumerable<ImageWhereUniqueInput>
    update?: Enumerable<ImageUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ImageUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ImageScalarWhereInput>
  }

  export type LocationEntryUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutTenantInput>, Enumerable<LocationEntryUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<LocationEntryUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: LocationEntryCreateManyTenantInputEnvelope
    set?: Enumerable<LocationEntryWhereUniqueInput>
    disconnect?: Enumerable<LocationEntryWhereUniqueInput>
    delete?: Enumerable<LocationEntryWhereUniqueInput>
    connect?: Enumerable<LocationEntryWhereUniqueInput>
    update?: Enumerable<LocationEntryUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<LocationEntryUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<LocationEntryScalarWhereInput>
  }

  export type ProjectUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutTenantInput>, Enumerable<ProjectUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ProjectUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ProjectCreateManyTenantInputEnvelope
    set?: Enumerable<ProjectWhereUniqueInput>
    disconnect?: Enumerable<ProjectWhereUniqueInput>
    delete?: Enumerable<ProjectWhereUniqueInput>
    connect?: Enumerable<ProjectWhereUniqueInput>
    update?: Enumerable<ProjectUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ProjectUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ProjectScalarWhereInput>
  }

  export type ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutTenantInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ProjectPropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ProjectPropertyCreateManyTenantInputEnvelope
    set?: Enumerable<ProjectPropertyWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
    update?: Enumerable<ProjectPropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ProjectPropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ProjectPropertyScalarWhereInput>
  }

  export type ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutTenantInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: ProjectPropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type TaskUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutTenantInput>, Enumerable<TaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskCreateManyTenantInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutTenantInput>, Enumerable<TaskPropertyUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskPropertyUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskPropertyCreateManyTenantInputEnvelope
    set?: Enumerable<TaskPropertyWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyWhereUniqueInput>
    delete?: Enumerable<TaskPropertyWhereUniqueInput>
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
    update?: Enumerable<TaskPropertyUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskPropertyUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskPropertyScalarWhereInput>
  }

  export type TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutTenantInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskPropertyValueCreateManyTenantInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type TaskStatusUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutTenantInput>, Enumerable<TaskStatusUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TaskStatusUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TaskStatusCreateManyTenantInputEnvelope
    set?: Enumerable<TaskStatusWhereUniqueInput>
    disconnect?: Enumerable<TaskStatusWhereUniqueInput>
    delete?: Enumerable<TaskStatusWhereUniqueInput>
    connect?: Enumerable<TaskStatusWhereUniqueInput>
    update?: Enumerable<TaskStatusUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TaskStatusUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TaskStatusScalarWhereInput>
  }

  export type TenantUserUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutTenantInput>, Enumerable<TenantUserUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TenantUserUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TenantUserCreateManyTenantInputEnvelope
    set?: Enumerable<TenantUserWhereUniqueInput>
    disconnect?: Enumerable<TenantUserWhereUniqueInput>
    delete?: Enumerable<TenantUserWhereUniqueInput>
    connect?: Enumerable<TenantUserWhereUniqueInput>
    update?: Enumerable<TenantUserUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TenantUserUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TenantUserScalarWhereInput>
  }

  export type TimeBlockUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutTenantInput>, Enumerable<TimeBlockUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<TimeBlockUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: TimeBlockCreateManyTenantInputEnvelope
    set?: Enumerable<TimeBlockWhereUniqueInput>
    disconnect?: Enumerable<TimeBlockWhereUniqueInput>
    delete?: Enumerable<TimeBlockWhereUniqueInput>
    connect?: Enumerable<TimeBlockWhereUniqueInput>
    update?: Enumerable<TimeBlockUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<TimeBlockUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<TimeBlockScalarWhereInput>
  }

  export type UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput = {
    create?: XOR<Enumerable<UserCreateWithoutTenant_User_currentTenantIdToTenantInput>, Enumerable<UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput>>
    connectOrCreate?: Enumerable<UserCreateOrConnectWithoutTenant_User_currentTenantIdToTenantInput>
    upsert?: Enumerable<UserUpsertWithWhereUniqueWithoutTenant_User_currentTenantIdToTenantInput>
    createMany?: UserCreateManyTenant_User_currentTenantIdToTenantInputEnvelope
    set?: Enumerable<UserWhereUniqueInput>
    disconnect?: Enumerable<UserWhereUniqueInput>
    delete?: Enumerable<UserWhereUniqueInput>
    connect?: Enumerable<UserWhereUniqueInput>
    update?: Enumerable<UserUpdateWithWhereUniqueWithoutTenant_User_currentTenantIdToTenantInput>
    updateMany?: Enumerable<UserUpdateManyWithWhereWithoutTenant_User_currentTenantIdToTenantInput>
    deleteMany?: Enumerable<UserScalarWhereInput>
  }

  export type UserTaskUncheckedUpdateManyWithoutTenantNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutTenantInput>, Enumerable<UserTaskUncheckedCreateWithoutTenantInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutTenantInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutTenantInput>
    createMany?: UserTaskCreateManyTenantInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutTenantInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutTenantInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutTenantUser_TenantUser_createdByToUserInput = {
    create?: XOR<UserCreateWithoutTenantUser_TenantUser_createdByToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenantUser_TenantUser_createdByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutTenantUserInput = {
    create?: XOR<TenantCreateWithoutTenantUserInput, TenantUncheckedCreateWithoutTenantUserInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTenantUserInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTenantUser_TenantUser_userIdToUserInput = {
    create?: XOR<UserCreateWithoutTenantUser_TenantUser_userIdToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenantUser_TenantUser_userIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutTenantUser_TenantUser_createdByToUserNestedInput = {
    create?: XOR<UserCreateWithoutTenantUser_TenantUser_createdByToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenantUser_TenantUser_createdByToUserInput
    upsert?: UserUpsertWithoutTenantUser_TenantUser_createdByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTenantUser_TenantUser_createdByToUserInput, UserUncheckedUpdateWithoutTenantUser_TenantUser_createdByToUserInput>
  }

  export type TenantUpdateOneRequiredWithoutTenantUserNestedInput = {
    create?: XOR<TenantCreateWithoutTenantUserInput, TenantUncheckedCreateWithoutTenantUserInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTenantUserInput
    upsert?: TenantUpsertWithoutTenantUserInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutTenantUserInput, TenantUncheckedUpdateWithoutTenantUserInput>
  }

  export type UserUpdateOneWithoutTenantUser_TenantUser_userIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutTenantUser_TenantUser_userIdToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutTenantUser_TenantUser_userIdToUserInput
    upsert?: UserUpsertWithoutTenantUser_TenantUser_userIdToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTenantUser_TenantUser_userIdToUserInput, UserUncheckedUpdateWithoutTenantUser_TenantUser_userIdToUserInput>
  }

  export type UserCreateNestedOneWithoutTimeBlockInput = {
    create?: XOR<UserCreateWithoutTimeBlockInput, UserUncheckedCreateWithoutTimeBlockInput>
    connectOrCreate?: UserCreateOrConnectWithoutTimeBlockInput
    connect?: UserWhereUniqueInput
  }

  export type DailyLogItemCreateNestedOneWithoutTimeBlockInput = {
    create?: XOR<DailyLogItemCreateWithoutTimeBlockInput, DailyLogItemUncheckedCreateWithoutTimeBlockInput>
    connectOrCreate?: DailyLogItemCreateOrConnectWithoutTimeBlockInput
    connect?: DailyLogItemWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutTimeBlockInput = {
    create?: XOR<TenantCreateWithoutTimeBlockInput, TenantUncheckedCreateWithoutTimeBlockInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTimeBlockInput
    connect?: TenantWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutTimeBlockNestedInput = {
    create?: XOR<UserCreateWithoutTimeBlockInput, UserUncheckedCreateWithoutTimeBlockInput>
    connectOrCreate?: UserCreateOrConnectWithoutTimeBlockInput
    upsert?: UserUpsertWithoutTimeBlockInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutTimeBlockInput, UserUncheckedUpdateWithoutTimeBlockInput>
  }

  export type DailyLogItemUpdateOneRequiredWithoutTimeBlockNestedInput = {
    create?: XOR<DailyLogItemCreateWithoutTimeBlockInput, DailyLogItemUncheckedCreateWithoutTimeBlockInput>
    connectOrCreate?: DailyLogItemCreateOrConnectWithoutTimeBlockInput
    upsert?: DailyLogItemUpsertWithoutTimeBlockInput
    connect?: DailyLogItemWhereUniqueInput
    update?: XOR<DailyLogItemUpdateWithoutTimeBlockInput, DailyLogItemUncheckedUpdateWithoutTimeBlockInput>
  }

  export type TenantUpdateOneRequiredWithoutTimeBlockNestedInput = {
    create?: XOR<TenantCreateWithoutTimeBlockInput, TenantUncheckedCreateWithoutTimeBlockInput>
    connectOrCreate?: TenantCreateOrConnectWithoutTimeBlockInput
    upsert?: TenantUpsertWithoutTimeBlockInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutTimeBlockInput, TenantUncheckedUpdateWithoutTimeBlockInput>
  }

  export type ApiKeyCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutUserInput>, Enumerable<ApiKeyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutUserInput>
    createMany?: ApiKeyCreateManyUserInputEnvelope
    connect?: Enumerable<ApiKeyWhereUniqueInput>
  }

  export type DailyLogCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutUserInput>, Enumerable<DailyLogUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutUserInput>
    createMany?: DailyLogCreateManyUserInputEnvelope
    connect?: Enumerable<DailyLogWhereUniqueInput>
  }

  export type DailyLogItemCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutUserInput>, Enumerable<DailyLogItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutUserInput>
    createMany?: DailyLogItemCreateManyUserInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_createdByToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_createdByToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_createdByToUserInputEnvelope
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_userIdToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_userIdToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_userIdToUserInputEnvelope
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentPropertyCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutUserInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutUserInput>
    createMany?: EquipmentPropertyCreateManyUserInputEnvelope
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
  }

  export type EquipmentPropertyValueCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutUserInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutUserInput>
    createMany?: EquipmentPropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type FeedbackCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutUserInput>, Enumerable<FeedbackUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutUserInput>
    createMany?: FeedbackCreateManyUserInputEnvelope
    connect?: Enumerable<FeedbackWhereUniqueInput>
  }

  export type FileCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FileCreateWithoutUserInput>, Enumerable<FileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutUserInput>
    createMany?: FileCreateManyUserInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type FilePropertyCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutUserInput>, Enumerable<FilePropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutUserInput>
    createMany?: FilePropertyCreateManyUserInputEnvelope
    connect?: Enumerable<FilePropertyWhereUniqueInput>
  }

  export type FilePropertyValueCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutUserInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutUserInput>
    createMany?: FilePropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type ImageCreateNestedManyWithoutUser_Image_createdByToUserInput = {
    create?: XOR<Enumerable<ImageCreateWithoutUser_Image_createdByToUserInput>, Enumerable<ImageUncheckedCreateWithoutUser_Image_createdByToUserInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutUser_Image_createdByToUserInput>
    createMany?: ImageCreateManyUser_Image_createdByToUserInputEnvelope
    connect?: Enumerable<ImageWhereUniqueInput>
  }

  export type LocationEntryCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutUserInput>, Enumerable<LocationEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutUserInput>
    createMany?: LocationEntryCreateManyUserInputEnvelope
    connect?: Enumerable<LocationEntryWhereUniqueInput>
  }

  export type ProjectCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutUserInput>, Enumerable<ProjectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutUserInput>
    createMany?: ProjectCreateManyUserInputEnvelope
    connect?: Enumerable<ProjectWhereUniqueInput>
  }

  export type ProjectPropertyCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutUserInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutUserInput>
    createMany?: ProjectPropertyCreateManyUserInputEnvelope
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
  }

  export type ProjectPropertyValueCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutUserInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutUserInput>
    createMany?: ProjectPropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type TaskCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskCreateWithoutUserInput>, Enumerable<TaskUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutUserInput>
    createMany?: TaskCreateManyUserInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type TaskPropertyCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutUserInput>, Enumerable<TaskPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutUserInput>
    createMany?: TaskPropertyCreateManyUserInputEnvelope
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
  }

  export type TaskPropertyValueCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutUserInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutUserInput>
    createMany?: TaskPropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type TaskStatusCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutUserInput>, Enumerable<TaskStatusUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutUserInput>
    createMany?: TaskStatusCreateManyUserInputEnvelope
    connect?: Enumerable<TaskStatusWhereUniqueInput>
  }

  export type TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput = {
    create?: XOR<Enumerable<TenantCreateWithoutUser_Tenant_createdByToUserInput>, Enumerable<TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantCreateOrConnectWithoutUser_Tenant_createdByToUserInput>
    createMany?: TenantCreateManyUser_Tenant_createdByToUserInputEnvelope
    connect?: Enumerable<TenantWhereUniqueInput>
  }

  export type TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_createdByToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_createdByToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_createdByToUserInputEnvelope
    connect?: Enumerable<TenantUserWhereUniqueInput>
  }

  export type TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_userIdToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_userIdToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_userIdToUserInputEnvelope
    connect?: Enumerable<TenantUserWhereUniqueInput>
  }

  export type TimeBlockCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutUserInput>, Enumerable<TimeBlockUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutUserInput>
    createMany?: TimeBlockCreateManyUserInputEnvelope
    connect?: Enumerable<TimeBlockWhereUniqueInput>
  }

  export type TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput = {
    create?: XOR<TenantCreateWithoutUser_User_currentTenantIdToTenantInput, TenantUncheckedCreateWithoutUser_User_currentTenantIdToTenantInput>
    connectOrCreate?: TenantCreateOrConnectWithoutUser_User_currentTenantIdToTenantInput
    connect?: TenantWhereUniqueInput
  }

  export type ImageCreateNestedOneWithoutUser_User_imageIdToImageInput = {
    create?: XOR<ImageCreateWithoutUser_User_imageIdToImageInput, ImageUncheckedCreateWithoutUser_User_imageIdToImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutUser_User_imageIdToImageInput
    connect?: ImageWhereUniqueInput
  }

  export type UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_createdByToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_createdByToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_createdByToUserInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_userIdToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_userIdToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_userIdToUserInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type ApiKeyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutUserInput>, Enumerable<ApiKeyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutUserInput>
    createMany?: ApiKeyCreateManyUserInputEnvelope
    connect?: Enumerable<ApiKeyWhereUniqueInput>
  }

  export type DailyLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutUserInput>, Enumerable<DailyLogUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutUserInput>
    createMany?: DailyLogCreateManyUserInputEnvelope
    connect?: Enumerable<DailyLogWhereUniqueInput>
  }

  export type DailyLogItemUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutUserInput>, Enumerable<DailyLogItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutUserInput>
    createMany?: DailyLogItemCreateManyUserInputEnvelope
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
  }

  export type EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_createdByToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_createdByToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_createdByToUserInputEnvelope
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_userIdToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_userIdToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_userIdToUserInputEnvelope
    connect?: Enumerable<EquipmentWhereUniqueInput>
  }

  export type EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutUserInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutUserInput>
    createMany?: EquipmentPropertyCreateManyUserInputEnvelope
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
  }

  export type EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutUserInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutUserInput>
    createMany?: EquipmentPropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
  }

  export type FeedbackUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutUserInput>, Enumerable<FeedbackUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutUserInput>
    createMany?: FeedbackCreateManyUserInputEnvelope
    connect?: Enumerable<FeedbackWhereUniqueInput>
  }

  export type FileUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FileCreateWithoutUserInput>, Enumerable<FileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutUserInput>
    createMany?: FileCreateManyUserInputEnvelope
    connect?: Enumerable<FileWhereUniqueInput>
  }

  export type FilePropertyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutUserInput>, Enumerable<FilePropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutUserInput>
    createMany?: FilePropertyCreateManyUserInputEnvelope
    connect?: Enumerable<FilePropertyWhereUniqueInput>
  }

  export type FilePropertyValueUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutUserInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutUserInput>
    createMany?: FilePropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
  }

  export type ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput = {
    create?: XOR<Enumerable<ImageCreateWithoutUser_Image_createdByToUserInput>, Enumerable<ImageUncheckedCreateWithoutUser_Image_createdByToUserInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutUser_Image_createdByToUserInput>
    createMany?: ImageCreateManyUser_Image_createdByToUserInputEnvelope
    connect?: Enumerable<ImageWhereUniqueInput>
  }

  export type LocationEntryUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutUserInput>, Enumerable<LocationEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutUserInput>
    createMany?: LocationEntryCreateManyUserInputEnvelope
    connect?: Enumerable<LocationEntryWhereUniqueInput>
  }

  export type ProjectUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutUserInput>, Enumerable<ProjectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutUserInput>
    createMany?: ProjectCreateManyUserInputEnvelope
    connect?: Enumerable<ProjectWhereUniqueInput>
  }

  export type ProjectPropertyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutUserInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutUserInput>
    createMany?: ProjectPropertyCreateManyUserInputEnvelope
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
  }

  export type ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutUserInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutUserInput>
    createMany?: ProjectPropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
  }

  export type TaskUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskCreateWithoutUserInput>, Enumerable<TaskUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutUserInput>
    createMany?: TaskCreateManyUserInputEnvelope
    connect?: Enumerable<TaskWhereUniqueInput>
  }

  export type TaskPropertyUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutUserInput>, Enumerable<TaskPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutUserInput>
    createMany?: TaskPropertyCreateManyUserInputEnvelope
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
  }

  export type TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutUserInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutUserInput>
    createMany?: TaskPropertyValueCreateManyUserInputEnvelope
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
  }

  export type TaskStatusUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutUserInput>, Enumerable<TaskStatusUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutUserInput>
    createMany?: TaskStatusCreateManyUserInputEnvelope
    connect?: Enumerable<TaskStatusWhereUniqueInput>
  }

  export type TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput = {
    create?: XOR<Enumerable<TenantCreateWithoutUser_Tenant_createdByToUserInput>, Enumerable<TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantCreateOrConnectWithoutUser_Tenant_createdByToUserInput>
    createMany?: TenantCreateManyUser_Tenant_createdByToUserInputEnvelope
    connect?: Enumerable<TenantWhereUniqueInput>
  }

  export type TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_createdByToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_createdByToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_createdByToUserInputEnvelope
    connect?: Enumerable<TenantUserWhereUniqueInput>
  }

  export type TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_userIdToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_userIdToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_userIdToUserInputEnvelope
    connect?: Enumerable<TenantUserWhereUniqueInput>
  }

  export type TimeBlockUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutUserInput>, Enumerable<TimeBlockUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutUserInput>
    createMany?: TimeBlockCreateManyUserInputEnvelope
    connect?: Enumerable<TimeBlockWhereUniqueInput>
  }

  export type UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_createdByToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_createdByToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_createdByToUserInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_userIdToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_userIdToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_userIdToUserInputEnvelope
    connect?: Enumerable<UserTaskWhereUniqueInput>
  }

  export type ApiKeyUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutUserInput>, Enumerable<ApiKeyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ApiKeyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ApiKeyCreateManyUserInputEnvelope
    set?: Enumerable<ApiKeyWhereUniqueInput>
    disconnect?: Enumerable<ApiKeyWhereUniqueInput>
    delete?: Enumerable<ApiKeyWhereUniqueInput>
    connect?: Enumerable<ApiKeyWhereUniqueInput>
    update?: Enumerable<ApiKeyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ApiKeyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ApiKeyScalarWhereInput>
  }

  export type DailyLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutUserInput>, Enumerable<DailyLogUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<DailyLogUpsertWithWhereUniqueWithoutUserInput>
    createMany?: DailyLogCreateManyUserInputEnvelope
    set?: Enumerable<DailyLogWhereUniqueInput>
    disconnect?: Enumerable<DailyLogWhereUniqueInput>
    delete?: Enumerable<DailyLogWhereUniqueInput>
    connect?: Enumerable<DailyLogWhereUniqueInput>
    update?: Enumerable<DailyLogUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<DailyLogUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<DailyLogScalarWhereInput>
  }

  export type DailyLogItemUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutUserInput>, Enumerable<DailyLogItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutUserInput>
    createMany?: DailyLogItemCreateManyUserInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_createdByToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_createdByToUserInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutUser_Equipment_createdByToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_createdByToUserInputEnvelope
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutUser_Equipment_createdByToUserInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutUser_Equipment_createdByToUserInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_userIdToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_userIdToUserInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutUser_Equipment_userIdToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_userIdToUserInputEnvelope
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutUser_Equipment_userIdToUserInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutUser_Equipment_userIdToUserInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentPropertyUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutUserInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<EquipmentPropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: EquipmentPropertyCreateManyUserInputEnvelope
    set?: Enumerable<EquipmentPropertyWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<EquipmentPropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<EquipmentPropertyScalarWhereInput>
  }

  export type EquipmentPropertyValueUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutUserInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: EquipmentPropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type FeedbackUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutUserInput>, Enumerable<FeedbackUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FeedbackUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FeedbackCreateManyUserInputEnvelope
    set?: Enumerable<FeedbackWhereUniqueInput>
    disconnect?: Enumerable<FeedbackWhereUniqueInput>
    delete?: Enumerable<FeedbackWhereUniqueInput>
    connect?: Enumerable<FeedbackWhereUniqueInput>
    update?: Enumerable<FeedbackUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FeedbackUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FeedbackScalarWhereInput>
  }

  export type FileUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutUserInput>, Enumerable<FileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FileCreateManyUserInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type FilePropertyUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutUserInput>, Enumerable<FilePropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FilePropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FilePropertyCreateManyUserInputEnvelope
    set?: Enumerable<FilePropertyWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyWhereUniqueInput>
    delete?: Enumerable<FilePropertyWhereUniqueInput>
    connect?: Enumerable<FilePropertyWhereUniqueInput>
    update?: Enumerable<FilePropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FilePropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FilePropertyScalarWhereInput>
  }

  export type FilePropertyValueUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutUserInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FilePropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput = {
    create?: XOR<Enumerable<ImageCreateWithoutUser_Image_createdByToUserInput>, Enumerable<ImageUncheckedCreateWithoutUser_Image_createdByToUserInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutUser_Image_createdByToUserInput>
    upsert?: Enumerable<ImageUpsertWithWhereUniqueWithoutUser_Image_createdByToUserInput>
    createMany?: ImageCreateManyUser_Image_createdByToUserInputEnvelope
    set?: Enumerable<ImageWhereUniqueInput>
    disconnect?: Enumerable<ImageWhereUniqueInput>
    delete?: Enumerable<ImageWhereUniqueInput>
    connect?: Enumerable<ImageWhereUniqueInput>
    update?: Enumerable<ImageUpdateWithWhereUniqueWithoutUser_Image_createdByToUserInput>
    updateMany?: Enumerable<ImageUpdateManyWithWhereWithoutUser_Image_createdByToUserInput>
    deleteMany?: Enumerable<ImageScalarWhereInput>
  }

  export type LocationEntryUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutUserInput>, Enumerable<LocationEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LocationEntryUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LocationEntryCreateManyUserInputEnvelope
    set?: Enumerable<LocationEntryWhereUniqueInput>
    disconnect?: Enumerable<LocationEntryWhereUniqueInput>
    delete?: Enumerable<LocationEntryWhereUniqueInput>
    connect?: Enumerable<LocationEntryWhereUniqueInput>
    update?: Enumerable<LocationEntryUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LocationEntryUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LocationEntryScalarWhereInput>
  }

  export type ProjectUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutUserInput>, Enumerable<ProjectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProjectUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProjectCreateManyUserInputEnvelope
    set?: Enumerable<ProjectWhereUniqueInput>
    disconnect?: Enumerable<ProjectWhereUniqueInput>
    delete?: Enumerable<ProjectWhereUniqueInput>
    connect?: Enumerable<ProjectWhereUniqueInput>
    update?: Enumerable<ProjectUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProjectUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProjectScalarWhereInput>
  }

  export type ProjectPropertyUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutUserInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProjectPropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProjectPropertyCreateManyUserInputEnvelope
    set?: Enumerable<ProjectPropertyWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
    update?: Enumerable<ProjectPropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProjectPropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProjectPropertyScalarWhereInput>
  }

  export type ProjectPropertyValueUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutUserInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProjectPropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type TaskUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutUserInput>, Enumerable<TaskUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskCreateManyUserInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type TaskPropertyUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutUserInput>, Enumerable<TaskPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskPropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskPropertyCreateManyUserInputEnvelope
    set?: Enumerable<TaskPropertyWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyWhereUniqueInput>
    delete?: Enumerable<TaskPropertyWhereUniqueInput>
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
    update?: Enumerable<TaskPropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskPropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskPropertyScalarWhereInput>
  }

  export type TaskPropertyValueUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutUserInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskPropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type TaskStatusUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutUserInput>, Enumerable<TaskStatusUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskStatusUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskStatusCreateManyUserInputEnvelope
    set?: Enumerable<TaskStatusWhereUniqueInput>
    disconnect?: Enumerable<TaskStatusWhereUniqueInput>
    delete?: Enumerable<TaskStatusWhereUniqueInput>
    connect?: Enumerable<TaskStatusWhereUniqueInput>
    update?: Enumerable<TaskStatusUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskStatusUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskStatusScalarWhereInput>
  }

  export type TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput = {
    create?: XOR<Enumerable<TenantCreateWithoutUser_Tenant_createdByToUserInput>, Enumerable<TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantCreateOrConnectWithoutUser_Tenant_createdByToUserInput>
    upsert?: Enumerable<TenantUpsertWithWhereUniqueWithoutUser_Tenant_createdByToUserInput>
    createMany?: TenantCreateManyUser_Tenant_createdByToUserInputEnvelope
    set?: Enumerable<TenantWhereUniqueInput>
    disconnect?: Enumerable<TenantWhereUniqueInput>
    delete?: Enumerable<TenantWhereUniqueInput>
    connect?: Enumerable<TenantWhereUniqueInput>
    update?: Enumerable<TenantUpdateWithWhereUniqueWithoutUser_Tenant_createdByToUserInput>
    updateMany?: Enumerable<TenantUpdateManyWithWhereWithoutUser_Tenant_createdByToUserInput>
    deleteMany?: Enumerable<TenantScalarWhereInput>
  }

  export type TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_createdByToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_createdByToUserInput>
    upsert?: Enumerable<TenantUserUpsertWithWhereUniqueWithoutUser_TenantUser_createdByToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_createdByToUserInputEnvelope
    set?: Enumerable<TenantUserWhereUniqueInput>
    disconnect?: Enumerable<TenantUserWhereUniqueInput>
    delete?: Enumerable<TenantUserWhereUniqueInput>
    connect?: Enumerable<TenantUserWhereUniqueInput>
    update?: Enumerable<TenantUserUpdateWithWhereUniqueWithoutUser_TenantUser_createdByToUserInput>
    updateMany?: Enumerable<TenantUserUpdateManyWithWhereWithoutUser_TenantUser_createdByToUserInput>
    deleteMany?: Enumerable<TenantUserScalarWhereInput>
  }

  export type TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_userIdToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_userIdToUserInput>
    upsert?: Enumerable<TenantUserUpsertWithWhereUniqueWithoutUser_TenantUser_userIdToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_userIdToUserInputEnvelope
    set?: Enumerable<TenantUserWhereUniqueInput>
    disconnect?: Enumerable<TenantUserWhereUniqueInput>
    delete?: Enumerable<TenantUserWhereUniqueInput>
    connect?: Enumerable<TenantUserWhereUniqueInput>
    update?: Enumerable<TenantUserUpdateWithWhereUniqueWithoutUser_TenantUser_userIdToUserInput>
    updateMany?: Enumerable<TenantUserUpdateManyWithWhereWithoutUser_TenantUser_userIdToUserInput>
    deleteMany?: Enumerable<TenantUserScalarWhereInput>
  }

  export type TimeBlockUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutUserInput>, Enumerable<TimeBlockUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TimeBlockUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TimeBlockCreateManyUserInputEnvelope
    set?: Enumerable<TimeBlockWhereUniqueInput>
    disconnect?: Enumerable<TimeBlockWhereUniqueInput>
    delete?: Enumerable<TimeBlockWhereUniqueInput>
    connect?: Enumerable<TimeBlockWhereUniqueInput>
    update?: Enumerable<TimeBlockUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TimeBlockUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TimeBlockScalarWhereInput>
  }

  export type TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput = {
    create?: XOR<TenantCreateWithoutUser_User_currentTenantIdToTenantInput, TenantUncheckedCreateWithoutUser_User_currentTenantIdToTenantInput>
    connectOrCreate?: TenantCreateOrConnectWithoutUser_User_currentTenantIdToTenantInput
    upsert?: TenantUpsertWithoutUser_User_currentTenantIdToTenantInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutUser_User_currentTenantIdToTenantInput, TenantUncheckedUpdateWithoutUser_User_currentTenantIdToTenantInput>
  }

  export type ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput = {
    create?: XOR<ImageCreateWithoutUser_User_imageIdToImageInput, ImageUncheckedCreateWithoutUser_User_imageIdToImageInput>
    connectOrCreate?: ImageCreateOrConnectWithoutUser_User_imageIdToImageInput
    upsert?: ImageUpsertWithoutUser_User_imageIdToImageInput
    disconnect?: boolean
    delete?: boolean
    connect?: ImageWhereUniqueInput
    update?: XOR<ImageUpdateWithoutUser_User_imageIdToImageInput, ImageUncheckedUpdateWithoutUser_User_imageIdToImageInput>
  }

  export type UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_createdByToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_createdByToUserInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutUser_UserTask_createdByToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_createdByToUserInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutUser_UserTask_createdByToUserInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutUser_UserTask_createdByToUserInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_userIdToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_userIdToUserInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutUser_UserTask_userIdToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_userIdToUserInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutUser_UserTask_userIdToUserInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutUser_UserTask_userIdToUserInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type ApiKeyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ApiKeyCreateWithoutUserInput>, Enumerable<ApiKeyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ApiKeyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ApiKeyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ApiKeyCreateManyUserInputEnvelope
    set?: Enumerable<ApiKeyWhereUniqueInput>
    disconnect?: Enumerable<ApiKeyWhereUniqueInput>
    delete?: Enumerable<ApiKeyWhereUniqueInput>
    connect?: Enumerable<ApiKeyWhereUniqueInput>
    update?: Enumerable<ApiKeyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ApiKeyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ApiKeyScalarWhereInput>
  }

  export type DailyLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<DailyLogCreateWithoutUserInput>, Enumerable<DailyLogUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<DailyLogUpsertWithWhereUniqueWithoutUserInput>
    createMany?: DailyLogCreateManyUserInputEnvelope
    set?: Enumerable<DailyLogWhereUniqueInput>
    disconnect?: Enumerable<DailyLogWhereUniqueInput>
    delete?: Enumerable<DailyLogWhereUniqueInput>
    connect?: Enumerable<DailyLogWhereUniqueInput>
    update?: Enumerable<DailyLogUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<DailyLogUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<DailyLogScalarWhereInput>
  }

  export type DailyLogItemUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<DailyLogItemCreateWithoutUserInput>, Enumerable<DailyLogItemUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<DailyLogItemCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<DailyLogItemUpsertWithWhereUniqueWithoutUserInput>
    createMany?: DailyLogItemCreateManyUserInputEnvelope
    set?: Enumerable<DailyLogItemWhereUniqueInput>
    disconnect?: Enumerable<DailyLogItemWhereUniqueInput>
    delete?: Enumerable<DailyLogItemWhereUniqueInput>
    connect?: Enumerable<DailyLogItemWhereUniqueInput>
    update?: Enumerable<DailyLogItemUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<DailyLogItemUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<DailyLogItemScalarWhereInput>
  }

  export type EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_createdByToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_createdByToUserInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutUser_Equipment_createdByToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_createdByToUserInputEnvelope
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutUser_Equipment_createdByToUserInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutUser_Equipment_createdByToUserInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput = {
    create?: XOR<Enumerable<EquipmentCreateWithoutUser_Equipment_userIdToUserInput>, Enumerable<EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput>>
    connectOrCreate?: Enumerable<EquipmentCreateOrConnectWithoutUser_Equipment_userIdToUserInput>
    upsert?: Enumerable<EquipmentUpsertWithWhereUniqueWithoutUser_Equipment_userIdToUserInput>
    createMany?: EquipmentCreateManyUser_Equipment_userIdToUserInputEnvelope
    set?: Enumerable<EquipmentWhereUniqueInput>
    disconnect?: Enumerable<EquipmentWhereUniqueInput>
    delete?: Enumerable<EquipmentWhereUniqueInput>
    connect?: Enumerable<EquipmentWhereUniqueInput>
    update?: Enumerable<EquipmentUpdateWithWhereUniqueWithoutUser_Equipment_userIdToUserInput>
    updateMany?: Enumerable<EquipmentUpdateManyWithWhereWithoutUser_Equipment_userIdToUserInput>
    deleteMany?: Enumerable<EquipmentScalarWhereInput>
  }

  export type EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyCreateWithoutUserInput>, Enumerable<EquipmentPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<EquipmentPropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: EquipmentPropertyCreateManyUserInputEnvelope
    set?: Enumerable<EquipmentPropertyWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<EquipmentPropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<EquipmentPropertyScalarWhereInput>
  }

  export type EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<EquipmentPropertyValueCreateWithoutUserInput>, Enumerable<EquipmentPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<EquipmentPropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<EquipmentPropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: EquipmentPropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    delete?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    connect?: Enumerable<EquipmentPropertyValueWhereUniqueInput>
    update?: Enumerable<EquipmentPropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<EquipmentPropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<EquipmentPropertyValueScalarWhereInput>
  }

  export type FeedbackUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FeedbackCreateWithoutUserInput>, Enumerable<FeedbackUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FeedbackCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FeedbackUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FeedbackCreateManyUserInputEnvelope
    set?: Enumerable<FeedbackWhereUniqueInput>
    disconnect?: Enumerable<FeedbackWhereUniqueInput>
    delete?: Enumerable<FeedbackWhereUniqueInput>
    connect?: Enumerable<FeedbackWhereUniqueInput>
    update?: Enumerable<FeedbackUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FeedbackUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FeedbackScalarWhereInput>
  }

  export type FileUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FileCreateWithoutUserInput>, Enumerable<FileUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FileCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FileUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FileCreateManyUserInputEnvelope
    set?: Enumerable<FileWhereUniqueInput>
    disconnect?: Enumerable<FileWhereUniqueInput>
    delete?: Enumerable<FileWhereUniqueInput>
    connect?: Enumerable<FileWhereUniqueInput>
    update?: Enumerable<FileUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FileUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FileScalarWhereInput>
  }

  export type FilePropertyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FilePropertyCreateWithoutUserInput>, Enumerable<FilePropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FilePropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FilePropertyCreateManyUserInputEnvelope
    set?: Enumerable<FilePropertyWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyWhereUniqueInput>
    delete?: Enumerable<FilePropertyWhereUniqueInput>
    connect?: Enumerable<FilePropertyWhereUniqueInput>
    update?: Enumerable<FilePropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FilePropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FilePropertyScalarWhereInput>
  }

  export type FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<FilePropertyValueCreateWithoutUserInput>, Enumerable<FilePropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<FilePropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<FilePropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: FilePropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<FilePropertyValueWhereUniqueInput>
    disconnect?: Enumerable<FilePropertyValueWhereUniqueInput>
    delete?: Enumerable<FilePropertyValueWhereUniqueInput>
    connect?: Enumerable<FilePropertyValueWhereUniqueInput>
    update?: Enumerable<FilePropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<FilePropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<FilePropertyValueScalarWhereInput>
  }

  export type ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput = {
    create?: XOR<Enumerable<ImageCreateWithoutUser_Image_createdByToUserInput>, Enumerable<ImageUncheckedCreateWithoutUser_Image_createdByToUserInput>>
    connectOrCreate?: Enumerable<ImageCreateOrConnectWithoutUser_Image_createdByToUserInput>
    upsert?: Enumerable<ImageUpsertWithWhereUniqueWithoutUser_Image_createdByToUserInput>
    createMany?: ImageCreateManyUser_Image_createdByToUserInputEnvelope
    set?: Enumerable<ImageWhereUniqueInput>
    disconnect?: Enumerable<ImageWhereUniqueInput>
    delete?: Enumerable<ImageWhereUniqueInput>
    connect?: Enumerable<ImageWhereUniqueInput>
    update?: Enumerable<ImageUpdateWithWhereUniqueWithoutUser_Image_createdByToUserInput>
    updateMany?: Enumerable<ImageUpdateManyWithWhereWithoutUser_Image_createdByToUserInput>
    deleteMany?: Enumerable<ImageScalarWhereInput>
  }

  export type LocationEntryUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<LocationEntryCreateWithoutUserInput>, Enumerable<LocationEntryUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<LocationEntryCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<LocationEntryUpsertWithWhereUniqueWithoutUserInput>
    createMany?: LocationEntryCreateManyUserInputEnvelope
    set?: Enumerable<LocationEntryWhereUniqueInput>
    disconnect?: Enumerable<LocationEntryWhereUniqueInput>
    delete?: Enumerable<LocationEntryWhereUniqueInput>
    connect?: Enumerable<LocationEntryWhereUniqueInput>
    update?: Enumerable<LocationEntryUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<LocationEntryUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<LocationEntryScalarWhereInput>
  }

  export type ProjectUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ProjectCreateWithoutUserInput>, Enumerable<ProjectUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProjectUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProjectCreateManyUserInputEnvelope
    set?: Enumerable<ProjectWhereUniqueInput>
    disconnect?: Enumerable<ProjectWhereUniqueInput>
    delete?: Enumerable<ProjectWhereUniqueInput>
    connect?: Enumerable<ProjectWhereUniqueInput>
    update?: Enumerable<ProjectUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProjectUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProjectScalarWhereInput>
  }

  export type ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyCreateWithoutUserInput>, Enumerable<ProjectPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProjectPropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProjectPropertyCreateManyUserInputEnvelope
    set?: Enumerable<ProjectPropertyWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyWhereUniqueInput>
    update?: Enumerable<ProjectPropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProjectPropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProjectPropertyScalarWhereInput>
  }

  export type ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<ProjectPropertyValueCreateWithoutUserInput>, Enumerable<ProjectPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<ProjectPropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<ProjectPropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: ProjectPropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    delete?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    connect?: Enumerable<ProjectPropertyValueWhereUniqueInput>
    update?: Enumerable<ProjectPropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<ProjectPropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<ProjectPropertyValueScalarWhereInput>
  }

  export type TaskUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskCreateWithoutUserInput>, Enumerable<TaskUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskCreateManyUserInputEnvelope
    set?: Enumerable<TaskWhereUniqueInput>
    disconnect?: Enumerable<TaskWhereUniqueInput>
    delete?: Enumerable<TaskWhereUniqueInput>
    connect?: Enumerable<TaskWhereUniqueInput>
    update?: Enumerable<TaskUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskScalarWhereInput>
  }

  export type TaskPropertyUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskPropertyCreateWithoutUserInput>, Enumerable<TaskPropertyUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskPropertyUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskPropertyCreateManyUserInputEnvelope
    set?: Enumerable<TaskPropertyWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyWhereUniqueInput>
    delete?: Enumerable<TaskPropertyWhereUniqueInput>
    connect?: Enumerable<TaskPropertyWhereUniqueInput>
    update?: Enumerable<TaskPropertyUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskPropertyUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskPropertyScalarWhereInput>
  }

  export type TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskPropertyValueCreateWithoutUserInput>, Enumerable<TaskPropertyValueUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskPropertyValueCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskPropertyValueUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskPropertyValueCreateManyUserInputEnvelope
    set?: Enumerable<TaskPropertyValueWhereUniqueInput>
    disconnect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    delete?: Enumerable<TaskPropertyValueWhereUniqueInput>
    connect?: Enumerable<TaskPropertyValueWhereUniqueInput>
    update?: Enumerable<TaskPropertyValueUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskPropertyValueUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskPropertyValueScalarWhereInput>
  }

  export type TaskStatusUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TaskStatusCreateWithoutUserInput>, Enumerable<TaskStatusUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TaskStatusCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TaskStatusUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TaskStatusCreateManyUserInputEnvelope
    set?: Enumerable<TaskStatusWhereUniqueInput>
    disconnect?: Enumerable<TaskStatusWhereUniqueInput>
    delete?: Enumerable<TaskStatusWhereUniqueInput>
    connect?: Enumerable<TaskStatusWhereUniqueInput>
    update?: Enumerable<TaskStatusUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TaskStatusUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TaskStatusScalarWhereInput>
  }

  export type TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput = {
    create?: XOR<Enumerable<TenantCreateWithoutUser_Tenant_createdByToUserInput>, Enumerable<TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantCreateOrConnectWithoutUser_Tenant_createdByToUserInput>
    upsert?: Enumerable<TenantUpsertWithWhereUniqueWithoutUser_Tenant_createdByToUserInput>
    createMany?: TenantCreateManyUser_Tenant_createdByToUserInputEnvelope
    set?: Enumerable<TenantWhereUniqueInput>
    disconnect?: Enumerable<TenantWhereUniqueInput>
    delete?: Enumerable<TenantWhereUniqueInput>
    connect?: Enumerable<TenantWhereUniqueInput>
    update?: Enumerable<TenantUpdateWithWhereUniqueWithoutUser_Tenant_createdByToUserInput>
    updateMany?: Enumerable<TenantUpdateManyWithWhereWithoutUser_Tenant_createdByToUserInput>
    deleteMany?: Enumerable<TenantScalarWhereInput>
  }

  export type TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_createdByToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_createdByToUserInput>
    upsert?: Enumerable<TenantUserUpsertWithWhereUniqueWithoutUser_TenantUser_createdByToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_createdByToUserInputEnvelope
    set?: Enumerable<TenantUserWhereUniqueInput>
    disconnect?: Enumerable<TenantUserWhereUniqueInput>
    delete?: Enumerable<TenantUserWhereUniqueInput>
    connect?: Enumerable<TenantUserWhereUniqueInput>
    update?: Enumerable<TenantUserUpdateWithWhereUniqueWithoutUser_TenantUser_createdByToUserInput>
    updateMany?: Enumerable<TenantUserUpdateManyWithWhereWithoutUser_TenantUser_createdByToUserInput>
    deleteMany?: Enumerable<TenantUserScalarWhereInput>
  }

  export type TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput = {
    create?: XOR<Enumerable<TenantUserCreateWithoutUser_TenantUser_userIdToUserInput>, Enumerable<TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput>>
    connectOrCreate?: Enumerable<TenantUserCreateOrConnectWithoutUser_TenantUser_userIdToUserInput>
    upsert?: Enumerable<TenantUserUpsertWithWhereUniqueWithoutUser_TenantUser_userIdToUserInput>
    createMany?: TenantUserCreateManyUser_TenantUser_userIdToUserInputEnvelope
    set?: Enumerable<TenantUserWhereUniqueInput>
    disconnect?: Enumerable<TenantUserWhereUniqueInput>
    delete?: Enumerable<TenantUserWhereUniqueInput>
    connect?: Enumerable<TenantUserWhereUniqueInput>
    update?: Enumerable<TenantUserUpdateWithWhereUniqueWithoutUser_TenantUser_userIdToUserInput>
    updateMany?: Enumerable<TenantUserUpdateManyWithWhereWithoutUser_TenantUser_userIdToUserInput>
    deleteMany?: Enumerable<TenantUserScalarWhereInput>
  }

  export type TimeBlockUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<Enumerable<TimeBlockCreateWithoutUserInput>, Enumerable<TimeBlockUncheckedCreateWithoutUserInput>>
    connectOrCreate?: Enumerable<TimeBlockCreateOrConnectWithoutUserInput>
    upsert?: Enumerable<TimeBlockUpsertWithWhereUniqueWithoutUserInput>
    createMany?: TimeBlockCreateManyUserInputEnvelope
    set?: Enumerable<TimeBlockWhereUniqueInput>
    disconnect?: Enumerable<TimeBlockWhereUniqueInput>
    delete?: Enumerable<TimeBlockWhereUniqueInput>
    connect?: Enumerable<TimeBlockWhereUniqueInput>
    update?: Enumerable<TimeBlockUpdateWithWhereUniqueWithoutUserInput>
    updateMany?: Enumerable<TimeBlockUpdateManyWithWhereWithoutUserInput>
    deleteMany?: Enumerable<TimeBlockScalarWhereInput>
  }

  export type UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_createdByToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_createdByToUserInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutUser_UserTask_createdByToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_createdByToUserInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutUser_UserTask_createdByToUserInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutUser_UserTask_createdByToUserInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput = {
    create?: XOR<Enumerable<UserTaskCreateWithoutUser_UserTask_userIdToUserInput>, Enumerable<UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput>>
    connectOrCreate?: Enumerable<UserTaskCreateOrConnectWithoutUser_UserTask_userIdToUserInput>
    upsert?: Enumerable<UserTaskUpsertWithWhereUniqueWithoutUser_UserTask_userIdToUserInput>
    createMany?: UserTaskCreateManyUser_UserTask_userIdToUserInputEnvelope
    set?: Enumerable<UserTaskWhereUniqueInput>
    disconnect?: Enumerable<UserTaskWhereUniqueInput>
    delete?: Enumerable<UserTaskWhereUniqueInput>
    connect?: Enumerable<UserTaskWhereUniqueInput>
    update?: Enumerable<UserTaskUpdateWithWhereUniqueWithoutUser_UserTask_userIdToUserInput>
    updateMany?: Enumerable<UserTaskUpdateManyWithWhereWithoutUser_UserTask_userIdToUserInput>
    deleteMany?: Enumerable<UserTaskScalarWhereInput>
  }

  export type UserCreateNestedOneWithoutUserTask_UserTask_createdByToUserInput = {
    create?: XOR<UserCreateWithoutUserTask_UserTask_createdByToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserTask_UserTask_createdByToUserInput
    connect?: UserWhereUniqueInput
  }

  export type TaskCreateNestedOneWithoutUserTaskInput = {
    create?: XOR<TaskCreateWithoutUserTaskInput, TaskUncheckedCreateWithoutUserTaskInput>
    connectOrCreate?: TaskCreateOrConnectWithoutUserTaskInput
    connect?: TaskWhereUniqueInput
  }

  export type TenantCreateNestedOneWithoutUserTaskInput = {
    create?: XOR<TenantCreateWithoutUserTaskInput, TenantUncheckedCreateWithoutUserTaskInput>
    connectOrCreate?: TenantCreateOrConnectWithoutUserTaskInput
    connect?: TenantWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutUserTask_UserTask_userIdToUserInput = {
    create?: XOR<UserCreateWithoutUserTask_UserTask_userIdToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserTask_UserTask_userIdToUserInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutUserTask_UserTask_createdByToUserNestedInput = {
    create?: XOR<UserCreateWithoutUserTask_UserTask_createdByToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_createdByToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserTask_UserTask_createdByToUserInput
    upsert?: UserUpsertWithoutUserTask_UserTask_createdByToUserInput
    disconnect?: boolean
    delete?: boolean
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserTask_UserTask_createdByToUserInput, UserUncheckedUpdateWithoutUserTask_UserTask_createdByToUserInput>
  }

  export type TaskUpdateOneRequiredWithoutUserTaskNestedInput = {
    create?: XOR<TaskCreateWithoutUserTaskInput, TaskUncheckedCreateWithoutUserTaskInput>
    connectOrCreate?: TaskCreateOrConnectWithoutUserTaskInput
    upsert?: TaskUpsertWithoutUserTaskInput
    connect?: TaskWhereUniqueInput
    update?: XOR<TaskUpdateWithoutUserTaskInput, TaskUncheckedUpdateWithoutUserTaskInput>
  }

  export type TenantUpdateOneRequiredWithoutUserTaskNestedInput = {
    create?: XOR<TenantCreateWithoutUserTaskInput, TenantUncheckedCreateWithoutUserTaskInput>
    connectOrCreate?: TenantCreateOrConnectWithoutUserTaskInput
    upsert?: TenantUpsertWithoutUserTaskInput
    connect?: TenantWhereUniqueInput
    update?: XOR<TenantUpdateWithoutUserTaskInput, TenantUncheckedUpdateWithoutUserTaskInput>
  }

  export type UserUpdateOneRequiredWithoutUserTask_UserTask_userIdToUserNestedInput = {
    create?: XOR<UserCreateWithoutUserTask_UserTask_userIdToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_userIdToUserInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserTask_UserTask_userIdToUserInput
    upsert?: UserUpsertWithoutUserTask_UserTask_userIdToUserInput
    connect?: UserWhereUniqueInput
    update?: XOR<UserUpdateWithoutUserTask_UserTask_userIdToUserInput, UserUncheckedUpdateWithoutUserTask_UserTask_userIdToUserInput>
  }

  export type NestedStringFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringFilter | string
  }

  export type NestedDateTimeFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeFilter | Date | string
  }

  export type NestedStringNullableFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableFilter | string | null
  }

  export type NestedStringWithAggregatesFilter = {
    equals?: string
    in?: Enumerable<string>
    notIn?: Enumerable<string>
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringWithAggregatesFilter | string
    _count?: NestedIntFilter
    _min?: NestedStringFilter
    _max?: NestedStringFilter
  }

  export type NestedIntFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntFilter | number
  }

  export type NestedDateTimeWithAggregatesFilter = {
    equals?: Date | string
    in?: Enumerable<Date> | Enumerable<string>
    notIn?: Enumerable<Date> | Enumerable<string>
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeWithAggregatesFilter | Date | string
    _count?: NestedIntFilter
    _min?: NestedDateTimeFilter
    _max?: NestedDateTimeFilter
  }

  export type NestedStringNullableWithAggregatesFilter = {
    equals?: string | null
    in?: Enumerable<string> | null
    notIn?: Enumerable<string> | null
    lt?: string
    lte?: string
    gt?: string
    gte?: string
    contains?: string
    startsWith?: string
    endsWith?: string
    not?: NestedStringNullableWithAggregatesFilter | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedStringNullableFilter
    _max?: NestedStringNullableFilter
  }

  export type NestedIntNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableFilter | number | null
  }

  export type NestedDateTimeNullableFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableFilter | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter = {
    equals?: Date | string | null
    in?: Enumerable<Date> | Enumerable<string> | null
    notIn?: Enumerable<Date> | Enumerable<string> | null
    lt?: Date | string
    lte?: Date | string
    gt?: Date | string
    gte?: Date | string
    not?: NestedDateTimeNullableWithAggregatesFilter | Date | string | null
    _count?: NestedIntNullableFilter
    _min?: NestedDateTimeNullableFilter
    _max?: NestedDateTimeNullableFilter
  }

  export type NestedIntWithAggregatesFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntWithAggregatesFilter | number
    _count?: NestedIntFilter
    _avg?: NestedFloatFilter
    _sum?: NestedIntFilter
    _min?: NestedIntFilter
    _max?: NestedIntFilter
  }

  export type NestedFloatFilter = {
    equals?: number
    in?: Enumerable<number>
    notIn?: Enumerable<number>
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatFilter | number
  }

  export type NestedBoolNullableFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableFilter | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter = {
    equals?: boolean | null
    not?: NestedBoolNullableWithAggregatesFilter | boolean | null
    _count?: NestedIntNullableFilter
    _min?: NestedBoolNullableFilter
    _max?: NestedBoolNullableFilter
  }

  export type NestedFloatNullableFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableFilter | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedFloatNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedFloatNullableFilter
    _min?: NestedFloatNullableFilter
    _max?: NestedFloatNullableFilter
  }
  export type NestedJsonFilter = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase>, Exclude<keyof Required<NestedJsonFilterBase>, 'path'>>,
        Required<NestedJsonFilterBase>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase>, 'path'>>

  export type NestedJsonFilterBase = {
    equals?: InputJsonValue | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string
    string_starts_with?: string
    string_ends_with?: string
    array_contains?: InputJsonValue | null
    array_starts_with?: InputJsonValue | null
    array_ends_with?: InputJsonValue | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter = {
    equals?: number | null
    in?: Enumerable<number> | null
    notIn?: Enumerable<number> | null
    lt?: number
    lte?: number
    gt?: number
    gte?: number
    not?: NestedIntNullableWithAggregatesFilter | number | null
    _count?: NestedIntNullableFilter
    _avg?: NestedFloatNullableFilter
    _sum?: NestedIntNullableFilter
    _min?: NestedIntNullableFilter
    _max?: NestedIntNullableFilter
  }

  export type TenantCreateWithoutApiKeyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutApiKeyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutApiKeyInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutApiKeyInput, TenantUncheckedCreateWithoutApiKeyInput>
  }

  export type UserCreateWithoutApiKeyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutApiKeyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutApiKeyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutApiKeyInput, UserUncheckedCreateWithoutApiKeyInput>
  }

  export type TenantUpsertWithoutApiKeyInput = {
    update: XOR<TenantUpdateWithoutApiKeyInput, TenantUncheckedUpdateWithoutApiKeyInput>
    create: XOR<TenantCreateWithoutApiKeyInput, TenantUncheckedCreateWithoutApiKeyInput>
  }

  export type TenantUpdateWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutApiKeyInput = {
    update: XOR<UserUpdateWithoutApiKeyInput, UserUncheckedUpdateWithoutApiKeyInput>
    create: XOR<UserCreateWithoutApiKeyInput, UserUncheckedCreateWithoutApiKeyInput>
  }

  export type UserUpdateWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserCreateWithoutDailyLogInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutDailyLogInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutDailyLogInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDailyLogInput, UserUncheckedCreateWithoutDailyLogInput>
  }

  export type TenantCreateWithoutDailyLogInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutDailyLogInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutDailyLogInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutDailyLogInput, TenantUncheckedCreateWithoutDailyLogInput>
  }

  export type DailyLogItemCreateWithoutDailyLogInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogItemInput
    Equipment?: EquipmentCreateNestedOneWithoutDailyLogItemInput
    Task?: TaskCreateNestedOneWithoutDailyLogItemInput
    Tenant: TenantCreateNestedOneWithoutDailyLogItemInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateWithoutDailyLogInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    tenantId: string
    equipmentId?: string | null
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemCreateOrConnectWithoutDailyLogInput = {
    where: DailyLogItemWhereUniqueInput
    create: XOR<DailyLogItemCreateWithoutDailyLogInput, DailyLogItemUncheckedCreateWithoutDailyLogInput>
  }

  export type DailyLogItemCreateManyDailyLogInputEnvelope = {
    data: Enumerable<DailyLogItemCreateManyDailyLogInput>
    skipDuplicates?: boolean
  }

  export type FileCreateWithoutDailyLogInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFileInput
    Image: ImageCreateNestedOneWithoutFileInput
    Project?: ProjectCreateNestedOneWithoutFileInput
    Tenant: TenantCreateNestedOneWithoutFileInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFileInput
  }

  export type FileUncheckedCreateWithoutDailyLogInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFileInput
  }

  export type FileCreateOrConnectWithoutDailyLogInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutDailyLogInput, FileUncheckedCreateWithoutDailyLogInput>
  }

  export type FileCreateManyDailyLogInputEnvelope = {
    data: Enumerable<FileCreateManyDailyLogInput>
    skipDuplicates?: boolean
  }

  export type LocationEntryCreateWithoutDailyLogInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutLocationEntryInput
    Tenant: TenantCreateNestedOneWithoutLocationEntryInput
  }

  export type LocationEntryUncheckedCreateWithoutDailyLogInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type LocationEntryCreateOrConnectWithoutDailyLogInput = {
    where: LocationEntryWhereUniqueInput
    create: XOR<LocationEntryCreateWithoutDailyLogInput, LocationEntryUncheckedCreateWithoutDailyLogInput>
  }

  export type LocationEntryCreateManyDailyLogInputEnvelope = {
    data: Enumerable<LocationEntryCreateManyDailyLogInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutDailyLogInput = {
    update: XOR<UserUpdateWithoutDailyLogInput, UserUncheckedUpdateWithoutDailyLogInput>
    create: XOR<UserCreateWithoutDailyLogInput, UserUncheckedCreateWithoutDailyLogInput>
  }

  export type UserUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutDailyLogInput = {
    update: XOR<TenantUpdateWithoutDailyLogInput, TenantUncheckedUpdateWithoutDailyLogInput>
    create: XOR<TenantCreateWithoutDailyLogInput, TenantUncheckedCreateWithoutDailyLogInput>
  }

  export type TenantUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type DailyLogItemUpsertWithWhereUniqueWithoutDailyLogInput = {
    where: DailyLogItemWhereUniqueInput
    update: XOR<DailyLogItemUpdateWithoutDailyLogInput, DailyLogItemUncheckedUpdateWithoutDailyLogInput>
    create: XOR<DailyLogItemCreateWithoutDailyLogInput, DailyLogItemUncheckedCreateWithoutDailyLogInput>
  }

  export type DailyLogItemUpdateWithWhereUniqueWithoutDailyLogInput = {
    where: DailyLogItemWhereUniqueInput
    data: XOR<DailyLogItemUpdateWithoutDailyLogInput, DailyLogItemUncheckedUpdateWithoutDailyLogInput>
  }

  export type DailyLogItemUpdateManyWithWhereWithoutDailyLogInput = {
    where: DailyLogItemScalarWhereInput
    data: XOR<DailyLogItemUpdateManyMutationInput, DailyLogItemUncheckedUpdateManyWithoutDailyLogItemInput>
  }

  export type DailyLogItemScalarWhereInput = {
    AND?: Enumerable<DailyLogItemScalarWhereInput>
    OR?: Enumerable<DailyLogItemScalarWhereInput>
    NOT?: Enumerable<DailyLogItemScalarWhereInput>
    id?: StringFilter | string
    note?: StringNullableFilter | string | null
    isNoteVisible?: BoolNullableFilter | boolean | null
    itemType?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    taskId?: StringNullableFilter | string | null
    dailyLogId?: StringFilter | string
    tenantId?: StringFilter | string
    equipmentId?: StringNullableFilter | string | null
  }

  export type FileUpsertWithWhereUniqueWithoutDailyLogInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutDailyLogInput, FileUncheckedUpdateWithoutDailyLogInput>
    create: XOR<FileCreateWithoutDailyLogInput, FileUncheckedCreateWithoutDailyLogInput>
  }

  export type FileUpdateWithWhereUniqueWithoutDailyLogInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutDailyLogInput, FileUncheckedUpdateWithoutDailyLogInput>
  }

  export type FileUpdateManyWithWhereWithoutDailyLogInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutFileInput>
  }

  export type FileScalarWhereInput = {
    AND?: Enumerable<FileScalarWhereInput>
    OR?: Enumerable<FileScalarWhereInput>
    NOT?: Enumerable<FileScalarWhereInput>
    id?: StringFilter | string
    description?: StringNullableFilter | string | null
    locationLabel?: StringNullableFilter | string | null
    locationLatitude?: FloatNullableFilter | number | null
    locationLongitude?: FloatNullableFilter | number | null
    name?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    imageId?: StringFilter | string
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    projectId?: StringNullableFilter | string | null
    dailyLogId?: StringNullableFilter | string | null
  }

  export type LocationEntryUpsertWithWhereUniqueWithoutDailyLogInput = {
    where: LocationEntryWhereUniqueInput
    update: XOR<LocationEntryUpdateWithoutDailyLogInput, LocationEntryUncheckedUpdateWithoutDailyLogInput>
    create: XOR<LocationEntryCreateWithoutDailyLogInput, LocationEntryUncheckedCreateWithoutDailyLogInput>
  }

  export type LocationEntryUpdateWithWhereUniqueWithoutDailyLogInput = {
    where: LocationEntryWhereUniqueInput
    data: XOR<LocationEntryUpdateWithoutDailyLogInput, LocationEntryUncheckedUpdateWithoutDailyLogInput>
  }

  export type LocationEntryUpdateManyWithWhereWithoutDailyLogInput = {
    where: LocationEntryScalarWhereInput
    data: XOR<LocationEntryUpdateManyMutationInput, LocationEntryUncheckedUpdateManyWithoutLocationEntryInput>
  }

  export type LocationEntryScalarWhereInput = {
    AND?: Enumerable<LocationEntryScalarWhereInput>
    OR?: Enumerable<LocationEntryScalarWhereInput>
    NOT?: Enumerable<LocationEntryScalarWhereInput>
    id?: StringFilter | string
    latitude?: FloatNullableFilter | number | null
    longitude?: FloatNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    dailyLogId?: StringFilter | string
    tenantId?: StringFilter | string
  }

  export type UserCreateWithoutDailyLogItemInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutDailyLogItemInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutDailyLogItemInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutDailyLogItemInput, UserUncheckedCreateWithoutDailyLogItemInput>
  }

  export type DailyLogCreateWithoutDailyLogItemInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogInput
    Tenant: TenantCreateNestedOneWithoutDailyLogInput
    File?: FileCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUncheckedCreateWithoutDailyLogItemInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogCreateOrConnectWithoutDailyLogItemInput = {
    where: DailyLogWhereUniqueInput
    create: XOR<DailyLogCreateWithoutDailyLogItemInput, DailyLogUncheckedCreateWithoutDailyLogItemInput>
  }

  export type EquipmentCreateWithoutDailyLogItemInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_Equipment_createdByToUser?: UserCreateNestedOneWithoutEquipment_Equipment_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutEquipmentInput
    User_Equipment_userIdToUser?: UserCreateNestedOneWithoutEquipment_Equipment_userIdToUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutDailyLogItemInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    userId?: string | null
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutDailyLogItemInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutDailyLogItemInput, EquipmentUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TaskCreateWithoutDailyLogItemInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutDailyLogItemInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutDailyLogItemInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutDailyLogItemInput, TaskUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TenantCreateWithoutDailyLogItemInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutDailyLogItemInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutDailyLogItemInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutDailyLogItemInput, TenantUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TimeBlockCreateWithoutDailyLogItemInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User: UserCreateNestedOneWithoutTimeBlockInput
    Tenant: TenantCreateNestedOneWithoutTimeBlockInput
  }

  export type TimeBlockUncheckedCreateWithoutDailyLogItemInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy: string
    tenantId: string
  }

  export type TimeBlockCreateOrConnectWithoutDailyLogItemInput = {
    where: TimeBlockWhereUniqueInput
    create: XOR<TimeBlockCreateWithoutDailyLogItemInput, TimeBlockUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TimeBlockCreateManyDailyLogItemInputEnvelope = {
    data: Enumerable<TimeBlockCreateManyDailyLogItemInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutDailyLogItemInput = {
    update: XOR<UserUpdateWithoutDailyLogItemInput, UserUncheckedUpdateWithoutDailyLogItemInput>
    create: XOR<UserCreateWithoutDailyLogItemInput, UserUncheckedCreateWithoutDailyLogItemInput>
  }

  export type UserUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type DailyLogUpsertWithoutDailyLogItemInput = {
    update: XOR<DailyLogUpdateWithoutDailyLogItemInput, DailyLogUncheckedUpdateWithoutDailyLogItemInput>
    create: XOR<DailyLogCreateWithoutDailyLogItemInput, DailyLogUncheckedCreateWithoutDailyLogItemInput>
  }

  export type DailyLogUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogNestedInput
    File?: FileUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutDailyLogNestedInput
  }

  export type EquipmentUpsertWithoutDailyLogItemInput = {
    update: XOR<EquipmentUpdateWithoutDailyLogItemInput, EquipmentUncheckedUpdateWithoutDailyLogItemInput>
    create: XOR<EquipmentCreateWithoutDailyLogItemInput, EquipmentUncheckedCreateWithoutDailyLogItemInput>
  }

  export type EquipmentUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_Equipment_createdByToUser?: UserUpdateOneWithoutEquipment_Equipment_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentNestedInput
    User_Equipment_userIdToUser?: UserUpdateOneWithoutEquipment_Equipment_userIdToUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentNestedInput
  }

  export type TaskUpsertWithoutDailyLogItemInput = {
    update: XOR<TaskUpdateWithoutDailyLogItemInput, TaskUncheckedUpdateWithoutDailyLogItemInput>
    create: XOR<TaskCreateWithoutDailyLogItemInput, TaskUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TaskUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TenantUpsertWithoutDailyLogItemInput = {
    update: XOR<TenantUpdateWithoutDailyLogItemInput, TenantUncheckedUpdateWithoutDailyLogItemInput>
    create: XOR<TenantCreateWithoutDailyLogItemInput, TenantUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TenantUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TimeBlockUpsertWithWhereUniqueWithoutDailyLogItemInput = {
    where: TimeBlockWhereUniqueInput
    update: XOR<TimeBlockUpdateWithoutDailyLogItemInput, TimeBlockUncheckedUpdateWithoutDailyLogItemInput>
    create: XOR<TimeBlockCreateWithoutDailyLogItemInput, TimeBlockUncheckedCreateWithoutDailyLogItemInput>
  }

  export type TimeBlockUpdateWithWhereUniqueWithoutDailyLogItemInput = {
    where: TimeBlockWhereUniqueInput
    data: XOR<TimeBlockUpdateWithoutDailyLogItemInput, TimeBlockUncheckedUpdateWithoutDailyLogItemInput>
  }

  export type TimeBlockUpdateManyWithWhereWithoutDailyLogItemInput = {
    where: TimeBlockScalarWhereInput
    data: XOR<TimeBlockUpdateManyMutationInput, TimeBlockUncheckedUpdateManyWithoutTimeBlockInput>
  }

  export type TimeBlockScalarWhereInput = {
    AND?: Enumerable<TimeBlockScalarWhereInput>
    OR?: Enumerable<TimeBlockScalarWhereInput>
    NOT?: Enumerable<TimeBlockScalarWhereInput>
    id?: StringFilter | string
    duration?: IntNullableFilter | number | null
    entryType?: StringFilter | string
    rangeStartAt?: DateTimeNullableFilter | Date | string | null
    rangeEndAt?: DateTimeNullableFilter | Date | string | null
    timerStartLatitude?: FloatNullableFilter | number | null
    timerStartLongitude?: FloatNullableFilter | number | null
    timerStartAddress?: StringNullableFilter | string | null
    timerStartAt?: DateTimeNullableFilter | Date | string | null
    timerEndAt?: DateTimeNullableFilter | Date | string | null
    timerEndLatitude?: FloatNullableFilter | number | null
    timerEndLongitude?: FloatNullableFilter | number | null
    timerEndAddress?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringFilter | string
    dailyLogItemId?: StringFilter | string
    tenantId?: StringFilter | string
  }

  export type DailyLogItemCreateWithoutEquipmentInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogItemInput
    DailyLog: DailyLogCreateNestedOneWithoutDailyLogItemInput
    Task?: TaskCreateNestedOneWithoutDailyLogItemInput
    Tenant: TenantCreateNestedOneWithoutDailyLogItemInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateWithoutEquipmentInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemCreateOrConnectWithoutEquipmentInput = {
    where: DailyLogItemWhereUniqueInput
    create: XOR<DailyLogItemCreateWithoutEquipmentInput, DailyLogItemUncheckedCreateWithoutEquipmentInput>
  }

  export type DailyLogItemCreateManyEquipmentInputEnvelope = {
    data: Enumerable<DailyLogItemCreateManyEquipmentInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutEquipment_Equipment_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutEquipment_Equipment_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutEquipment_Equipment_createdByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEquipment_Equipment_createdByToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_createdByToUserInput>
  }

  export type TenantCreateWithoutEquipmentInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutEquipmentInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutEquipmentInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutEquipmentInput, TenantUncheckedCreateWithoutEquipmentInput>
  }

  export type UserCreateWithoutEquipment_Equipment_userIdToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutEquipment_Equipment_userIdToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutEquipment_Equipment_userIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEquipment_Equipment_userIdToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_userIdToUserInput>
  }

  export type EquipmentPropertyValueCreateWithoutEquipmentInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyValueInput
    EquipmentProperty: EquipmentPropertyCreateNestedOneWithoutEquipmentPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyValueInput
  }

  export type EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentPropertyId: string
    tenantId: string
  }

  export type EquipmentPropertyValueCreateOrConnectWithoutEquipmentInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    create: XOR<EquipmentPropertyValueCreateWithoutEquipmentInput, EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput>
  }

  export type EquipmentPropertyValueCreateManyEquipmentInputEnvelope = {
    data: Enumerable<EquipmentPropertyValueCreateManyEquipmentInput>
    skipDuplicates?: boolean
  }

  export type DailyLogItemUpsertWithWhereUniqueWithoutEquipmentInput = {
    where: DailyLogItemWhereUniqueInput
    update: XOR<DailyLogItemUpdateWithoutEquipmentInput, DailyLogItemUncheckedUpdateWithoutEquipmentInput>
    create: XOR<DailyLogItemCreateWithoutEquipmentInput, DailyLogItemUncheckedCreateWithoutEquipmentInput>
  }

  export type DailyLogItemUpdateWithWhereUniqueWithoutEquipmentInput = {
    where: DailyLogItemWhereUniqueInput
    data: XOR<DailyLogItemUpdateWithoutEquipmentInput, DailyLogItemUncheckedUpdateWithoutEquipmentInput>
  }

  export type DailyLogItemUpdateManyWithWhereWithoutEquipmentInput = {
    where: DailyLogItemScalarWhereInput
    data: XOR<DailyLogItemUpdateManyMutationInput, DailyLogItemUncheckedUpdateManyWithoutDailyLogItemInput>
  }

  export type UserUpsertWithoutEquipment_Equipment_createdByToUserInput = {
    update: XOR<UserUpdateWithoutEquipment_Equipment_createdByToUserInput, UserUncheckedUpdateWithoutEquipment_Equipment_createdByToUserInput>
    create: XOR<UserCreateWithoutEquipment_Equipment_createdByToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_createdByToUserInput>
  }

  export type UserUpdateWithoutEquipment_Equipment_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEquipment_Equipment_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutEquipmentInput = {
    update: XOR<TenantUpdateWithoutEquipmentInput, TenantUncheckedUpdateWithoutEquipmentInput>
    create: XOR<TenantCreateWithoutEquipmentInput, TenantUncheckedCreateWithoutEquipmentInput>
  }

  export type TenantUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutEquipment_Equipment_userIdToUserInput = {
    update: XOR<UserUpdateWithoutEquipment_Equipment_userIdToUserInput, UserUncheckedUpdateWithoutEquipment_Equipment_userIdToUserInput>
    create: XOR<UserCreateWithoutEquipment_Equipment_userIdToUserInput, UserUncheckedCreateWithoutEquipment_Equipment_userIdToUserInput>
  }

  export type UserUpdateWithoutEquipment_Equipment_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEquipment_Equipment_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type EquipmentPropertyValueUpsertWithWhereUniqueWithoutEquipmentInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    update: XOR<EquipmentPropertyValueUpdateWithoutEquipmentInput, EquipmentPropertyValueUncheckedUpdateWithoutEquipmentInput>
    create: XOR<EquipmentPropertyValueCreateWithoutEquipmentInput, EquipmentPropertyValueUncheckedCreateWithoutEquipmentInput>
  }

  export type EquipmentPropertyValueUpdateWithWhereUniqueWithoutEquipmentInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    data: XOR<EquipmentPropertyValueUpdateWithoutEquipmentInput, EquipmentPropertyValueUncheckedUpdateWithoutEquipmentInput>
  }

  export type EquipmentPropertyValueUpdateManyWithWhereWithoutEquipmentInput = {
    where: EquipmentPropertyValueScalarWhereInput
    data: XOR<EquipmentPropertyValueUpdateManyMutationInput, EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentPropertyValueScalarWhereInput = {
    AND?: Enumerable<EquipmentPropertyValueScalarWhereInput>
    OR?: Enumerable<EquipmentPropertyValueScalarWhereInput>
    NOT?: Enumerable<EquipmentPropertyValueScalarWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    equipmentId?: StringFilter | string
    equipmentPropertyId?: StringFilter | string
    tenantId?: StringFilter | string
  }

  export type UserCreateWithoutEquipmentPropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutEquipmentPropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutEquipmentPropertyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEquipmentPropertyInput, UserUncheckedCreateWithoutEquipmentPropertyInput>
  }

  export type TenantCreateWithoutEquipmentPropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutEquipmentPropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutEquipmentPropertyInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutEquipmentPropertyInput, TenantUncheckedCreateWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyValueCreateWithoutEquipmentPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyValueInput
    Equipment: EquipmentCreateNestedOneWithoutEquipmentPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyValueInput
  }

  export type EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentId: string
    tenantId: string
  }

  export type EquipmentPropertyValueCreateOrConnectWithoutEquipmentPropertyInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    create: XOR<EquipmentPropertyValueCreateWithoutEquipmentPropertyInput, EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyValueCreateManyEquipmentPropertyInputEnvelope = {
    data: Enumerable<EquipmentPropertyValueCreateManyEquipmentPropertyInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutEquipmentPropertyInput = {
    update: XOR<UserUpdateWithoutEquipmentPropertyInput, UserUncheckedUpdateWithoutEquipmentPropertyInput>
    create: XOR<UserCreateWithoutEquipmentPropertyInput, UserUncheckedCreateWithoutEquipmentPropertyInput>
  }

  export type UserUpdateWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutEquipmentPropertyInput = {
    update: XOR<TenantUpdateWithoutEquipmentPropertyInput, TenantUncheckedUpdateWithoutEquipmentPropertyInput>
    create: XOR<TenantCreateWithoutEquipmentPropertyInput, TenantUncheckedCreateWithoutEquipmentPropertyInput>
  }

  export type TenantUpdateWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type EquipmentPropertyValueUpsertWithWhereUniqueWithoutEquipmentPropertyInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    update: XOR<EquipmentPropertyValueUpdateWithoutEquipmentPropertyInput, EquipmentPropertyValueUncheckedUpdateWithoutEquipmentPropertyInput>
    create: XOR<EquipmentPropertyValueCreateWithoutEquipmentPropertyInput, EquipmentPropertyValueUncheckedCreateWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyValueUpdateWithWhereUniqueWithoutEquipmentPropertyInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    data: XOR<EquipmentPropertyValueUpdateWithoutEquipmentPropertyInput, EquipmentPropertyValueUncheckedUpdateWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyValueUpdateManyWithWhereWithoutEquipmentPropertyInput = {
    where: EquipmentPropertyValueScalarWhereInput
    data: XOR<EquipmentPropertyValueUpdateManyMutationInput, EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyValueInput>
  }

  export type UserCreateWithoutEquipmentPropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutEquipmentPropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutEquipmentPropertyValueInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEquipmentPropertyValueInput, UserUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentCreateWithoutEquipmentPropertyValueInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutEquipmentInput
    User_Equipment_createdByToUser?: UserCreateNestedOneWithoutEquipment_Equipment_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutEquipmentInput
    User_Equipment_userIdToUser?: UserCreateNestedOneWithoutEquipment_Equipment_userIdToUserInput
  }

  export type EquipmentUncheckedCreateWithoutEquipmentPropertyValueInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    userId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutEquipmentPropertyValueInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutEquipmentPropertyValueInput, EquipmentUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentPropertyCreateWithoutEquipmentPropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyInput
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyUncheckedCreateWithoutEquipmentPropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type EquipmentPropertyCreateOrConnectWithoutEquipmentPropertyValueInput = {
    where: EquipmentPropertyWhereUniqueInput
    create: XOR<EquipmentPropertyCreateWithoutEquipmentPropertyValueInput, EquipmentPropertyUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type TenantCreateWithoutEquipmentPropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutEquipmentPropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutEquipmentPropertyValueInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutEquipmentPropertyValueInput, TenantUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type UserUpsertWithoutEquipmentPropertyValueInput = {
    update: XOR<UserUpdateWithoutEquipmentPropertyValueInput, UserUncheckedUpdateWithoutEquipmentPropertyValueInput>
    create: XOR<UserCreateWithoutEquipmentPropertyValueInput, UserUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type UserUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type EquipmentUpsertWithoutEquipmentPropertyValueInput = {
    update: XOR<EquipmentUpdateWithoutEquipmentPropertyValueInput, EquipmentUncheckedUpdateWithoutEquipmentPropertyValueInput>
    create: XOR<EquipmentCreateWithoutEquipmentPropertyValueInput, EquipmentUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutEquipmentNestedInput
    User_Equipment_createdByToUser?: UserUpdateOneWithoutEquipment_Equipment_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentNestedInput
    User_Equipment_userIdToUser?: UserUpdateOneWithoutEquipment_Equipment_userIdToUserNestedInput
  }

  export type EquipmentUncheckedUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentPropertyUpsertWithoutEquipmentPropertyValueInput = {
    update: XOR<EquipmentPropertyUpdateWithoutEquipmentPropertyValueInput, EquipmentPropertyUncheckedUpdateWithoutEquipmentPropertyValueInput>
    create: XOR<EquipmentPropertyCreateWithoutEquipmentPropertyValueInput, EquipmentPropertyUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type EquipmentPropertyUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyUncheckedUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUpsertWithoutEquipmentPropertyValueInput = {
    update: XOR<TenantUpdateWithoutEquipmentPropertyValueInput, TenantUncheckedUpdateWithoutEquipmentPropertyValueInput>
    create: XOR<TenantCreateWithoutEquipmentPropertyValueInput, TenantUncheckedCreateWithoutEquipmentPropertyValueInput>
  }

  export type TenantUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserCreateWithoutFeedbackInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutFeedbackInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutFeedbackInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFeedbackInput, UserUncheckedCreateWithoutFeedbackInput>
  }

  export type TenantCreateWithoutFeedbackInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutFeedbackInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutFeedbackInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutFeedbackInput, TenantUncheckedCreateWithoutFeedbackInput>
  }

  export type UserUpsertWithoutFeedbackInput = {
    update: XOR<UserUpdateWithoutFeedbackInput, UserUncheckedUpdateWithoutFeedbackInput>
    create: XOR<UserCreateWithoutFeedbackInput, UserUncheckedCreateWithoutFeedbackInput>
  }

  export type UserUpdateWithoutFeedbackInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFeedbackInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutFeedbackInput = {
    update: XOR<TenantUpdateWithoutFeedbackInput, TenantUncheckedUpdateWithoutFeedbackInput>
    create: XOR<TenantCreateWithoutFeedbackInput, TenantUncheckedCreateWithoutFeedbackInput>
  }

  export type TenantUpdateWithoutFeedbackInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutFeedbackInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserCreateWithoutFileInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutFileInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutFileInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFileInput, UserUncheckedCreateWithoutFileInput>
  }

  export type DailyLogCreateWithoutFileInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogInput
    Tenant: TenantCreateNestedOneWithoutDailyLogInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUncheckedCreateWithoutFileInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogCreateOrConnectWithoutFileInput = {
    where: DailyLogWhereUniqueInput
    create: XOR<DailyLogCreateWithoutFileInput, DailyLogUncheckedCreateWithoutFileInput>
  }

  export type ImageCreateWithoutFileInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_Image_createdByToUser?: UserCreateNestedOneWithoutImage_Image_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutImageInput
    User_User_imageIdToImage?: UserCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageUncheckedCreateWithoutFileInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    User_User_imageIdToImage?: UserUncheckedCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageCreateOrConnectWithoutFileInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutFileInput, ImageUncheckedCreateWithoutFileInput>
  }

  export type ProjectCreateWithoutFileInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectInput
    Tenant: TenantCreateNestedOneWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectInput
    Task?: TaskCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutFileInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectInput
    Task?: TaskUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutFileInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutFileInput, ProjectUncheckedCreateWithoutFileInput>
  }

  export type TenantCreateWithoutFileInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutFileInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutFileInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutFileInput, TenantUncheckedCreateWithoutFileInput>
  }

  export type FilePropertyValueCreateWithoutFileInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyValueInput
    FileProperty: FilePropertyCreateNestedOneWithoutFilePropertyValueInput
    Tenant: TenantCreateNestedOneWithoutFilePropertyValueInput
  }

  export type FilePropertyValueUncheckedCreateWithoutFileInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    propertyId: string
    tenantId: string
  }

  export type FilePropertyValueCreateOrConnectWithoutFileInput = {
    where: FilePropertyValueWhereUniqueInput
    create: XOR<FilePropertyValueCreateWithoutFileInput, FilePropertyValueUncheckedCreateWithoutFileInput>
  }

  export type FilePropertyValueCreateManyFileInputEnvelope = {
    data: Enumerable<FilePropertyValueCreateManyFileInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFileInput = {
    update: XOR<UserUpdateWithoutFileInput, UserUncheckedUpdateWithoutFileInput>
    create: XOR<UserCreateWithoutFileInput, UserUncheckedCreateWithoutFileInput>
  }

  export type UserUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type DailyLogUpsertWithoutFileInput = {
    update: XOR<DailyLogUpdateWithoutFileInput, DailyLogUncheckedUpdateWithoutFileInput>
    create: XOR<DailyLogCreateWithoutFileInput, DailyLogUncheckedCreateWithoutFileInput>
  }

  export type DailyLogUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutDailyLogNestedInput
  }

  export type ImageUpsertWithoutFileInput = {
    update: XOR<ImageUpdateWithoutFileInput, ImageUncheckedUpdateWithoutFileInput>
    create: XOR<ImageCreateWithoutFileInput, ImageUncheckedCreateWithoutFileInput>
  }

  export type ImageUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_Image_createdByToUser?: UserUpdateOneWithoutImage_Image_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutImageNestedInput
    User_User_imageIdToImage?: UserUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    User_User_imageIdToImage?: UserUncheckedUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ProjectUpsertWithoutFileInput = {
    update: XOR<ProjectUpdateWithoutFileInput, ProjectUncheckedUpdateWithoutFileInput>
    create: XOR<ProjectCreateWithoutFileInput, ProjectUncheckedCreateWithoutFileInput>
  }

  export type ProjectUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectNestedInput
    Task?: TaskUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectNestedInput
    Task?: TaskUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type TenantUpsertWithoutFileInput = {
    update: XOR<TenantUpdateWithoutFileInput, TenantUncheckedUpdateWithoutFileInput>
    create: XOR<TenantCreateWithoutFileInput, TenantUncheckedCreateWithoutFileInput>
  }

  export type TenantUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type FilePropertyValueUpsertWithWhereUniqueWithoutFileInput = {
    where: FilePropertyValueWhereUniqueInput
    update: XOR<FilePropertyValueUpdateWithoutFileInput, FilePropertyValueUncheckedUpdateWithoutFileInput>
    create: XOR<FilePropertyValueCreateWithoutFileInput, FilePropertyValueUncheckedCreateWithoutFileInput>
  }

  export type FilePropertyValueUpdateWithWhereUniqueWithoutFileInput = {
    where: FilePropertyValueWhereUniqueInput
    data: XOR<FilePropertyValueUpdateWithoutFileInput, FilePropertyValueUncheckedUpdateWithoutFileInput>
  }

  export type FilePropertyValueUpdateManyWithWhereWithoutFileInput = {
    where: FilePropertyValueScalarWhereInput
    data: XOR<FilePropertyValueUpdateManyMutationInput, FilePropertyValueUncheckedUpdateManyWithoutFilePropertyValueInput>
  }

  export type FilePropertyValueScalarWhereInput = {
    AND?: Enumerable<FilePropertyValueScalarWhereInput>
    OR?: Enumerable<FilePropertyValueScalarWhereInput>
    NOT?: Enumerable<FilePropertyValueScalarWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    fileId?: StringFilter | string
    propertyId?: StringFilter | string
    tenantId?: StringFilter | string
  }

  export type UserCreateWithoutFilePropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutFilePropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutFilePropertyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFilePropertyInput, UserUncheckedCreateWithoutFilePropertyInput>
  }

  export type TenantCreateWithoutFilePropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutFilePropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutFilePropertyInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutFilePropertyInput, TenantUncheckedCreateWithoutFilePropertyInput>
  }

  export type FilePropertyValueCreateWithoutFilePropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyValueInput
    File: FileCreateNestedOneWithoutFilePropertyValueInput
    Tenant: TenantCreateNestedOneWithoutFilePropertyValueInput
  }

  export type FilePropertyValueUncheckedCreateWithoutFilePropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    fileId: string
    tenantId: string
  }

  export type FilePropertyValueCreateOrConnectWithoutFilePropertyInput = {
    where: FilePropertyValueWhereUniqueInput
    create: XOR<FilePropertyValueCreateWithoutFilePropertyInput, FilePropertyValueUncheckedCreateWithoutFilePropertyInput>
  }

  export type FilePropertyValueCreateManyFilePropertyInputEnvelope = {
    data: Enumerable<FilePropertyValueCreateManyFilePropertyInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutFilePropertyInput = {
    update: XOR<UserUpdateWithoutFilePropertyInput, UserUncheckedUpdateWithoutFilePropertyInput>
    create: XOR<UserCreateWithoutFilePropertyInput, UserUncheckedCreateWithoutFilePropertyInput>
  }

  export type UserUpdateWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutFilePropertyInput = {
    update: XOR<TenantUpdateWithoutFilePropertyInput, TenantUncheckedUpdateWithoutFilePropertyInput>
    create: XOR<TenantCreateWithoutFilePropertyInput, TenantUncheckedCreateWithoutFilePropertyInput>
  }

  export type TenantUpdateWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type FilePropertyValueUpsertWithWhereUniqueWithoutFilePropertyInput = {
    where: FilePropertyValueWhereUniqueInput
    update: XOR<FilePropertyValueUpdateWithoutFilePropertyInput, FilePropertyValueUncheckedUpdateWithoutFilePropertyInput>
    create: XOR<FilePropertyValueCreateWithoutFilePropertyInput, FilePropertyValueUncheckedCreateWithoutFilePropertyInput>
  }

  export type FilePropertyValueUpdateWithWhereUniqueWithoutFilePropertyInput = {
    where: FilePropertyValueWhereUniqueInput
    data: XOR<FilePropertyValueUpdateWithoutFilePropertyInput, FilePropertyValueUncheckedUpdateWithoutFilePropertyInput>
  }

  export type FilePropertyValueUpdateManyWithWhereWithoutFilePropertyInput = {
    where: FilePropertyValueScalarWhereInput
    data: XOR<FilePropertyValueUpdateManyMutationInput, FilePropertyValueUncheckedUpdateManyWithoutFilePropertyValueInput>
  }

  export type UserCreateWithoutFilePropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutFilePropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutFilePropertyValueInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFilePropertyValueInput, UserUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type FileCreateWithoutFilePropertyValueInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFileInput
    DailyLog?: DailyLogCreateNestedOneWithoutFileInput
    Image: ImageCreateNestedOneWithoutFileInput
    Project?: ProjectCreateNestedOneWithoutFileInput
    Tenant: TenantCreateNestedOneWithoutFileInput
  }

  export type FileUncheckedCreateWithoutFilePropertyValueInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
  }

  export type FileCreateOrConnectWithoutFilePropertyValueInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutFilePropertyValueInput, FileUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type FilePropertyCreateWithoutFilePropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyInput
    Tenant: TenantCreateNestedOneWithoutFilePropertyInput
  }

  export type FilePropertyUncheckedCreateWithoutFilePropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type FilePropertyCreateOrConnectWithoutFilePropertyValueInput = {
    where: FilePropertyWhereUniqueInput
    create: XOR<FilePropertyCreateWithoutFilePropertyValueInput, FilePropertyUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type TenantCreateWithoutFilePropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutFilePropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutFilePropertyValueInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutFilePropertyValueInput, TenantUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type UserUpsertWithoutFilePropertyValueInput = {
    update: XOR<UserUpdateWithoutFilePropertyValueInput, UserUncheckedUpdateWithoutFilePropertyValueInput>
    create: XOR<UserCreateWithoutFilePropertyValueInput, UserUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type UserUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type FileUpsertWithoutFilePropertyValueInput = {
    update: XOR<FileUpdateWithoutFilePropertyValueInput, FileUncheckedUpdateWithoutFilePropertyValueInput>
    create: XOR<FileCreateWithoutFilePropertyValueInput, FileUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type FileUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFileNestedInput
    DailyLog?: DailyLogUpdateOneWithoutFileNestedInput
    Image?: ImageUpdateOneRequiredWithoutFileNestedInput
    Project?: ProjectUpdateOneWithoutFileNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FilePropertyUpsertWithoutFilePropertyValueInput = {
    update: XOR<FilePropertyUpdateWithoutFilePropertyValueInput, FilePropertyUncheckedUpdateWithoutFilePropertyValueInput>
    create: XOR<FilePropertyCreateWithoutFilePropertyValueInput, FilePropertyUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type FilePropertyUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyNestedInput
  }

  export type FilePropertyUncheckedUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUpsertWithoutFilePropertyValueInput = {
    update: XOR<TenantUpdateWithoutFilePropertyValueInput, TenantUncheckedUpdateWithoutFilePropertyValueInput>
    create: XOR<TenantCreateWithoutFilePropertyValueInput, TenantUncheckedCreateWithoutFilePropertyValueInput>
  }

  export type TenantUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type FileCreateWithoutImageInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFileInput
    DailyLog?: DailyLogCreateNestedOneWithoutFileInput
    Project?: ProjectCreateNestedOneWithoutFileInput
    Tenant: TenantCreateNestedOneWithoutFileInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFileInput
  }

  export type FileUncheckedCreateWithoutImageInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFileInput
  }

  export type FileCreateOrConnectWithoutImageInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutImageInput, FileUncheckedCreateWithoutImageInput>
  }

  export type FileCreateManyImageInputEnvelope = {
    data: Enumerable<FileCreateManyImageInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutImage_Image_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutImage_Image_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutImage_Image_createdByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutImage_Image_createdByToUserInput, UserUncheckedCreateWithoutImage_Image_createdByToUserInput>
  }

  export type TenantCreateWithoutImageInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutImageInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutImageInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutImageInput, TenantUncheckedCreateWithoutImageInput>
  }

  export type UserCreateWithoutImage_User_imageIdToImageInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutImage_User_imageIdToImageInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutImage_User_imageIdToImageInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutImage_User_imageIdToImageInput, UserUncheckedCreateWithoutImage_User_imageIdToImageInput>
  }

  export type UserCreateManyImage_User_imageIdToImageInputEnvelope = {
    data: Enumerable<UserCreateManyImage_User_imageIdToImageInput>
    skipDuplicates?: boolean
  }

  export type FileUpsertWithWhereUniqueWithoutImageInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutImageInput, FileUncheckedUpdateWithoutImageInput>
    create: XOR<FileCreateWithoutImageInput, FileUncheckedCreateWithoutImageInput>
  }

  export type FileUpdateWithWhereUniqueWithoutImageInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutImageInput, FileUncheckedUpdateWithoutImageInput>
  }

  export type FileUpdateManyWithWhereWithoutImageInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutFileInput>
  }

  export type UserUpsertWithoutImage_Image_createdByToUserInput = {
    update: XOR<UserUpdateWithoutImage_Image_createdByToUserInput, UserUncheckedUpdateWithoutImage_Image_createdByToUserInput>
    create: XOR<UserCreateWithoutImage_Image_createdByToUserInput, UserUncheckedCreateWithoutImage_Image_createdByToUserInput>
  }

  export type UserUpdateWithoutImage_Image_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutImage_Image_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutImageInput = {
    update: XOR<TenantUpdateWithoutImageInput, TenantUncheckedUpdateWithoutImageInput>
    create: XOR<TenantCreateWithoutImageInput, TenantUncheckedCreateWithoutImageInput>
  }

  export type TenantUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutImage_User_imageIdToImageInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutImage_User_imageIdToImageInput, UserUncheckedUpdateWithoutImage_User_imageIdToImageInput>
    create: XOR<UserCreateWithoutImage_User_imageIdToImageInput, UserUncheckedCreateWithoutImage_User_imageIdToImageInput>
  }

  export type UserUpdateWithWhereUniqueWithoutImage_User_imageIdToImageInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutImage_User_imageIdToImageInput, UserUncheckedUpdateWithoutImage_User_imageIdToImageInput>
  }

  export type UserUpdateManyWithWhereWithoutImage_User_imageIdToImageInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUser_User_imageIdToImageInput>
  }

  export type UserScalarWhereInput = {
    AND?: Enumerable<UserScalarWhereInput>
    OR?: Enumerable<UserScalarWhereInput>
    NOT?: Enumerable<UserScalarWhereInput>
    id?: StringFilter | string
    email?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    preferredLanguage?: StringNullableFilter | string | null
    settings?: JsonFilter
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    imageId?: StringNullableFilter | string | null
    currentTenantId?: StringFilter | string
  }

  export type UserCreateWithoutLocationEntryInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutLocationEntryInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutLocationEntryInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutLocationEntryInput, UserUncheckedCreateWithoutLocationEntryInput>
  }

  export type DailyLogCreateWithoutLocationEntryInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogInput
    Tenant: TenantCreateNestedOneWithoutDailyLogInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutDailyLogInput
    File?: FileCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUncheckedCreateWithoutLocationEntryInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutDailyLogInput
    File?: FileUncheckedCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogCreateOrConnectWithoutLocationEntryInput = {
    where: DailyLogWhereUniqueInput
    create: XOR<DailyLogCreateWithoutLocationEntryInput, DailyLogUncheckedCreateWithoutLocationEntryInput>
  }

  export type TenantCreateWithoutLocationEntryInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutLocationEntryInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutLocationEntryInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutLocationEntryInput, TenantUncheckedCreateWithoutLocationEntryInput>
  }

  export type UserUpsertWithoutLocationEntryInput = {
    update: XOR<UserUpdateWithoutLocationEntryInput, UserUncheckedUpdateWithoutLocationEntryInput>
    create: XOR<UserCreateWithoutLocationEntryInput, UserUncheckedCreateWithoutLocationEntryInput>
  }

  export type UserUpdateWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type DailyLogUpsertWithoutLocationEntryInput = {
    update: XOR<DailyLogUpdateWithoutLocationEntryInput, DailyLogUncheckedUpdateWithoutLocationEntryInput>
    create: XOR<DailyLogCreateWithoutLocationEntryInput, DailyLogUncheckedCreateWithoutLocationEntryInput>
  }

  export type DailyLogUpdateWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutDailyLogNestedInput
    File?: FileUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutDailyLogNestedInput
    File?: FileUncheckedUpdateManyWithoutDailyLogNestedInput
  }

  export type TenantUpsertWithoutLocationEntryInput = {
    update: XOR<TenantUpdateWithoutLocationEntryInput, TenantUncheckedUpdateWithoutLocationEntryInput>
    create: XOR<TenantCreateWithoutLocationEntryInput, TenantUncheckedCreateWithoutLocationEntryInput>
  }

  export type TenantUpdateWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type FileCreateWithoutProjectInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFileInput
    DailyLog?: DailyLogCreateNestedOneWithoutFileInput
    Image: ImageCreateNestedOneWithoutFileInput
    Tenant: TenantCreateNestedOneWithoutFileInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFileInput
  }

  export type FileUncheckedCreateWithoutProjectInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    dailyLogId?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFileInput
  }

  export type FileCreateOrConnectWithoutProjectInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutProjectInput, FileUncheckedCreateWithoutProjectInput>
  }

  export type FileCreateManyProjectInputEnvelope = {
    data: Enumerable<FileCreateManyProjectInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutProjectInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutProjectInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutProjectInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProjectInput, UserUncheckedCreateWithoutProjectInput>
  }

  export type TenantCreateWithoutProjectInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutProjectInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutProjectInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutProjectInput, TenantUncheckedCreateWithoutProjectInput>
  }

  export type ProjectPropertyValueCreateWithoutProjectInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyValueInput
    ProjectProperty: ProjectPropertyCreateNestedOneWithoutProjectPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutProjectPropertyValueInput
  }

  export type ProjectPropertyValueUncheckedCreateWithoutProjectInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectPropertyId: string
    tenantId: string
  }

  export type ProjectPropertyValueCreateOrConnectWithoutProjectInput = {
    where: ProjectPropertyValueWhereUniqueInput
    create: XOR<ProjectPropertyValueCreateWithoutProjectInput, ProjectPropertyValueUncheckedCreateWithoutProjectInput>
  }

  export type ProjectPropertyValueCreateManyProjectInputEnvelope = {
    data: Enumerable<ProjectPropertyValueCreateManyProjectInput>
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutProjectInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutProjectInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutProjectInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutProjectInput, TaskUncheckedCreateWithoutProjectInput>
  }

  export type TaskCreateManyProjectInputEnvelope = {
    data: Enumerable<TaskCreateManyProjectInput>
    skipDuplicates?: boolean
  }

  export type FileUpsertWithWhereUniqueWithoutProjectInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutProjectInput, FileUncheckedUpdateWithoutProjectInput>
    create: XOR<FileCreateWithoutProjectInput, FileUncheckedCreateWithoutProjectInput>
  }

  export type FileUpdateWithWhereUniqueWithoutProjectInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutProjectInput, FileUncheckedUpdateWithoutProjectInput>
  }

  export type FileUpdateManyWithWhereWithoutProjectInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutFileInput>
  }

  export type UserUpsertWithoutProjectInput = {
    update: XOR<UserUpdateWithoutProjectInput, UserUncheckedUpdateWithoutProjectInput>
    create: XOR<UserCreateWithoutProjectInput, UserUncheckedCreateWithoutProjectInput>
  }

  export type UserUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutProjectInput = {
    update: XOR<TenantUpdateWithoutProjectInput, TenantUncheckedUpdateWithoutProjectInput>
    create: XOR<TenantCreateWithoutProjectInput, TenantUncheckedCreateWithoutProjectInput>
  }

  export type TenantUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ProjectPropertyValueUpsertWithWhereUniqueWithoutProjectInput = {
    where: ProjectPropertyValueWhereUniqueInput
    update: XOR<ProjectPropertyValueUpdateWithoutProjectInput, ProjectPropertyValueUncheckedUpdateWithoutProjectInput>
    create: XOR<ProjectPropertyValueCreateWithoutProjectInput, ProjectPropertyValueUncheckedCreateWithoutProjectInput>
  }

  export type ProjectPropertyValueUpdateWithWhereUniqueWithoutProjectInput = {
    where: ProjectPropertyValueWhereUniqueInput
    data: XOR<ProjectPropertyValueUpdateWithoutProjectInput, ProjectPropertyValueUncheckedUpdateWithoutProjectInput>
  }

  export type ProjectPropertyValueUpdateManyWithWhereWithoutProjectInput = {
    where: ProjectPropertyValueScalarWhereInput
    data: XOR<ProjectPropertyValueUpdateManyMutationInput, ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyValueInput>
  }

  export type ProjectPropertyValueScalarWhereInput = {
    AND?: Enumerable<ProjectPropertyValueScalarWhereInput>
    OR?: Enumerable<ProjectPropertyValueScalarWhereInput>
    NOT?: Enumerable<ProjectPropertyValueScalarWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    projectId?: StringFilter | string
    projectPropertyId?: StringFilter | string
    tenantId?: StringFilter | string
  }

  export type TaskUpsertWithWhereUniqueWithoutProjectInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutProjectInput, TaskUncheckedUpdateWithoutProjectInput>
    create: XOR<TaskCreateWithoutProjectInput, TaskUncheckedCreateWithoutProjectInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutProjectInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutProjectInput, TaskUncheckedUpdateWithoutProjectInput>
  }

  export type TaskUpdateManyWithWhereWithoutProjectInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutTaskInput>
  }

  export type TaskScalarWhereInput = {
    AND?: Enumerable<TaskScalarWhereInput>
    OR?: Enumerable<TaskScalarWhereInput>
    NOT?: Enumerable<TaskScalarWhereInput>
    id?: StringFilter | string
    description?: StringNullableFilter | string | null
    name?: StringNullableFilter | string | null
    statusId?: StringNullableFilter | string | null
    systemStatusId?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    projectId?: StringFilter | string
    tenantId?: StringFilter | string
    parentId?: StringNullableFilter | string | null
    taskStatusId?: StringNullableFilter | string | null
  }

  export type UserCreateWithoutProjectPropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutProjectPropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutProjectPropertyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProjectPropertyInput, UserUncheckedCreateWithoutProjectPropertyInput>
  }

  export type TenantCreateWithoutProjectPropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutProjectPropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutProjectPropertyInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutProjectPropertyInput, TenantUncheckedCreateWithoutProjectPropertyInput>
  }

  export type ProjectPropertyValueCreateWithoutProjectPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyValueInput
    Project: ProjectCreateNestedOneWithoutProjectPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutProjectPropertyValueInput
  }

  export type ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
  }

  export type ProjectPropertyValueCreateOrConnectWithoutProjectPropertyInput = {
    where: ProjectPropertyValueWhereUniqueInput
    create: XOR<ProjectPropertyValueCreateWithoutProjectPropertyInput, ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput>
  }

  export type ProjectPropertyValueCreateManyProjectPropertyInputEnvelope = {
    data: Enumerable<ProjectPropertyValueCreateManyProjectPropertyInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutProjectPropertyInput = {
    update: XOR<UserUpdateWithoutProjectPropertyInput, UserUncheckedUpdateWithoutProjectPropertyInput>
    create: XOR<UserCreateWithoutProjectPropertyInput, UserUncheckedCreateWithoutProjectPropertyInput>
  }

  export type UserUpdateWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutProjectPropertyInput = {
    update: XOR<TenantUpdateWithoutProjectPropertyInput, TenantUncheckedUpdateWithoutProjectPropertyInput>
    create: XOR<TenantCreateWithoutProjectPropertyInput, TenantUncheckedCreateWithoutProjectPropertyInput>
  }

  export type TenantUpdateWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ProjectPropertyValueUpsertWithWhereUniqueWithoutProjectPropertyInput = {
    where: ProjectPropertyValueWhereUniqueInput
    update: XOR<ProjectPropertyValueUpdateWithoutProjectPropertyInput, ProjectPropertyValueUncheckedUpdateWithoutProjectPropertyInput>
    create: XOR<ProjectPropertyValueCreateWithoutProjectPropertyInput, ProjectPropertyValueUncheckedCreateWithoutProjectPropertyInput>
  }

  export type ProjectPropertyValueUpdateWithWhereUniqueWithoutProjectPropertyInput = {
    where: ProjectPropertyValueWhereUniqueInput
    data: XOR<ProjectPropertyValueUpdateWithoutProjectPropertyInput, ProjectPropertyValueUncheckedUpdateWithoutProjectPropertyInput>
  }

  export type ProjectPropertyValueUpdateManyWithWhereWithoutProjectPropertyInput = {
    where: ProjectPropertyValueScalarWhereInput
    data: XOR<ProjectPropertyValueUpdateManyMutationInput, ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyValueInput>
  }

  export type UserCreateWithoutProjectPropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutProjectPropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutProjectPropertyValueInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProjectPropertyValueInput, UserUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type ProjectCreateWithoutProjectPropertyValueInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutProjectInput
    User?: UserCreateNestedOneWithoutProjectInput
    Tenant: TenantCreateNestedOneWithoutProjectInput
    Task?: TaskCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutProjectPropertyValueInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutProjectInput
    Task?: TaskUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutProjectPropertyValueInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutProjectPropertyValueInput, ProjectUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type ProjectPropertyCreateWithoutProjectPropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyInput
    Tenant: TenantCreateNestedOneWithoutProjectPropertyInput
  }

  export type ProjectPropertyUncheckedCreateWithoutProjectPropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type ProjectPropertyCreateOrConnectWithoutProjectPropertyValueInput = {
    where: ProjectPropertyWhereUniqueInput
    create: XOR<ProjectPropertyCreateWithoutProjectPropertyValueInput, ProjectPropertyUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type TenantCreateWithoutProjectPropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutProjectPropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutProjectPropertyValueInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutProjectPropertyValueInput, TenantUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type UserUpsertWithoutProjectPropertyValueInput = {
    update: XOR<UserUpdateWithoutProjectPropertyValueInput, UserUncheckedUpdateWithoutProjectPropertyValueInput>
    create: XOR<UserCreateWithoutProjectPropertyValueInput, UserUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type UserUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type ProjectUpsertWithoutProjectPropertyValueInput = {
    update: XOR<ProjectUpdateWithoutProjectPropertyValueInput, ProjectUncheckedUpdateWithoutProjectPropertyValueInput>
    create: XOR<ProjectCreateWithoutProjectPropertyValueInput, ProjectUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type ProjectUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutProjectNestedInput
    User?: UserUpdateOneWithoutProjectNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectNestedInput
    Task?: TaskUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutProjectNestedInput
    Task?: TaskUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectPropertyUpsertWithoutProjectPropertyValueInput = {
    update: XOR<ProjectPropertyUpdateWithoutProjectPropertyValueInput, ProjectPropertyUncheckedUpdateWithoutProjectPropertyValueInput>
    create: XOR<ProjectPropertyCreateWithoutProjectPropertyValueInput, ProjectPropertyUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type ProjectPropertyUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyUncheckedUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUpsertWithoutProjectPropertyValueInput = {
    update: XOR<TenantUpdateWithoutProjectPropertyValueInput, TenantUncheckedUpdateWithoutProjectPropertyValueInput>
    create: XOR<TenantCreateWithoutProjectPropertyValueInput, TenantUncheckedCreateWithoutProjectPropertyValueInput>
  }

  export type TenantUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type DailyLogItemCreateWithoutTaskInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogItemInput
    DailyLog: DailyLogCreateNestedOneWithoutDailyLogItemInput
    Equipment?: EquipmentCreateNestedOneWithoutDailyLogItemInput
    Tenant: TenantCreateNestedOneWithoutDailyLogItemInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateWithoutTaskInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemCreateOrConnectWithoutTaskInput = {
    where: DailyLogItemWhereUniqueInput
    create: XOR<DailyLogItemCreateWithoutTaskInput, DailyLogItemUncheckedCreateWithoutTaskInput>
  }

  export type DailyLogItemCreateManyTaskInputEnvelope = {
    data: Enumerable<DailyLogItemCreateManyTaskInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTaskInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTaskInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTaskInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
  }

  export type TaskCreateWithoutOther_TaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutOther_TaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutOther_TaskInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutOther_TaskInput, TaskUncheckedCreateWithoutOther_TaskInput>
  }

  export type TaskCreateWithoutTaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutTaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutTaskInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutTaskInput, TaskUncheckedCreateWithoutTaskInput>
  }

  export type TaskCreateManyTaskInputEnvelope = {
    data: Enumerable<TaskCreateManyTaskInput>
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutTaskInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutProjectInput
    User?: UserCreateNestedOneWithoutProjectInput
    Tenant: TenantCreateNestedOneWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutTaskInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutTaskInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutTaskInput, ProjectUncheckedCreateWithoutTaskInput>
  }

  export type TaskStatusCreateWithoutTaskInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskStatusInput
    Tenant: TenantCreateNestedOneWithoutTaskStatusInput
  }

  export type TaskStatusUncheckedCreateWithoutTaskInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type TaskStatusCreateOrConnectWithoutTaskInput = {
    where: TaskStatusWhereUniqueInput
    create: XOR<TaskStatusCreateWithoutTaskInput, TaskStatusUncheckedCreateWithoutTaskInput>
  }

  export type TenantCreateWithoutTaskInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTaskInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTaskInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTaskInput, TenantUncheckedCreateWithoutTaskInput>
  }

  export type TaskPropertyValueCreateWithoutTaskInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyValueInput
    TaskProperty: TaskPropertyCreateNestedOneWithoutTaskPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutTaskPropertyValueInput
  }

  export type TaskPropertyValueUncheckedCreateWithoutTaskInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskPropertyId: string
    tenantId: string
  }

  export type TaskPropertyValueCreateOrConnectWithoutTaskInput = {
    where: TaskPropertyValueWhereUniqueInput
    create: XOR<TaskPropertyValueCreateWithoutTaskInput, TaskPropertyValueUncheckedCreateWithoutTaskInput>
  }

  export type TaskPropertyValueCreateManyTaskInputEnvelope = {
    data: Enumerable<TaskPropertyValueCreateManyTaskInput>
    skipDuplicates?: boolean
  }

  export type UserTaskCreateWithoutTaskInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_UserTask_createdByToUser?: UserCreateNestedOneWithoutUserTask_UserTask_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutUserTaskInput
    User_UserTask_userIdToUser: UserCreateNestedOneWithoutUserTask_UserTask_userIdToUserInput
  }

  export type UserTaskUncheckedCreateWithoutTaskInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    userId: string
  }

  export type UserTaskCreateOrConnectWithoutTaskInput = {
    where: UserTaskWhereUniqueInput
    create: XOR<UserTaskCreateWithoutTaskInput, UserTaskUncheckedCreateWithoutTaskInput>
  }

  export type UserTaskCreateManyTaskInputEnvelope = {
    data: Enumerable<UserTaskCreateManyTaskInput>
    skipDuplicates?: boolean
  }

  export type DailyLogItemUpsertWithWhereUniqueWithoutTaskInput = {
    where: DailyLogItemWhereUniqueInput
    update: XOR<DailyLogItemUpdateWithoutTaskInput, DailyLogItemUncheckedUpdateWithoutTaskInput>
    create: XOR<DailyLogItemCreateWithoutTaskInput, DailyLogItemUncheckedCreateWithoutTaskInput>
  }

  export type DailyLogItemUpdateWithWhereUniqueWithoutTaskInput = {
    where: DailyLogItemWhereUniqueInput
    data: XOR<DailyLogItemUpdateWithoutTaskInput, DailyLogItemUncheckedUpdateWithoutTaskInput>
  }

  export type DailyLogItemUpdateManyWithWhereWithoutTaskInput = {
    where: DailyLogItemScalarWhereInput
    data: XOR<DailyLogItemUpdateManyMutationInput, DailyLogItemUncheckedUpdateManyWithoutDailyLogItemInput>
  }

  export type UserUpsertWithoutTaskInput = {
    update: XOR<UserUpdateWithoutTaskInput, UserUncheckedUpdateWithoutTaskInput>
    create: XOR<UserCreateWithoutTaskInput, UserUncheckedCreateWithoutTaskInput>
  }

  export type UserUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TaskUpsertWithoutOther_TaskInput = {
    update: XOR<TaskUpdateWithoutOther_TaskInput, TaskUncheckedUpdateWithoutOther_TaskInput>
    create: XOR<TaskCreateWithoutOther_TaskInput, TaskUncheckedCreateWithoutOther_TaskInput>
  }

  export type TaskUpdateWithoutOther_TaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutOther_TaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUpsertWithWhereUniqueWithoutTaskInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutTaskInput, TaskUncheckedUpdateWithoutTaskInput>
    create: XOR<TaskCreateWithoutTaskInput, TaskUncheckedCreateWithoutTaskInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutTaskInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutTaskInput, TaskUncheckedUpdateWithoutTaskInput>
  }

  export type TaskUpdateManyWithWhereWithoutTaskInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutOther_TaskInput>
  }

  export type ProjectUpsertWithoutTaskInput = {
    update: XOR<ProjectUpdateWithoutTaskInput, ProjectUncheckedUpdateWithoutTaskInput>
    create: XOR<ProjectCreateWithoutTaskInput, ProjectUncheckedCreateWithoutTaskInput>
  }

  export type ProjectUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutProjectNestedInput
    User?: UserUpdateOneWithoutProjectNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type TaskStatusUpsertWithoutTaskInput = {
    update: XOR<TaskStatusUpdateWithoutTaskInput, TaskStatusUncheckedUpdateWithoutTaskInput>
    create: XOR<TaskStatusCreateWithoutTaskInput, TaskStatusUncheckedCreateWithoutTaskInput>
  }

  export type TaskStatusUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskStatusNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskStatusNestedInput
  }

  export type TaskStatusUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUpsertWithoutTaskInput = {
    update: XOR<TenantUpdateWithoutTaskInput, TenantUncheckedUpdateWithoutTaskInput>
    create: XOR<TenantCreateWithoutTaskInput, TenantUncheckedCreateWithoutTaskInput>
  }

  export type TenantUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TaskPropertyValueUpsertWithWhereUniqueWithoutTaskInput = {
    where: TaskPropertyValueWhereUniqueInput
    update: XOR<TaskPropertyValueUpdateWithoutTaskInput, TaskPropertyValueUncheckedUpdateWithoutTaskInput>
    create: XOR<TaskPropertyValueCreateWithoutTaskInput, TaskPropertyValueUncheckedCreateWithoutTaskInput>
  }

  export type TaskPropertyValueUpdateWithWhereUniqueWithoutTaskInput = {
    where: TaskPropertyValueWhereUniqueInput
    data: XOR<TaskPropertyValueUpdateWithoutTaskInput, TaskPropertyValueUncheckedUpdateWithoutTaskInput>
  }

  export type TaskPropertyValueUpdateManyWithWhereWithoutTaskInput = {
    where: TaskPropertyValueScalarWhereInput
    data: XOR<TaskPropertyValueUpdateManyMutationInput, TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyValueInput>
  }

  export type TaskPropertyValueScalarWhereInput = {
    AND?: Enumerable<TaskPropertyValueScalarWhereInput>
    OR?: Enumerable<TaskPropertyValueScalarWhereInput>
    NOT?: Enumerable<TaskPropertyValueScalarWhereInput>
    id?: StringFilter | string
    value?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    taskPropertyId?: StringFilter | string
    taskId?: StringFilter | string
    tenantId?: StringFilter | string
  }

  export type UserTaskUpsertWithWhereUniqueWithoutTaskInput = {
    where: UserTaskWhereUniqueInput
    update: XOR<UserTaskUpdateWithoutTaskInput, UserTaskUncheckedUpdateWithoutTaskInput>
    create: XOR<UserTaskCreateWithoutTaskInput, UserTaskUncheckedCreateWithoutTaskInput>
  }

  export type UserTaskUpdateWithWhereUniqueWithoutTaskInput = {
    where: UserTaskWhereUniqueInput
    data: XOR<UserTaskUpdateWithoutTaskInput, UserTaskUncheckedUpdateWithoutTaskInput>
  }

  export type UserTaskUpdateManyWithWhereWithoutTaskInput = {
    where: UserTaskScalarWhereInput
    data: XOR<UserTaskUpdateManyMutationInput, UserTaskUncheckedUpdateManyWithoutUserTaskInput>
  }

  export type UserTaskScalarWhereInput = {
    AND?: Enumerable<UserTaskScalarWhereInput>
    OR?: Enumerable<UserTaskScalarWhereInput>
    NOT?: Enumerable<UserTaskScalarWhereInput>
    id?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    taskId?: StringFilter | string
    tenantId?: StringFilter | string
    userId?: StringFilter | string
  }

  export type UserCreateWithoutTaskPropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTaskPropertyInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTaskPropertyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskPropertyInput, UserUncheckedCreateWithoutTaskPropertyInput>
  }

  export type TenantCreateWithoutTaskPropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTaskPropertyInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTaskPropertyInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTaskPropertyInput, TenantUncheckedCreateWithoutTaskPropertyInput>
  }

  export type TaskPropertyValueCreateWithoutTaskPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyValueInput
    Task: TaskCreateNestedOneWithoutTaskPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutTaskPropertyValueInput
  }

  export type TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    tenantId: string
  }

  export type TaskPropertyValueCreateOrConnectWithoutTaskPropertyInput = {
    where: TaskPropertyValueWhereUniqueInput
    create: XOR<TaskPropertyValueCreateWithoutTaskPropertyInput, TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput>
  }

  export type TaskPropertyValueCreateManyTaskPropertyInputEnvelope = {
    data: Enumerable<TaskPropertyValueCreateManyTaskPropertyInput>
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutTaskPropertyInput = {
    update: XOR<UserUpdateWithoutTaskPropertyInput, UserUncheckedUpdateWithoutTaskPropertyInput>
    create: XOR<UserCreateWithoutTaskPropertyInput, UserUncheckedCreateWithoutTaskPropertyInput>
  }

  export type UserUpdateWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutTaskPropertyInput = {
    update: XOR<TenantUpdateWithoutTaskPropertyInput, TenantUncheckedUpdateWithoutTaskPropertyInput>
    create: XOR<TenantCreateWithoutTaskPropertyInput, TenantUncheckedCreateWithoutTaskPropertyInput>
  }

  export type TenantUpdateWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TaskPropertyValueUpsertWithWhereUniqueWithoutTaskPropertyInput = {
    where: TaskPropertyValueWhereUniqueInput
    update: XOR<TaskPropertyValueUpdateWithoutTaskPropertyInput, TaskPropertyValueUncheckedUpdateWithoutTaskPropertyInput>
    create: XOR<TaskPropertyValueCreateWithoutTaskPropertyInput, TaskPropertyValueUncheckedCreateWithoutTaskPropertyInput>
  }

  export type TaskPropertyValueUpdateWithWhereUniqueWithoutTaskPropertyInput = {
    where: TaskPropertyValueWhereUniqueInput
    data: XOR<TaskPropertyValueUpdateWithoutTaskPropertyInput, TaskPropertyValueUncheckedUpdateWithoutTaskPropertyInput>
  }

  export type TaskPropertyValueUpdateManyWithWhereWithoutTaskPropertyInput = {
    where: TaskPropertyValueScalarWhereInput
    data: XOR<TaskPropertyValueUpdateManyMutationInput, TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyValueInput>
  }

  export type UserCreateWithoutTaskPropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTaskPropertyValueInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTaskPropertyValueInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskPropertyValueInput, UserUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type TaskCreateWithoutTaskPropertyValueInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutTaskPropertyValueInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutTaskPropertyValueInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutTaskPropertyValueInput, TaskUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type TaskPropertyCreateWithoutTaskPropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyInput
    Tenant: TenantCreateNestedOneWithoutTaskPropertyInput
  }

  export type TaskPropertyUncheckedCreateWithoutTaskPropertyValueInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type TaskPropertyCreateOrConnectWithoutTaskPropertyValueInput = {
    where: TaskPropertyWhereUniqueInput
    create: XOR<TaskPropertyCreateWithoutTaskPropertyValueInput, TaskPropertyUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type TenantCreateWithoutTaskPropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTaskPropertyValueInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTaskPropertyValueInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTaskPropertyValueInput, TenantUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type UserUpsertWithoutTaskPropertyValueInput = {
    update: XOR<UserUpdateWithoutTaskPropertyValueInput, UserUncheckedUpdateWithoutTaskPropertyValueInput>
    create: XOR<UserCreateWithoutTaskPropertyValueInput, UserUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type UserUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TaskUpsertWithoutTaskPropertyValueInput = {
    update: XOR<TaskUpdateWithoutTaskPropertyValueInput, TaskUncheckedUpdateWithoutTaskPropertyValueInput>
    create: XOR<TaskCreateWithoutTaskPropertyValueInput, TaskUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type TaskUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskPropertyUpsertWithoutTaskPropertyValueInput = {
    update: XOR<TaskPropertyUpdateWithoutTaskPropertyValueInput, TaskPropertyUncheckedUpdateWithoutTaskPropertyValueInput>
    create: XOR<TaskPropertyCreateWithoutTaskPropertyValueInput, TaskPropertyUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type TaskPropertyUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyUncheckedUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUpsertWithoutTaskPropertyValueInput = {
    update: XOR<TenantUpdateWithoutTaskPropertyValueInput, TenantUncheckedUpdateWithoutTaskPropertyValueInput>
    create: XOR<TenantCreateWithoutTaskPropertyValueInput, TenantUncheckedCreateWithoutTaskPropertyValueInput>
  }

  export type TenantUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TaskCreateWithoutTaskStatusInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutTaskStatusInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutTaskStatusInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutTaskStatusInput, TaskUncheckedCreateWithoutTaskStatusInput>
  }

  export type TaskCreateManyTaskStatusInputEnvelope = {
    data: Enumerable<TaskCreateManyTaskStatusInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTaskStatusInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTaskStatusInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTaskStatusInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTaskStatusInput, UserUncheckedCreateWithoutTaskStatusInput>
  }

  export type TenantCreateWithoutTaskStatusInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTaskStatusInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTaskStatusInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTaskStatusInput, TenantUncheckedCreateWithoutTaskStatusInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutTaskStatusInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutTaskStatusInput, TaskUncheckedUpdateWithoutTaskStatusInput>
    create: XOR<TaskCreateWithoutTaskStatusInput, TaskUncheckedCreateWithoutTaskStatusInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutTaskStatusInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutTaskStatusInput, TaskUncheckedUpdateWithoutTaskStatusInput>
  }

  export type TaskUpdateManyWithWhereWithoutTaskStatusInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutTaskInput>
  }

  export type UserUpsertWithoutTaskStatusInput = {
    update: XOR<UserUpdateWithoutTaskStatusInput, UserUncheckedUpdateWithoutTaskStatusInput>
    create: XOR<UserCreateWithoutTaskStatusInput, UserUncheckedCreateWithoutTaskStatusInput>
  }

  export type UserUpdateWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutTaskStatusInput = {
    update: XOR<TenantUpdateWithoutTaskStatusInput, TenantUncheckedUpdateWithoutTaskStatusInput>
    create: XOR<TenantCreateWithoutTaskStatusInput, TenantUncheckedCreateWithoutTaskStatusInput>
  }

  export type TenantUpdateWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ApiKeyCreateWithoutTenantInput = {
    id: string
    name: string
    createdAt: Date | string
    User?: UserCreateNestedOneWithoutApiKeyInput
  }

  export type ApiKeyUncheckedCreateWithoutTenantInput = {
    id: string
    name: string
    createdAt: Date | string
    userId?: string | null
  }

  export type ApiKeyCreateOrConnectWithoutTenantInput = {
    where: ApiKeyWhereUniqueInput
    create: XOR<ApiKeyCreateWithoutTenantInput, ApiKeyUncheckedCreateWithoutTenantInput>
  }

  export type ApiKeyCreateManyTenantInputEnvelope = {
    data: Enumerable<ApiKeyCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type DailyLogCreateWithoutTenantInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutDailyLogInput
    File?: FileCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUncheckedCreateWithoutTenantInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutDailyLogInput
    File?: FileUncheckedCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogCreateOrConnectWithoutTenantInput = {
    where: DailyLogWhereUniqueInput
    create: XOR<DailyLogCreateWithoutTenantInput, DailyLogUncheckedCreateWithoutTenantInput>
  }

  export type DailyLogCreateManyTenantInputEnvelope = {
    data: Enumerable<DailyLogCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type DailyLogItemCreateWithoutTenantInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogItemInput
    DailyLog: DailyLogCreateNestedOneWithoutDailyLogItemInput
    Equipment?: EquipmentCreateNestedOneWithoutDailyLogItemInput
    Task?: TaskCreateNestedOneWithoutDailyLogItemInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateWithoutTenantInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    equipmentId?: string | null
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemCreateOrConnectWithoutTenantInput = {
    where: DailyLogItemWhereUniqueInput
    create: XOR<DailyLogItemCreateWithoutTenantInput, DailyLogItemUncheckedCreateWithoutTenantInput>
  }

  export type DailyLogItemCreateManyTenantInputEnvelope = {
    data: Enumerable<DailyLogItemCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type EquipmentCreateWithoutTenantInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutEquipmentInput
    User_Equipment_createdByToUser?: UserCreateNestedOneWithoutEquipment_Equipment_createdByToUserInput
    User_Equipment_userIdToUser?: UserCreateNestedOneWithoutEquipment_Equipment_userIdToUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutTenantInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    userId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutEquipmentInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutTenantInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutTenantInput, EquipmentUncheckedCreateWithoutTenantInput>
  }

  export type EquipmentCreateManyTenantInputEnvelope = {
    data: Enumerable<EquipmentCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type EquipmentPropertyCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyUncheckedCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyCreateOrConnectWithoutTenantInput = {
    where: EquipmentPropertyWhereUniqueInput
    create: XOR<EquipmentPropertyCreateWithoutTenantInput, EquipmentPropertyUncheckedCreateWithoutTenantInput>
  }

  export type EquipmentPropertyCreateManyTenantInputEnvelope = {
    data: Enumerable<EquipmentPropertyCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type EquipmentPropertyValueCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutEquipmentPropertyValueInput
    Equipment: EquipmentCreateNestedOneWithoutEquipmentPropertyValueInput
    EquipmentProperty: EquipmentPropertyCreateNestedOneWithoutEquipmentPropertyValueInput
  }

  export type EquipmentPropertyValueUncheckedCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentId: string
    equipmentPropertyId: string
  }

  export type EquipmentPropertyValueCreateOrConnectWithoutTenantInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    create: XOR<EquipmentPropertyValueCreateWithoutTenantInput, EquipmentPropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type EquipmentPropertyValueCreateManyTenantInputEnvelope = {
    data: Enumerable<EquipmentPropertyValueCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type FeedbackCreateWithoutTenantInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFeedbackInput
  }

  export type FeedbackUncheckedCreateWithoutTenantInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type FeedbackCreateOrConnectWithoutTenantInput = {
    where: FeedbackWhereUniqueInput
    create: XOR<FeedbackCreateWithoutTenantInput, FeedbackUncheckedCreateWithoutTenantInput>
  }

  export type FeedbackCreateManyTenantInputEnvelope = {
    data: Enumerable<FeedbackCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type FileCreateWithoutTenantInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFileInput
    DailyLog?: DailyLogCreateNestedOneWithoutFileInput
    Image: ImageCreateNestedOneWithoutFileInput
    Project?: ProjectCreateNestedOneWithoutFileInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFileInput
  }

  export type FileUncheckedCreateWithoutTenantInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    projectId?: string | null
    dailyLogId?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFileInput
  }

  export type FileCreateOrConnectWithoutTenantInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutTenantInput, FileUncheckedCreateWithoutTenantInput>
  }

  export type FileCreateManyTenantInputEnvelope = {
    data: Enumerable<FileCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type FilePropertyCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFilePropertyInput
  }

  export type FilePropertyUncheckedCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFilePropertyInput
  }

  export type FilePropertyCreateOrConnectWithoutTenantInput = {
    where: FilePropertyWhereUniqueInput
    create: XOR<FilePropertyCreateWithoutTenantInput, FilePropertyUncheckedCreateWithoutTenantInput>
  }

  export type FilePropertyCreateManyTenantInputEnvelope = {
    data: Enumerable<FilePropertyCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type FilePropertyValueCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutFilePropertyValueInput
    File: FileCreateNestedOneWithoutFilePropertyValueInput
    FileProperty: FilePropertyCreateNestedOneWithoutFilePropertyValueInput
  }

  export type FilePropertyValueUncheckedCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    fileId: string
    propertyId: string
  }

  export type FilePropertyValueCreateOrConnectWithoutTenantInput = {
    where: FilePropertyValueWhereUniqueInput
    create: XOR<FilePropertyValueCreateWithoutTenantInput, FilePropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type FilePropertyValueCreateManyTenantInputEnvelope = {
    data: Enumerable<FilePropertyValueCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type ImageCreateWithoutTenantInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutImageInput
    User_Image_createdByToUser?: UserCreateNestedOneWithoutImage_Image_createdByToUserInput
    User_User_imageIdToImage?: UserCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageUncheckedCreateWithoutTenantInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    File?: FileUncheckedCreateNestedManyWithoutImageInput
    User_User_imageIdToImage?: UserUncheckedCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageCreateOrConnectWithoutTenantInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutTenantInput, ImageUncheckedCreateWithoutTenantInput>
  }

  export type ImageCreateManyTenantInputEnvelope = {
    data: Enumerable<ImageCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type LocationEntryCreateWithoutTenantInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutLocationEntryInput
    DailyLog: DailyLogCreateNestedOneWithoutLocationEntryInput
  }

  export type LocationEntryUncheckedCreateWithoutTenantInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    dailyLogId: string
  }

  export type LocationEntryCreateOrConnectWithoutTenantInput = {
    where: LocationEntryWhereUniqueInput
    create: XOR<LocationEntryCreateWithoutTenantInput, LocationEntryUncheckedCreateWithoutTenantInput>
  }

  export type LocationEntryCreateManyTenantInputEnvelope = {
    data: Enumerable<LocationEntryCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutTenantInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutProjectInput
    User?: UserCreateNestedOneWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectInput
    Task?: TaskCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutTenantInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    File?: FileUncheckedCreateNestedManyWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectInput
    Task?: TaskUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutTenantInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutTenantInput, ProjectUncheckedCreateWithoutTenantInput>
  }

  export type ProjectCreateManyTenantInputEnvelope = {
    data: Enumerable<ProjectCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type ProjectPropertyCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectPropertyInput
  }

  export type ProjectPropertyUncheckedCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectPropertyInput
  }

  export type ProjectPropertyCreateOrConnectWithoutTenantInput = {
    where: ProjectPropertyWhereUniqueInput
    create: XOR<ProjectPropertyCreateWithoutTenantInput, ProjectPropertyUncheckedCreateWithoutTenantInput>
  }

  export type ProjectPropertyCreateManyTenantInputEnvelope = {
    data: Enumerable<ProjectPropertyCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type ProjectPropertyValueCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutProjectPropertyValueInput
    Project: ProjectCreateNestedOneWithoutProjectPropertyValueInput
    ProjectProperty: ProjectPropertyCreateNestedOneWithoutProjectPropertyValueInput
  }

  export type ProjectPropertyValueUncheckedCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    projectPropertyId: string
  }

  export type ProjectPropertyValueCreateOrConnectWithoutTenantInput = {
    where: ProjectPropertyValueWhereUniqueInput
    create: XOR<ProjectPropertyValueCreateWithoutTenantInput, ProjectPropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type ProjectPropertyValueCreateManyTenantInputEnvelope = {
    data: Enumerable<ProjectPropertyValueCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutTenantInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutTenantInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutTenantInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutTenantInput, TaskUncheckedCreateWithoutTenantInput>
  }

  export type TaskCreateManyTenantInputEnvelope = {
    data: Enumerable<TaskCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type TaskPropertyCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskPropertyInput
  }

  export type TaskPropertyUncheckedCreateWithoutTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskPropertyInput
  }

  export type TaskPropertyCreateOrConnectWithoutTenantInput = {
    where: TaskPropertyWhereUniqueInput
    create: XOR<TaskPropertyCreateWithoutTenantInput, TaskPropertyUncheckedCreateWithoutTenantInput>
  }

  export type TaskPropertyCreateManyTenantInputEnvelope = {
    data: Enumerable<TaskPropertyCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type TaskPropertyValueCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutTaskPropertyValueInput
    Task: TaskCreateNestedOneWithoutTaskPropertyValueInput
    TaskProperty: TaskPropertyCreateNestedOneWithoutTaskPropertyValueInput
  }

  export type TaskPropertyValueUncheckedCreateWithoutTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskPropertyId: string
    taskId: string
  }

  export type TaskPropertyValueCreateOrConnectWithoutTenantInput = {
    where: TaskPropertyValueWhereUniqueInput
    create: XOR<TaskPropertyValueCreateWithoutTenantInput, TaskPropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type TaskPropertyValueCreateManyTenantInputEnvelope = {
    data: Enumerable<TaskPropertyValueCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type TaskStatusCreateWithoutTenantInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Task?: TaskCreateNestedManyWithoutTaskStatusInput
    User?: UserCreateNestedOneWithoutTaskStatusInput
  }

  export type TaskStatusUncheckedCreateWithoutTenantInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    Task?: TaskUncheckedCreateNestedManyWithoutTaskStatusInput
  }

  export type TaskStatusCreateOrConnectWithoutTenantInput = {
    where: TaskStatusWhereUniqueInput
    create: XOR<TaskStatusCreateWithoutTenantInput, TaskStatusUncheckedCreateWithoutTenantInput>
  }

  export type TaskStatusCreateManyTenantInputEnvelope = {
    data: Enumerable<TaskStatusCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTenant_Tenant_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTenant_Tenant_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTenant_Tenant_createdByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTenant_Tenant_createdByToUserInput, UserUncheckedCreateWithoutTenant_Tenant_createdByToUserInput>
  }

  export type TenantUserCreateWithoutTenantInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_TenantUser_createdByToUser?: UserCreateNestedOneWithoutTenantUser_TenantUser_createdByToUserInput
    User_TenantUser_userIdToUser?: UserCreateNestedOneWithoutTenantUser_TenantUser_userIdToUserInput
  }

  export type TenantUserUncheckedCreateWithoutTenantInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    userId?: string | null
  }

  export type TenantUserCreateOrConnectWithoutTenantInput = {
    where: TenantUserWhereUniqueInput
    create: XOR<TenantUserCreateWithoutTenantInput, TenantUserUncheckedCreateWithoutTenantInput>
  }

  export type TenantUserCreateManyTenantInputEnvelope = {
    data: Enumerable<TenantUserCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type TimeBlockCreateWithoutTenantInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User: UserCreateNestedOneWithoutTimeBlockInput
    DailyLogItem: DailyLogItemCreateNestedOneWithoutTimeBlockInput
  }

  export type TimeBlockUncheckedCreateWithoutTenantInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy: string
    dailyLogItemId: string
  }

  export type TimeBlockCreateOrConnectWithoutTenantInput = {
    where: TimeBlockWhereUniqueInput
    create: XOR<TimeBlockCreateWithoutTenantInput, TimeBlockUncheckedCreateWithoutTenantInput>
  }

  export type TimeBlockCreateManyTenantInputEnvelope = {
    data: Enumerable<TimeBlockCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTenant_User_currentTenantIdToTenantInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTenant_User_currentTenantIdToTenantInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTenant_User_currentTenantIdToTenantInput, UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput>
  }

  export type UserCreateManyTenant_User_currentTenantIdToTenantInputEnvelope = {
    data: Enumerable<UserCreateManyTenant_User_currentTenantIdToTenantInput>
    skipDuplicates?: boolean
  }

  export type UserTaskCreateWithoutTenantInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_UserTask_createdByToUser?: UserCreateNestedOneWithoutUserTask_UserTask_createdByToUserInput
    Task: TaskCreateNestedOneWithoutUserTaskInput
    User_UserTask_userIdToUser: UserCreateNestedOneWithoutUserTask_UserTask_userIdToUserInput
  }

  export type UserTaskUncheckedCreateWithoutTenantInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    userId: string
  }

  export type UserTaskCreateOrConnectWithoutTenantInput = {
    where: UserTaskWhereUniqueInput
    create: XOR<UserTaskCreateWithoutTenantInput, UserTaskUncheckedCreateWithoutTenantInput>
  }

  export type UserTaskCreateManyTenantInputEnvelope = {
    data: Enumerable<UserTaskCreateManyTenantInput>
    skipDuplicates?: boolean
  }

  export type ApiKeyUpsertWithWhereUniqueWithoutTenantInput = {
    where: ApiKeyWhereUniqueInput
    update: XOR<ApiKeyUpdateWithoutTenantInput, ApiKeyUncheckedUpdateWithoutTenantInput>
    create: XOR<ApiKeyCreateWithoutTenantInput, ApiKeyUncheckedCreateWithoutTenantInput>
  }

  export type ApiKeyUpdateWithWhereUniqueWithoutTenantInput = {
    where: ApiKeyWhereUniqueInput
    data: XOR<ApiKeyUpdateWithoutTenantInput, ApiKeyUncheckedUpdateWithoutTenantInput>
  }

  export type ApiKeyUpdateManyWithWhereWithoutTenantInput = {
    where: ApiKeyScalarWhereInput
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyWithoutApiKeyInput>
  }

  export type ApiKeyScalarWhereInput = {
    AND?: Enumerable<ApiKeyScalarWhereInput>
    OR?: Enumerable<ApiKeyScalarWhereInput>
    NOT?: Enumerable<ApiKeyScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    tenantId?: StringFilter | string
    userId?: StringNullableFilter | string | null
  }

  export type DailyLogUpsertWithWhereUniqueWithoutTenantInput = {
    where: DailyLogWhereUniqueInput
    update: XOR<DailyLogUpdateWithoutTenantInput, DailyLogUncheckedUpdateWithoutTenantInput>
    create: XOR<DailyLogCreateWithoutTenantInput, DailyLogUncheckedCreateWithoutTenantInput>
  }

  export type DailyLogUpdateWithWhereUniqueWithoutTenantInput = {
    where: DailyLogWhereUniqueInput
    data: XOR<DailyLogUpdateWithoutTenantInput, DailyLogUncheckedUpdateWithoutTenantInput>
  }

  export type DailyLogUpdateManyWithWhereWithoutTenantInput = {
    where: DailyLogScalarWhereInput
    data: XOR<DailyLogUpdateManyMutationInput, DailyLogUncheckedUpdateManyWithoutDailyLogInput>
  }

  export type DailyLogScalarWhereInput = {
    AND?: Enumerable<DailyLogScalarWhereInput>
    OR?: Enumerable<DailyLogScalarWhereInput>
    NOT?: Enumerable<DailyLogScalarWhereInput>
    id?: StringFilter | string
    date?: DateTimeNullableFilter | Date | string | null
    status?: StringFilter | string
    note?: StringFilter | string
    rating?: IntFilter | number
    ratingNote?: StringFilter | string
    managerNote?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type DailyLogItemUpsertWithWhereUniqueWithoutTenantInput = {
    where: DailyLogItemWhereUniqueInput
    update: XOR<DailyLogItemUpdateWithoutTenantInput, DailyLogItemUncheckedUpdateWithoutTenantInput>
    create: XOR<DailyLogItemCreateWithoutTenantInput, DailyLogItemUncheckedCreateWithoutTenantInput>
  }

  export type DailyLogItemUpdateWithWhereUniqueWithoutTenantInput = {
    where: DailyLogItemWhereUniqueInput
    data: XOR<DailyLogItemUpdateWithoutTenantInput, DailyLogItemUncheckedUpdateWithoutTenantInput>
  }

  export type DailyLogItemUpdateManyWithWhereWithoutTenantInput = {
    where: DailyLogItemScalarWhereInput
    data: XOR<DailyLogItemUpdateManyMutationInput, DailyLogItemUncheckedUpdateManyWithoutDailyLogItemInput>
  }

  export type EquipmentUpsertWithWhereUniqueWithoutTenantInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUpdateWithoutTenantInput, EquipmentUncheckedUpdateWithoutTenantInput>
    create: XOR<EquipmentCreateWithoutTenantInput, EquipmentUncheckedCreateWithoutTenantInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutTenantInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUpdateWithoutTenantInput, EquipmentUncheckedUpdateWithoutTenantInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutTenantInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyWithoutEquipmentInput>
  }

  export type EquipmentScalarWhereInput = {
    AND?: Enumerable<EquipmentScalarWhereInput>
    OR?: Enumerable<EquipmentScalarWhereInput>
    NOT?: Enumerable<EquipmentScalarWhereInput>
    id?: StringFilter | string
    name?: StringNullableFilter | string | null
    type?: StringNullableFilter | string | null
    organization?: StringNullableFilter | string | null
    description?: StringNullableFilter | string | null
    updatedAt?: DateTimeFilter | Date | string
    createdAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
    userId?: StringNullableFilter | string | null
  }

  export type EquipmentPropertyUpsertWithWhereUniqueWithoutTenantInput = {
    where: EquipmentPropertyWhereUniqueInput
    update: XOR<EquipmentPropertyUpdateWithoutTenantInput, EquipmentPropertyUncheckedUpdateWithoutTenantInput>
    create: XOR<EquipmentPropertyCreateWithoutTenantInput, EquipmentPropertyUncheckedCreateWithoutTenantInput>
  }

  export type EquipmentPropertyUpdateWithWhereUniqueWithoutTenantInput = {
    where: EquipmentPropertyWhereUniqueInput
    data: XOR<EquipmentPropertyUpdateWithoutTenantInput, EquipmentPropertyUncheckedUpdateWithoutTenantInput>
  }

  export type EquipmentPropertyUpdateManyWithWhereWithoutTenantInput = {
    where: EquipmentPropertyScalarWhereInput
    data: XOR<EquipmentPropertyUpdateManyMutationInput, EquipmentPropertyUncheckedUpdateManyWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyScalarWhereInput = {
    AND?: Enumerable<EquipmentPropertyScalarWhereInput>
    OR?: Enumerable<EquipmentPropertyScalarWhereInput>
    NOT?: Enumerable<EquipmentPropertyScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type EquipmentPropertyValueUpsertWithWhereUniqueWithoutTenantInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    update: XOR<EquipmentPropertyValueUpdateWithoutTenantInput, EquipmentPropertyValueUncheckedUpdateWithoutTenantInput>
    create: XOR<EquipmentPropertyValueCreateWithoutTenantInput, EquipmentPropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type EquipmentPropertyValueUpdateWithWhereUniqueWithoutTenantInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    data: XOR<EquipmentPropertyValueUpdateWithoutTenantInput, EquipmentPropertyValueUncheckedUpdateWithoutTenantInput>
  }

  export type EquipmentPropertyValueUpdateManyWithWhereWithoutTenantInput = {
    where: EquipmentPropertyValueScalarWhereInput
    data: XOR<EquipmentPropertyValueUpdateManyMutationInput, EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyValueInput>
  }

  export type FeedbackUpsertWithWhereUniqueWithoutTenantInput = {
    where: FeedbackWhereUniqueInput
    update: XOR<FeedbackUpdateWithoutTenantInput, FeedbackUncheckedUpdateWithoutTenantInput>
    create: XOR<FeedbackCreateWithoutTenantInput, FeedbackUncheckedCreateWithoutTenantInput>
  }

  export type FeedbackUpdateWithWhereUniqueWithoutTenantInput = {
    where: FeedbackWhereUniqueInput
    data: XOR<FeedbackUpdateWithoutTenantInput, FeedbackUncheckedUpdateWithoutTenantInput>
  }

  export type FeedbackUpdateManyWithWhereWithoutTenantInput = {
    where: FeedbackScalarWhereInput
    data: XOR<FeedbackUpdateManyMutationInput, FeedbackUncheckedUpdateManyWithoutFeedbackInput>
  }

  export type FeedbackScalarWhereInput = {
    AND?: Enumerable<FeedbackScalarWhereInput>
    OR?: Enumerable<FeedbackScalarWhereInput>
    NOT?: Enumerable<FeedbackScalarWhereInput>
    id?: StringFilter | string
    text?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type FileUpsertWithWhereUniqueWithoutTenantInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutTenantInput, FileUncheckedUpdateWithoutTenantInput>
    create: XOR<FileCreateWithoutTenantInput, FileUncheckedCreateWithoutTenantInput>
  }

  export type FileUpdateWithWhereUniqueWithoutTenantInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutTenantInput, FileUncheckedUpdateWithoutTenantInput>
  }

  export type FileUpdateManyWithWhereWithoutTenantInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutFileInput>
  }

  export type FilePropertyUpsertWithWhereUniqueWithoutTenantInput = {
    where: FilePropertyWhereUniqueInput
    update: XOR<FilePropertyUpdateWithoutTenantInput, FilePropertyUncheckedUpdateWithoutTenantInput>
    create: XOR<FilePropertyCreateWithoutTenantInput, FilePropertyUncheckedCreateWithoutTenantInput>
  }

  export type FilePropertyUpdateWithWhereUniqueWithoutTenantInput = {
    where: FilePropertyWhereUniqueInput
    data: XOR<FilePropertyUpdateWithoutTenantInput, FilePropertyUncheckedUpdateWithoutTenantInput>
  }

  export type FilePropertyUpdateManyWithWhereWithoutTenantInput = {
    where: FilePropertyScalarWhereInput
    data: XOR<FilePropertyUpdateManyMutationInput, FilePropertyUncheckedUpdateManyWithoutFilePropertyInput>
  }

  export type FilePropertyScalarWhereInput = {
    AND?: Enumerable<FilePropertyScalarWhereInput>
    OR?: Enumerable<FilePropertyScalarWhereInput>
    NOT?: Enumerable<FilePropertyScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type FilePropertyValueUpsertWithWhereUniqueWithoutTenantInput = {
    where: FilePropertyValueWhereUniqueInput
    update: XOR<FilePropertyValueUpdateWithoutTenantInput, FilePropertyValueUncheckedUpdateWithoutTenantInput>
    create: XOR<FilePropertyValueCreateWithoutTenantInput, FilePropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type FilePropertyValueUpdateWithWhereUniqueWithoutTenantInput = {
    where: FilePropertyValueWhereUniqueInput
    data: XOR<FilePropertyValueUpdateWithoutTenantInput, FilePropertyValueUncheckedUpdateWithoutTenantInput>
  }

  export type FilePropertyValueUpdateManyWithWhereWithoutTenantInput = {
    where: FilePropertyValueScalarWhereInput
    data: XOR<FilePropertyValueUpdateManyMutationInput, FilePropertyValueUncheckedUpdateManyWithoutFilePropertyValueInput>
  }

  export type ImageUpsertWithWhereUniqueWithoutTenantInput = {
    where: ImageWhereUniqueInput
    update: XOR<ImageUpdateWithoutTenantInput, ImageUncheckedUpdateWithoutTenantInput>
    create: XOR<ImageCreateWithoutTenantInput, ImageUncheckedCreateWithoutTenantInput>
  }

  export type ImageUpdateWithWhereUniqueWithoutTenantInput = {
    where: ImageWhereUniqueInput
    data: XOR<ImageUpdateWithoutTenantInput, ImageUncheckedUpdateWithoutTenantInput>
  }

  export type ImageUpdateManyWithWhereWithoutTenantInput = {
    where: ImageScalarWhereInput
    data: XOR<ImageUpdateManyMutationInput, ImageUncheckedUpdateManyWithoutImageInput>
  }

  export type ImageScalarWhereInput = {
    AND?: Enumerable<ImageScalarWhereInput>
    OR?: Enumerable<ImageScalarWhereInput>
    NOT?: Enumerable<ImageScalarWhereInput>
    id?: StringFilter | string
    bucketId?: StringFilter | string
    blurhash?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type LocationEntryUpsertWithWhereUniqueWithoutTenantInput = {
    where: LocationEntryWhereUniqueInput
    update: XOR<LocationEntryUpdateWithoutTenantInput, LocationEntryUncheckedUpdateWithoutTenantInput>
    create: XOR<LocationEntryCreateWithoutTenantInput, LocationEntryUncheckedCreateWithoutTenantInput>
  }

  export type LocationEntryUpdateWithWhereUniqueWithoutTenantInput = {
    where: LocationEntryWhereUniqueInput
    data: XOR<LocationEntryUpdateWithoutTenantInput, LocationEntryUncheckedUpdateWithoutTenantInput>
  }

  export type LocationEntryUpdateManyWithWhereWithoutTenantInput = {
    where: LocationEntryScalarWhereInput
    data: XOR<LocationEntryUpdateManyMutationInput, LocationEntryUncheckedUpdateManyWithoutLocationEntryInput>
  }

  export type ProjectUpsertWithWhereUniqueWithoutTenantInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutTenantInput, ProjectUncheckedUpdateWithoutTenantInput>
    create: XOR<ProjectCreateWithoutTenantInput, ProjectUncheckedCreateWithoutTenantInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutTenantInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutTenantInput, ProjectUncheckedUpdateWithoutTenantInput>
  }

  export type ProjectUpdateManyWithWhereWithoutTenantInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectScalarWhereInput = {
    AND?: Enumerable<ProjectScalarWhereInput>
    OR?: Enumerable<ProjectScalarWhereInput>
    NOT?: Enumerable<ProjectScalarWhereInput>
    id?: StringFilter | string
    name?: StringNullableFilter | string | null
    progress?: FloatNullableFilter | number | null
    dueDate?: DateTimeNullableFilter | Date | string | null
    description?: StringNullableFilter | string | null
    locationLabel?: StringNullableFilter | string | null
    locationLatitude?: FloatNullableFilter | number | null
    locationLongitude?: FloatNullableFilter | number | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type ProjectPropertyUpsertWithWhereUniqueWithoutTenantInput = {
    where: ProjectPropertyWhereUniqueInput
    update: XOR<ProjectPropertyUpdateWithoutTenantInput, ProjectPropertyUncheckedUpdateWithoutTenantInput>
    create: XOR<ProjectPropertyCreateWithoutTenantInput, ProjectPropertyUncheckedCreateWithoutTenantInput>
  }

  export type ProjectPropertyUpdateWithWhereUniqueWithoutTenantInput = {
    where: ProjectPropertyWhereUniqueInput
    data: XOR<ProjectPropertyUpdateWithoutTenantInput, ProjectPropertyUncheckedUpdateWithoutTenantInput>
  }

  export type ProjectPropertyUpdateManyWithWhereWithoutTenantInput = {
    where: ProjectPropertyScalarWhereInput
    data: XOR<ProjectPropertyUpdateManyMutationInput, ProjectPropertyUncheckedUpdateManyWithoutProjectPropertyInput>
  }

  export type ProjectPropertyScalarWhereInput = {
    AND?: Enumerable<ProjectPropertyScalarWhereInput>
    OR?: Enumerable<ProjectPropertyScalarWhereInput>
    NOT?: Enumerable<ProjectPropertyScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type ProjectPropertyValueUpsertWithWhereUniqueWithoutTenantInput = {
    where: ProjectPropertyValueWhereUniqueInput
    update: XOR<ProjectPropertyValueUpdateWithoutTenantInput, ProjectPropertyValueUncheckedUpdateWithoutTenantInput>
    create: XOR<ProjectPropertyValueCreateWithoutTenantInput, ProjectPropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type ProjectPropertyValueUpdateWithWhereUniqueWithoutTenantInput = {
    where: ProjectPropertyValueWhereUniqueInput
    data: XOR<ProjectPropertyValueUpdateWithoutTenantInput, ProjectPropertyValueUncheckedUpdateWithoutTenantInput>
  }

  export type ProjectPropertyValueUpdateManyWithWhereWithoutTenantInput = {
    where: ProjectPropertyValueScalarWhereInput
    data: XOR<ProjectPropertyValueUpdateManyMutationInput, ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyValueInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutTenantInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutTenantInput, TaskUncheckedUpdateWithoutTenantInput>
    create: XOR<TaskCreateWithoutTenantInput, TaskUncheckedCreateWithoutTenantInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutTenantInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutTenantInput, TaskUncheckedUpdateWithoutTenantInput>
  }

  export type TaskUpdateManyWithWhereWithoutTenantInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutTaskInput>
  }

  export type TaskPropertyUpsertWithWhereUniqueWithoutTenantInput = {
    where: TaskPropertyWhereUniqueInput
    update: XOR<TaskPropertyUpdateWithoutTenantInput, TaskPropertyUncheckedUpdateWithoutTenantInput>
    create: XOR<TaskPropertyCreateWithoutTenantInput, TaskPropertyUncheckedCreateWithoutTenantInput>
  }

  export type TaskPropertyUpdateWithWhereUniqueWithoutTenantInput = {
    where: TaskPropertyWhereUniqueInput
    data: XOR<TaskPropertyUpdateWithoutTenantInput, TaskPropertyUncheckedUpdateWithoutTenantInput>
  }

  export type TaskPropertyUpdateManyWithWhereWithoutTenantInput = {
    where: TaskPropertyScalarWhereInput
    data: XOR<TaskPropertyUpdateManyMutationInput, TaskPropertyUncheckedUpdateManyWithoutTaskPropertyInput>
  }

  export type TaskPropertyScalarWhereInput = {
    AND?: Enumerable<TaskPropertyScalarWhereInput>
    OR?: Enumerable<TaskPropertyScalarWhereInput>
    NOT?: Enumerable<TaskPropertyScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    order?: IntFilter | number
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type TaskPropertyValueUpsertWithWhereUniqueWithoutTenantInput = {
    where: TaskPropertyValueWhereUniqueInput
    update: XOR<TaskPropertyValueUpdateWithoutTenantInput, TaskPropertyValueUncheckedUpdateWithoutTenantInput>
    create: XOR<TaskPropertyValueCreateWithoutTenantInput, TaskPropertyValueUncheckedCreateWithoutTenantInput>
  }

  export type TaskPropertyValueUpdateWithWhereUniqueWithoutTenantInput = {
    where: TaskPropertyValueWhereUniqueInput
    data: XOR<TaskPropertyValueUpdateWithoutTenantInput, TaskPropertyValueUncheckedUpdateWithoutTenantInput>
  }

  export type TaskPropertyValueUpdateManyWithWhereWithoutTenantInput = {
    where: TaskPropertyValueScalarWhereInput
    data: XOR<TaskPropertyValueUpdateManyMutationInput, TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyValueInput>
  }

  export type TaskStatusUpsertWithWhereUniqueWithoutTenantInput = {
    where: TaskStatusWhereUniqueInput
    update: XOR<TaskStatusUpdateWithoutTenantInput, TaskStatusUncheckedUpdateWithoutTenantInput>
    create: XOR<TaskStatusCreateWithoutTenantInput, TaskStatusUncheckedCreateWithoutTenantInput>
  }

  export type TaskStatusUpdateWithWhereUniqueWithoutTenantInput = {
    where: TaskStatusWhereUniqueInput
    data: XOR<TaskStatusUpdateWithoutTenantInput, TaskStatusUncheckedUpdateWithoutTenantInput>
  }

  export type TaskStatusUpdateManyWithWhereWithoutTenantInput = {
    where: TaskStatusScalarWhereInput
    data: XOR<TaskStatusUpdateManyMutationInput, TaskStatusUncheckedUpdateManyWithoutTaskStatusInput>
  }

  export type TaskStatusScalarWhereInput = {
    AND?: Enumerable<TaskStatusScalarWhereInput>
    OR?: Enumerable<TaskStatusScalarWhereInput>
    NOT?: Enumerable<TaskStatusScalarWhereInput>
    id?: StringFilter | string
    displayOrder?: IntFilter | number
    iconColor?: StringFilter | string
    name?: StringFilter | string
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type UserUpsertWithoutTenant_Tenant_createdByToUserInput = {
    update: XOR<UserUpdateWithoutTenant_Tenant_createdByToUserInput, UserUncheckedUpdateWithoutTenant_Tenant_createdByToUserInput>
    create: XOR<UserCreateWithoutTenant_Tenant_createdByToUserInput, UserUncheckedCreateWithoutTenant_Tenant_createdByToUserInput>
  }

  export type UserUpdateWithoutTenant_Tenant_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTenant_Tenant_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUserUpsertWithWhereUniqueWithoutTenantInput = {
    where: TenantUserWhereUniqueInput
    update: XOR<TenantUserUpdateWithoutTenantInput, TenantUserUncheckedUpdateWithoutTenantInput>
    create: XOR<TenantUserCreateWithoutTenantInput, TenantUserUncheckedCreateWithoutTenantInput>
  }

  export type TenantUserUpdateWithWhereUniqueWithoutTenantInput = {
    where: TenantUserWhereUniqueInput
    data: XOR<TenantUserUpdateWithoutTenantInput, TenantUserUncheckedUpdateWithoutTenantInput>
  }

  export type TenantUserUpdateManyWithWhereWithoutTenantInput = {
    where: TenantUserScalarWhereInput
    data: XOR<TenantUserUpdateManyMutationInput, TenantUserUncheckedUpdateManyWithoutTenantUserInput>
  }

  export type TenantUserScalarWhereInput = {
    AND?: Enumerable<TenantUserScalarWhereInput>
    OR?: Enumerable<TenantUserScalarWhereInput>
    NOT?: Enumerable<TenantUserScalarWhereInput>
    id?: StringFilter | string
    userRole?: StringFilter | string
    inviteEmail?: StringNullableFilter | string | null
    inviteSentAt?: DateTimeNullableFilter | Date | string | null
    inviteStatus?: StringNullableFilter | string | null
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
    userId?: StringNullableFilter | string | null
    tenantId?: StringFilter | string
  }

  export type TimeBlockUpsertWithWhereUniqueWithoutTenantInput = {
    where: TimeBlockWhereUniqueInput
    update: XOR<TimeBlockUpdateWithoutTenantInput, TimeBlockUncheckedUpdateWithoutTenantInput>
    create: XOR<TimeBlockCreateWithoutTenantInput, TimeBlockUncheckedCreateWithoutTenantInput>
  }

  export type TimeBlockUpdateWithWhereUniqueWithoutTenantInput = {
    where: TimeBlockWhereUniqueInput
    data: XOR<TimeBlockUpdateWithoutTenantInput, TimeBlockUncheckedUpdateWithoutTenantInput>
  }

  export type TimeBlockUpdateManyWithWhereWithoutTenantInput = {
    where: TimeBlockScalarWhereInput
    data: XOR<TimeBlockUpdateManyMutationInput, TimeBlockUncheckedUpdateManyWithoutTimeBlockInput>
  }

  export type UserUpsertWithWhereUniqueWithoutTenant_User_currentTenantIdToTenantInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutTenant_User_currentTenantIdToTenantInput, UserUncheckedUpdateWithoutTenant_User_currentTenantIdToTenantInput>
    create: XOR<UserCreateWithoutTenant_User_currentTenantIdToTenantInput, UserUncheckedCreateWithoutTenant_User_currentTenantIdToTenantInput>
  }

  export type UserUpdateWithWhereUniqueWithoutTenant_User_currentTenantIdToTenantInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutTenant_User_currentTenantIdToTenantInput, UserUncheckedUpdateWithoutTenant_User_currentTenantIdToTenantInput>
  }

  export type UserUpdateManyWithWhereWithoutTenant_User_currentTenantIdToTenantInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutUser_User_currentTenantIdToTenantInput>
  }

  export type UserTaskUpsertWithWhereUniqueWithoutTenantInput = {
    where: UserTaskWhereUniqueInput
    update: XOR<UserTaskUpdateWithoutTenantInput, UserTaskUncheckedUpdateWithoutTenantInput>
    create: XOR<UserTaskCreateWithoutTenantInput, UserTaskUncheckedCreateWithoutTenantInput>
  }

  export type UserTaskUpdateWithWhereUniqueWithoutTenantInput = {
    where: UserTaskWhereUniqueInput
    data: XOR<UserTaskUpdateWithoutTenantInput, UserTaskUncheckedUpdateWithoutTenantInput>
  }

  export type UserTaskUpdateManyWithWhereWithoutTenantInput = {
    where: UserTaskScalarWhereInput
    data: XOR<UserTaskUpdateManyMutationInput, UserTaskUncheckedUpdateManyWithoutUserTaskInput>
  }

  export type UserCreateWithoutTenantUser_TenantUser_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTenantUser_TenantUser_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTenantUser_TenantUser_createdByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTenantUser_TenantUser_createdByToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_createdByToUserInput>
  }

  export type TenantCreateWithoutTenantUserInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTenantUserInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTenantUserInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTenantUserInput, TenantUncheckedCreateWithoutTenantUserInput>
  }

  export type UserCreateWithoutTenantUser_TenantUser_userIdToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTenantUser_TenantUser_userIdToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTenantUser_TenantUser_userIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTenantUser_TenantUser_userIdToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_userIdToUserInput>
  }

  export type UserUpsertWithoutTenantUser_TenantUser_createdByToUserInput = {
    update: XOR<UserUpdateWithoutTenantUser_TenantUser_createdByToUserInput, UserUncheckedUpdateWithoutTenantUser_TenantUser_createdByToUserInput>
    create: XOR<UserCreateWithoutTenantUser_TenantUser_createdByToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_createdByToUserInput>
  }

  export type UserUpdateWithoutTenantUser_TenantUser_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTenantUser_TenantUser_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TenantUpsertWithoutTenantUserInput = {
    update: XOR<TenantUpdateWithoutTenantUserInput, TenantUncheckedUpdateWithoutTenantUserInput>
    create: XOR<TenantCreateWithoutTenantUserInput, TenantUncheckedCreateWithoutTenantUserInput>
  }

  export type TenantUpdateWithoutTenantUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTenantUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type UserUpsertWithoutTenantUser_TenantUser_userIdToUserInput = {
    update: XOR<UserUpdateWithoutTenantUser_TenantUser_userIdToUserInput, UserUncheckedUpdateWithoutTenantUser_TenantUser_userIdToUserInput>
    create: XOR<UserCreateWithoutTenantUser_TenantUser_userIdToUserInput, UserUncheckedCreateWithoutTenantUser_TenantUser_userIdToUserInput>
  }

  export type UserUpdateWithoutTenantUser_TenantUser_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTenantUser_TenantUser_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserCreateWithoutTimeBlockInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutTimeBlockInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutTimeBlockInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTimeBlockInput, UserUncheckedCreateWithoutTimeBlockInput>
  }

  export type DailyLogItemCreateWithoutTimeBlockInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User?: UserCreateNestedOneWithoutDailyLogItemInput
    DailyLog: DailyLogCreateNestedOneWithoutDailyLogItemInput
    Equipment?: EquipmentCreateNestedOneWithoutDailyLogItemInput
    Task?: TaskCreateNestedOneWithoutDailyLogItemInput
    Tenant: TenantCreateNestedOneWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateWithoutTimeBlockInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
  }

  export type DailyLogItemCreateOrConnectWithoutTimeBlockInput = {
    where: DailyLogItemWhereUniqueInput
    create: XOR<DailyLogItemCreateWithoutTimeBlockInput, DailyLogItemUncheckedCreateWithoutTimeBlockInput>
  }

  export type TenantCreateWithoutTimeBlockInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutTimeBlockInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutTimeBlockInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutTimeBlockInput, TenantUncheckedCreateWithoutTimeBlockInput>
  }

  export type UserUpsertWithoutTimeBlockInput = {
    update: XOR<UserUpdateWithoutTimeBlockInput, UserUncheckedUpdateWithoutTimeBlockInput>
    create: XOR<UserCreateWithoutTimeBlockInput, UserUncheckedCreateWithoutTimeBlockInput>
  }

  export type UserUpdateWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type DailyLogItemUpsertWithoutTimeBlockInput = {
    update: XOR<DailyLogItemUpdateWithoutTimeBlockInput, DailyLogItemUncheckedUpdateWithoutTimeBlockInput>
    create: XOR<DailyLogItemCreateWithoutTimeBlockInput, DailyLogItemUncheckedCreateWithoutTimeBlockInput>
  }

  export type DailyLogItemUpdateWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogItemNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput
    Equipment?: EquipmentUpdateOneWithoutDailyLogItemNestedInput
    Task?: TaskUpdateOneWithoutDailyLogItemNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TenantUpsertWithoutTimeBlockInput = {
    update: XOR<TenantUpdateWithoutTimeBlockInput, TenantUncheckedUpdateWithoutTimeBlockInput>
    create: XOR<TenantCreateWithoutTimeBlockInput, TenantUncheckedCreateWithoutTimeBlockInput>
  }

  export type TenantUpdateWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ApiKeyCreateWithoutUserInput = {
    id: string
    name: string
    createdAt: Date | string
    Tenant: TenantCreateNestedOneWithoutApiKeyInput
  }

  export type ApiKeyUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    createdAt: Date | string
    tenantId: string
  }

  export type ApiKeyCreateOrConnectWithoutUserInput = {
    where: ApiKeyWhereUniqueInput
    create: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput>
  }

  export type ApiKeyCreateManyUserInputEnvelope = {
    data: Enumerable<ApiKeyCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type DailyLogCreateWithoutUserInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutDailyLogInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutDailyLogInput
    File?: FileCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogUncheckedCreateWithoutUserInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutDailyLogInput
    File?: FileUncheckedCreateNestedManyWithoutDailyLogInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutDailyLogInput
  }

  export type DailyLogCreateOrConnectWithoutUserInput = {
    where: DailyLogWhereUniqueInput
    create: XOR<DailyLogCreateWithoutUserInput, DailyLogUncheckedCreateWithoutUserInput>
  }

  export type DailyLogCreateManyUserInputEnvelope = {
    data: Enumerable<DailyLogCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type DailyLogItemCreateWithoutUserInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLog: DailyLogCreateNestedOneWithoutDailyLogItemInput
    Equipment?: EquipmentCreateNestedOneWithoutDailyLogItemInput
    Task?: TaskCreateNestedOneWithoutDailyLogItemInput
    Tenant: TenantCreateNestedOneWithoutDailyLogItemInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemUncheckedCreateWithoutUserInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutDailyLogItemInput
  }

  export type DailyLogItemCreateOrConnectWithoutUserInput = {
    where: DailyLogItemWhereUniqueInput
    create: XOR<DailyLogItemCreateWithoutUserInput, DailyLogItemUncheckedCreateWithoutUserInput>
  }

  export type DailyLogItemCreateManyUserInputEnvelope = {
    data: Enumerable<DailyLogItemCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type EquipmentCreateWithoutUser_Equipment_createdByToUserInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutEquipmentInput
    Tenant: TenantCreateNestedOneWithoutEquipmentInput
    User_Equipment_userIdToUser?: UserCreateNestedOneWithoutEquipment_Equipment_userIdToUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    userId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutEquipmentInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutUser_Equipment_createdByToUserInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutUser_Equipment_createdByToUserInput, EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput>
  }

  export type EquipmentCreateManyUser_Equipment_createdByToUserInputEnvelope = {
    data: Enumerable<EquipmentCreateManyUser_Equipment_createdByToUserInput>
    skipDuplicates?: boolean
  }

  export type EquipmentCreateWithoutUser_Equipment_userIdToUserInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutEquipmentInput
    User_Equipment_createdByToUser?: UserCreateNestedOneWithoutEquipment_Equipment_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutEquipmentInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutEquipmentInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentInput
  }

  export type EquipmentCreateOrConnectWithoutUser_Equipment_userIdToUserInput = {
    where: EquipmentWhereUniqueInput
    create: XOR<EquipmentCreateWithoutUser_Equipment_userIdToUserInput, EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput>
  }

  export type EquipmentCreateManyUser_Equipment_userIdToUserInputEnvelope = {
    data: Enumerable<EquipmentCreateManyUser_Equipment_userIdToUserInput>
    skipDuplicates?: boolean
  }

  export type EquipmentPropertyCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutEquipmentPropertyInput
  }

  export type EquipmentPropertyCreateOrConnectWithoutUserInput = {
    where: EquipmentPropertyWhereUniqueInput
    create: XOR<EquipmentPropertyCreateWithoutUserInput, EquipmentPropertyUncheckedCreateWithoutUserInput>
  }

  export type EquipmentPropertyCreateManyUserInputEnvelope = {
    data: Enumerable<EquipmentPropertyCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type EquipmentPropertyValueCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Equipment: EquipmentCreateNestedOneWithoutEquipmentPropertyValueInput
    EquipmentProperty: EquipmentPropertyCreateNestedOneWithoutEquipmentPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutEquipmentPropertyValueInput
  }

  export type EquipmentPropertyValueUncheckedCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    equipmentId: string
    equipmentPropertyId: string
    tenantId: string
  }

  export type EquipmentPropertyValueCreateOrConnectWithoutUserInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    create: XOR<EquipmentPropertyValueCreateWithoutUserInput, EquipmentPropertyValueUncheckedCreateWithoutUserInput>
  }

  export type EquipmentPropertyValueCreateManyUserInputEnvelope = {
    data: Enumerable<EquipmentPropertyValueCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type FeedbackCreateWithoutUserInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutFeedbackInput
  }

  export type FeedbackUncheckedCreateWithoutUserInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type FeedbackCreateOrConnectWithoutUserInput = {
    where: FeedbackWhereUniqueInput
    create: XOR<FeedbackCreateWithoutUserInput, FeedbackUncheckedCreateWithoutUserInput>
  }

  export type FeedbackCreateManyUserInputEnvelope = {
    data: Enumerable<FeedbackCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type FileCreateWithoutUserInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLog?: DailyLogCreateNestedOneWithoutFileInput
    Image: ImageCreateNestedOneWithoutFileInput
    Project?: ProjectCreateNestedOneWithoutFileInput
    Tenant: TenantCreateNestedOneWithoutFileInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFileInput
  }

  export type FileUncheckedCreateWithoutUserInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFileInput
  }

  export type FileCreateOrConnectWithoutUserInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput>
  }

  export type FileCreateManyUserInputEnvelope = {
    data: Enumerable<FileCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type FilePropertyCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutFilePropertyInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutFilePropertyInput
  }

  export type FilePropertyUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutFilePropertyInput
  }

  export type FilePropertyCreateOrConnectWithoutUserInput = {
    where: FilePropertyWhereUniqueInput
    create: XOR<FilePropertyCreateWithoutUserInput, FilePropertyUncheckedCreateWithoutUserInput>
  }

  export type FilePropertyCreateManyUserInputEnvelope = {
    data: Enumerable<FilePropertyCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type FilePropertyValueCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File: FileCreateNestedOneWithoutFilePropertyValueInput
    FileProperty: FilePropertyCreateNestedOneWithoutFilePropertyValueInput
    Tenant: TenantCreateNestedOneWithoutFilePropertyValueInput
  }

  export type FilePropertyValueUncheckedCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    fileId: string
    propertyId: string
    tenantId: string
  }

  export type FilePropertyValueCreateOrConnectWithoutUserInput = {
    where: FilePropertyValueWhereUniqueInput
    create: XOR<FilePropertyValueCreateWithoutUserInput, FilePropertyValueUncheckedCreateWithoutUserInput>
  }

  export type FilePropertyValueCreateManyUserInputEnvelope = {
    data: Enumerable<FilePropertyValueCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ImageCreateWithoutUser_Image_createdByToUserInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutImageInput
    Tenant: TenantCreateNestedOneWithoutImageInput
    User_User_imageIdToImage?: UserCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageUncheckedCreateWithoutUser_Image_createdByToUserInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutImageInput
    User_User_imageIdToImage?: UserUncheckedCreateNestedManyWithoutImage_User_imageIdToImageInput
  }

  export type ImageCreateOrConnectWithoutUser_Image_createdByToUserInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutUser_Image_createdByToUserInput, ImageUncheckedCreateWithoutUser_Image_createdByToUserInput>
  }

  export type ImageCreateManyUser_Image_createdByToUserInputEnvelope = {
    data: Enumerable<ImageCreateManyUser_Image_createdByToUserInput>
    skipDuplicates?: boolean
  }

  export type LocationEntryCreateWithoutUserInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLog: DailyLogCreateNestedOneWithoutLocationEntryInput
    Tenant: TenantCreateNestedOneWithoutLocationEntryInput
  }

  export type LocationEntryUncheckedCreateWithoutUserInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    dailyLogId: string
    tenantId: string
  }

  export type LocationEntryCreateOrConnectWithoutUserInput = {
    where: LocationEntryWhereUniqueInput
    create: XOR<LocationEntryCreateWithoutUserInput, LocationEntryUncheckedCreateWithoutUserInput>
  }

  export type LocationEntryCreateManyUserInputEnvelope = {
    data: Enumerable<LocationEntryCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProjectCreateWithoutUserInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutProjectInput
    Tenant: TenantCreateNestedOneWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectInput
    Task?: TaskCreateNestedManyWithoutProjectInput
  }

  export type ProjectUncheckedCreateWithoutUserInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutProjectInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectInput
    Task?: TaskUncheckedCreateNestedManyWithoutProjectInput
  }

  export type ProjectCreateOrConnectWithoutUserInput = {
    where: ProjectWhereUniqueInput
    create: XOR<ProjectCreateWithoutUserInput, ProjectUncheckedCreateWithoutUserInput>
  }

  export type ProjectCreateManyUserInputEnvelope = {
    data: Enumerable<ProjectCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProjectPropertyCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutProjectPropertyInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutProjectPropertyInput
  }

  export type ProjectPropertyUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutProjectPropertyInput
  }

  export type ProjectPropertyCreateOrConnectWithoutUserInput = {
    where: ProjectPropertyWhereUniqueInput
    create: XOR<ProjectPropertyCreateWithoutUserInput, ProjectPropertyUncheckedCreateWithoutUserInput>
  }

  export type ProjectPropertyCreateManyUserInputEnvelope = {
    data: Enumerable<ProjectPropertyCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type ProjectPropertyValueCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Project: ProjectCreateNestedOneWithoutProjectPropertyValueInput
    ProjectProperty: ProjectPropertyCreateNestedOneWithoutProjectPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutProjectPropertyValueInput
  }

  export type ProjectPropertyValueUncheckedCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    projectId: string
    projectPropertyId: string
    tenantId: string
  }

  export type ProjectPropertyValueCreateOrConnectWithoutUserInput = {
    where: ProjectPropertyValueWhereUniqueInput
    create: XOR<ProjectPropertyValueCreateWithoutUserInput, ProjectPropertyValueUncheckedCreateWithoutUserInput>
  }

  export type ProjectPropertyValueCreateManyUserInputEnvelope = {
    data: Enumerable<ProjectPropertyValueCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type TaskCreateWithoutUserInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutUserInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutUserInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput>
  }

  export type TaskCreateManyUserInputEnvelope = {
    data: Enumerable<TaskCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type TaskPropertyCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutTaskPropertyInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskPropertyInput
  }

  export type TaskPropertyUncheckedCreateWithoutUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskPropertyInput
  }

  export type TaskPropertyCreateOrConnectWithoutUserInput = {
    where: TaskPropertyWhereUniqueInput
    create: XOR<TaskPropertyCreateWithoutUserInput, TaskPropertyUncheckedCreateWithoutUserInput>
  }

  export type TaskPropertyCreateManyUserInputEnvelope = {
    data: Enumerable<TaskPropertyCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type TaskPropertyValueCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Task: TaskCreateNestedOneWithoutTaskPropertyValueInput
    TaskProperty: TaskPropertyCreateNestedOneWithoutTaskPropertyValueInput
    Tenant: TenantCreateNestedOneWithoutTaskPropertyValueInput
  }

  export type TaskPropertyValueUncheckedCreateWithoutUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    taskPropertyId: string
    taskId: string
    tenantId: string
  }

  export type TaskPropertyValueCreateOrConnectWithoutUserInput = {
    where: TaskPropertyValueWhereUniqueInput
    create: XOR<TaskPropertyValueCreateWithoutUserInput, TaskPropertyValueUncheckedCreateWithoutUserInput>
  }

  export type TaskPropertyValueCreateManyUserInputEnvelope = {
    data: Enumerable<TaskPropertyValueCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type TaskStatusCreateWithoutUserInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    Task?: TaskCreateNestedManyWithoutTaskStatusInput
    Tenant: TenantCreateNestedOneWithoutTaskStatusInput
  }

  export type TaskStatusUncheckedCreateWithoutUserInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    tenantId: string
    Task?: TaskUncheckedCreateNestedManyWithoutTaskStatusInput
  }

  export type TaskStatusCreateOrConnectWithoutUserInput = {
    where: TaskStatusWhereUniqueInput
    create: XOR<TaskStatusCreateWithoutUserInput, TaskStatusUncheckedCreateWithoutUserInput>
  }

  export type TaskStatusCreateManyUserInputEnvelope = {
    data: Enumerable<TaskStatusCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type TenantCreateWithoutUser_Tenant_createdByToUserInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutUser_Tenant_createdByToUserInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutUser_Tenant_createdByToUserInput, TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput>
  }

  export type TenantCreateManyUser_Tenant_createdByToUserInputEnvelope = {
    data: Enumerable<TenantCreateManyUser_Tenant_createdByToUserInput>
    skipDuplicates?: boolean
  }

  export type TenantUserCreateWithoutUser_TenantUser_createdByToUserInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Tenant: TenantCreateNestedOneWithoutTenantUserInput
    User_TenantUser_userIdToUser?: UserCreateNestedOneWithoutTenantUser_TenantUser_userIdToUserInput
  }

  export type TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    userId?: string | null
    tenantId: string
  }

  export type TenantUserCreateOrConnectWithoutUser_TenantUser_createdByToUserInput = {
    where: TenantUserWhereUniqueInput
    create: XOR<TenantUserCreateWithoutUser_TenantUser_createdByToUserInput, TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput>
  }

  export type TenantUserCreateManyUser_TenantUser_createdByToUserInputEnvelope = {
    data: Enumerable<TenantUserCreateManyUser_TenantUser_createdByToUserInput>
    skipDuplicates?: boolean
  }

  export type TenantUserCreateWithoutUser_TenantUser_userIdToUserInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_TenantUser_createdByToUser?: UserCreateNestedOneWithoutTenantUser_TenantUser_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutTenantUserInput
  }

  export type TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type TenantUserCreateOrConnectWithoutUser_TenantUser_userIdToUserInput = {
    where: TenantUserWhereUniqueInput
    create: XOR<TenantUserCreateWithoutUser_TenantUser_userIdToUserInput, TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput>
  }

  export type TenantUserCreateManyUser_TenantUser_userIdToUserInputEnvelope = {
    data: Enumerable<TenantUserCreateManyUser_TenantUser_userIdToUserInput>
    skipDuplicates?: boolean
  }

  export type TimeBlockCreateWithoutUserInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem: DailyLogItemCreateNestedOneWithoutTimeBlockInput
    Tenant: TenantCreateNestedOneWithoutTimeBlockInput
  }

  export type TimeBlockUncheckedCreateWithoutUserInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    dailyLogItemId: string
    tenantId: string
  }

  export type TimeBlockCreateOrConnectWithoutUserInput = {
    where: TimeBlockWhereUniqueInput
    create: XOR<TimeBlockCreateWithoutUserInput, TimeBlockUncheckedCreateWithoutUserInput>
  }

  export type TimeBlockCreateManyUserInputEnvelope = {
    data: Enumerable<TimeBlockCreateManyUserInput>
    skipDuplicates?: boolean
  }

  export type TenantCreateWithoutUser_User_currentTenantIdToTenantInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    UserTask?: UserTaskCreateNestedManyWithoutTenantInput
  }

  export type TenantUncheckedCreateWithoutUser_User_currentTenantIdToTenantInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    UserTask?: UserTaskUncheckedCreateNestedManyWithoutTenantInput
  }

  export type TenantCreateOrConnectWithoutUser_User_currentTenantIdToTenantInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutUser_User_currentTenantIdToTenantInput, TenantUncheckedCreateWithoutUser_User_currentTenantIdToTenantInput>
  }

  export type ImageCreateWithoutUser_User_imageIdToImageInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    File?: FileCreateNestedManyWithoutImageInput
    User_Image_createdByToUser?: UserCreateNestedOneWithoutImage_Image_createdByToUserInput
    Tenant: TenantCreateNestedOneWithoutImageInput
  }

  export type ImageUncheckedCreateWithoutUser_User_imageIdToImageInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    File?: FileUncheckedCreateNestedManyWithoutImageInput
  }

  export type ImageCreateOrConnectWithoutUser_User_imageIdToImageInput = {
    where: ImageWhereUniqueInput
    create: XOR<ImageCreateWithoutUser_User_imageIdToImageInput, ImageUncheckedCreateWithoutUser_User_imageIdToImageInput>
  }

  export type UserTaskCreateWithoutUser_UserTask_createdByToUserInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    Task: TaskCreateNestedOneWithoutUserTaskInput
    Tenant: TenantCreateNestedOneWithoutUserTaskInput
    User_UserTask_userIdToUser: UserCreateNestedOneWithoutUserTask_UserTask_userIdToUserInput
  }

  export type UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    taskId: string
    tenantId: string
    userId: string
  }

  export type UserTaskCreateOrConnectWithoutUser_UserTask_createdByToUserInput = {
    where: UserTaskWhereUniqueInput
    create: XOR<UserTaskCreateWithoutUser_UserTask_createdByToUserInput, UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput>
  }

  export type UserTaskCreateManyUser_UserTask_createdByToUserInputEnvelope = {
    data: Enumerable<UserTaskCreateManyUser_UserTask_createdByToUserInput>
    skipDuplicates?: boolean
  }

  export type UserTaskCreateWithoutUser_UserTask_userIdToUserInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    User_UserTask_createdByToUser?: UserCreateNestedOneWithoutUserTask_UserTask_createdByToUserInput
    Task: TaskCreateNestedOneWithoutUserTaskInput
    Tenant: TenantCreateNestedOneWithoutUserTaskInput
  }

  export type UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    tenantId: string
  }

  export type UserTaskCreateOrConnectWithoutUser_UserTask_userIdToUserInput = {
    where: UserTaskWhereUniqueInput
    create: XOR<UserTaskCreateWithoutUser_UserTask_userIdToUserInput, UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput>
  }

  export type UserTaskCreateManyUser_UserTask_userIdToUserInputEnvelope = {
    data: Enumerable<UserTaskCreateManyUser_UserTask_userIdToUserInput>
    skipDuplicates?: boolean
  }

  export type ApiKeyUpsertWithWhereUniqueWithoutUserInput = {
    where: ApiKeyWhereUniqueInput
    update: XOR<ApiKeyUpdateWithoutUserInput, ApiKeyUncheckedUpdateWithoutUserInput>
    create: XOR<ApiKeyCreateWithoutUserInput, ApiKeyUncheckedCreateWithoutUserInput>
  }

  export type ApiKeyUpdateWithWhereUniqueWithoutUserInput = {
    where: ApiKeyWhereUniqueInput
    data: XOR<ApiKeyUpdateWithoutUserInput, ApiKeyUncheckedUpdateWithoutUserInput>
  }

  export type ApiKeyUpdateManyWithWhereWithoutUserInput = {
    where: ApiKeyScalarWhereInput
    data: XOR<ApiKeyUpdateManyMutationInput, ApiKeyUncheckedUpdateManyWithoutApiKeyInput>
  }

  export type DailyLogUpsertWithWhereUniqueWithoutUserInput = {
    where: DailyLogWhereUniqueInput
    update: XOR<DailyLogUpdateWithoutUserInput, DailyLogUncheckedUpdateWithoutUserInput>
    create: XOR<DailyLogCreateWithoutUserInput, DailyLogUncheckedCreateWithoutUserInput>
  }

  export type DailyLogUpdateWithWhereUniqueWithoutUserInput = {
    where: DailyLogWhereUniqueInput
    data: XOR<DailyLogUpdateWithoutUserInput, DailyLogUncheckedUpdateWithoutUserInput>
  }

  export type DailyLogUpdateManyWithWhereWithoutUserInput = {
    where: DailyLogScalarWhereInput
    data: XOR<DailyLogUpdateManyMutationInput, DailyLogUncheckedUpdateManyWithoutDailyLogInput>
  }

  export type DailyLogItemUpsertWithWhereUniqueWithoutUserInput = {
    where: DailyLogItemWhereUniqueInput
    update: XOR<DailyLogItemUpdateWithoutUserInput, DailyLogItemUncheckedUpdateWithoutUserInput>
    create: XOR<DailyLogItemCreateWithoutUserInput, DailyLogItemUncheckedCreateWithoutUserInput>
  }

  export type DailyLogItemUpdateWithWhereUniqueWithoutUserInput = {
    where: DailyLogItemWhereUniqueInput
    data: XOR<DailyLogItemUpdateWithoutUserInput, DailyLogItemUncheckedUpdateWithoutUserInput>
  }

  export type DailyLogItemUpdateManyWithWhereWithoutUserInput = {
    where: DailyLogItemScalarWhereInput
    data: XOR<DailyLogItemUpdateManyMutationInput, DailyLogItemUncheckedUpdateManyWithoutDailyLogItemInput>
  }

  export type EquipmentUpsertWithWhereUniqueWithoutUser_Equipment_createdByToUserInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUpdateWithoutUser_Equipment_createdByToUserInput, EquipmentUncheckedUpdateWithoutUser_Equipment_createdByToUserInput>
    create: XOR<EquipmentCreateWithoutUser_Equipment_createdByToUserInput, EquipmentUncheckedCreateWithoutUser_Equipment_createdByToUserInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutUser_Equipment_createdByToUserInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUpdateWithoutUser_Equipment_createdByToUserInput, EquipmentUncheckedUpdateWithoutUser_Equipment_createdByToUserInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutUser_Equipment_createdByToUserInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyWithoutEquipment_Equipment_createdByToUserInput>
  }

  export type EquipmentUpsertWithWhereUniqueWithoutUser_Equipment_userIdToUserInput = {
    where: EquipmentWhereUniqueInput
    update: XOR<EquipmentUpdateWithoutUser_Equipment_userIdToUserInput, EquipmentUncheckedUpdateWithoutUser_Equipment_userIdToUserInput>
    create: XOR<EquipmentCreateWithoutUser_Equipment_userIdToUserInput, EquipmentUncheckedCreateWithoutUser_Equipment_userIdToUserInput>
  }

  export type EquipmentUpdateWithWhereUniqueWithoutUser_Equipment_userIdToUserInput = {
    where: EquipmentWhereUniqueInput
    data: XOR<EquipmentUpdateWithoutUser_Equipment_userIdToUserInput, EquipmentUncheckedUpdateWithoutUser_Equipment_userIdToUserInput>
  }

  export type EquipmentUpdateManyWithWhereWithoutUser_Equipment_userIdToUserInput = {
    where: EquipmentScalarWhereInput
    data: XOR<EquipmentUpdateManyMutationInput, EquipmentUncheckedUpdateManyWithoutEquipment_Equipment_userIdToUserInput>
  }

  export type EquipmentPropertyUpsertWithWhereUniqueWithoutUserInput = {
    where: EquipmentPropertyWhereUniqueInput
    update: XOR<EquipmentPropertyUpdateWithoutUserInput, EquipmentPropertyUncheckedUpdateWithoutUserInput>
    create: XOR<EquipmentPropertyCreateWithoutUserInput, EquipmentPropertyUncheckedCreateWithoutUserInput>
  }

  export type EquipmentPropertyUpdateWithWhereUniqueWithoutUserInput = {
    where: EquipmentPropertyWhereUniqueInput
    data: XOR<EquipmentPropertyUpdateWithoutUserInput, EquipmentPropertyUncheckedUpdateWithoutUserInput>
  }

  export type EquipmentPropertyUpdateManyWithWhereWithoutUserInput = {
    where: EquipmentPropertyScalarWhereInput
    data: XOR<EquipmentPropertyUpdateManyMutationInput, EquipmentPropertyUncheckedUpdateManyWithoutEquipmentPropertyInput>
  }

  export type EquipmentPropertyValueUpsertWithWhereUniqueWithoutUserInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    update: XOR<EquipmentPropertyValueUpdateWithoutUserInput, EquipmentPropertyValueUncheckedUpdateWithoutUserInput>
    create: XOR<EquipmentPropertyValueCreateWithoutUserInput, EquipmentPropertyValueUncheckedCreateWithoutUserInput>
  }

  export type EquipmentPropertyValueUpdateWithWhereUniqueWithoutUserInput = {
    where: EquipmentPropertyValueWhereUniqueInput
    data: XOR<EquipmentPropertyValueUpdateWithoutUserInput, EquipmentPropertyValueUncheckedUpdateWithoutUserInput>
  }

  export type EquipmentPropertyValueUpdateManyWithWhereWithoutUserInput = {
    where: EquipmentPropertyValueScalarWhereInput
    data: XOR<EquipmentPropertyValueUpdateManyMutationInput, EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyValueInput>
  }

  export type FeedbackUpsertWithWhereUniqueWithoutUserInput = {
    where: FeedbackWhereUniqueInput
    update: XOR<FeedbackUpdateWithoutUserInput, FeedbackUncheckedUpdateWithoutUserInput>
    create: XOR<FeedbackCreateWithoutUserInput, FeedbackUncheckedCreateWithoutUserInput>
  }

  export type FeedbackUpdateWithWhereUniqueWithoutUserInput = {
    where: FeedbackWhereUniqueInput
    data: XOR<FeedbackUpdateWithoutUserInput, FeedbackUncheckedUpdateWithoutUserInput>
  }

  export type FeedbackUpdateManyWithWhereWithoutUserInput = {
    where: FeedbackScalarWhereInput
    data: XOR<FeedbackUpdateManyMutationInput, FeedbackUncheckedUpdateManyWithoutFeedbackInput>
  }

  export type FileUpsertWithWhereUniqueWithoutUserInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutUserInput, FileUncheckedUpdateWithoutUserInput>
    create: XOR<FileCreateWithoutUserInput, FileUncheckedCreateWithoutUserInput>
  }

  export type FileUpdateWithWhereUniqueWithoutUserInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutUserInput, FileUncheckedUpdateWithoutUserInput>
  }

  export type FileUpdateManyWithWhereWithoutUserInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutFileInput>
  }

  export type FilePropertyUpsertWithWhereUniqueWithoutUserInput = {
    where: FilePropertyWhereUniqueInput
    update: XOR<FilePropertyUpdateWithoutUserInput, FilePropertyUncheckedUpdateWithoutUserInput>
    create: XOR<FilePropertyCreateWithoutUserInput, FilePropertyUncheckedCreateWithoutUserInput>
  }

  export type FilePropertyUpdateWithWhereUniqueWithoutUserInput = {
    where: FilePropertyWhereUniqueInput
    data: XOR<FilePropertyUpdateWithoutUserInput, FilePropertyUncheckedUpdateWithoutUserInput>
  }

  export type FilePropertyUpdateManyWithWhereWithoutUserInput = {
    where: FilePropertyScalarWhereInput
    data: XOR<FilePropertyUpdateManyMutationInput, FilePropertyUncheckedUpdateManyWithoutFilePropertyInput>
  }

  export type FilePropertyValueUpsertWithWhereUniqueWithoutUserInput = {
    where: FilePropertyValueWhereUniqueInput
    update: XOR<FilePropertyValueUpdateWithoutUserInput, FilePropertyValueUncheckedUpdateWithoutUserInput>
    create: XOR<FilePropertyValueCreateWithoutUserInput, FilePropertyValueUncheckedCreateWithoutUserInput>
  }

  export type FilePropertyValueUpdateWithWhereUniqueWithoutUserInput = {
    where: FilePropertyValueWhereUniqueInput
    data: XOR<FilePropertyValueUpdateWithoutUserInput, FilePropertyValueUncheckedUpdateWithoutUserInput>
  }

  export type FilePropertyValueUpdateManyWithWhereWithoutUserInput = {
    where: FilePropertyValueScalarWhereInput
    data: XOR<FilePropertyValueUpdateManyMutationInput, FilePropertyValueUncheckedUpdateManyWithoutFilePropertyValueInput>
  }

  export type ImageUpsertWithWhereUniqueWithoutUser_Image_createdByToUserInput = {
    where: ImageWhereUniqueInput
    update: XOR<ImageUpdateWithoutUser_Image_createdByToUserInput, ImageUncheckedUpdateWithoutUser_Image_createdByToUserInput>
    create: XOR<ImageCreateWithoutUser_Image_createdByToUserInput, ImageUncheckedCreateWithoutUser_Image_createdByToUserInput>
  }

  export type ImageUpdateWithWhereUniqueWithoutUser_Image_createdByToUserInput = {
    where: ImageWhereUniqueInput
    data: XOR<ImageUpdateWithoutUser_Image_createdByToUserInput, ImageUncheckedUpdateWithoutUser_Image_createdByToUserInput>
  }

  export type ImageUpdateManyWithWhereWithoutUser_Image_createdByToUserInput = {
    where: ImageScalarWhereInput
    data: XOR<ImageUpdateManyMutationInput, ImageUncheckedUpdateManyWithoutImage_Image_createdByToUserInput>
  }

  export type LocationEntryUpsertWithWhereUniqueWithoutUserInput = {
    where: LocationEntryWhereUniqueInput
    update: XOR<LocationEntryUpdateWithoutUserInput, LocationEntryUncheckedUpdateWithoutUserInput>
    create: XOR<LocationEntryCreateWithoutUserInput, LocationEntryUncheckedCreateWithoutUserInput>
  }

  export type LocationEntryUpdateWithWhereUniqueWithoutUserInput = {
    where: LocationEntryWhereUniqueInput
    data: XOR<LocationEntryUpdateWithoutUserInput, LocationEntryUncheckedUpdateWithoutUserInput>
  }

  export type LocationEntryUpdateManyWithWhereWithoutUserInput = {
    where: LocationEntryScalarWhereInput
    data: XOR<LocationEntryUpdateManyMutationInput, LocationEntryUncheckedUpdateManyWithoutLocationEntryInput>
  }

  export type ProjectUpsertWithWhereUniqueWithoutUserInput = {
    where: ProjectWhereUniqueInput
    update: XOR<ProjectUpdateWithoutUserInput, ProjectUncheckedUpdateWithoutUserInput>
    create: XOR<ProjectCreateWithoutUserInput, ProjectUncheckedCreateWithoutUserInput>
  }

  export type ProjectUpdateWithWhereUniqueWithoutUserInput = {
    where: ProjectWhereUniqueInput
    data: XOR<ProjectUpdateWithoutUserInput, ProjectUncheckedUpdateWithoutUserInput>
  }

  export type ProjectUpdateManyWithWhereWithoutUserInput = {
    where: ProjectScalarWhereInput
    data: XOR<ProjectUpdateManyMutationInput, ProjectUncheckedUpdateManyWithoutProjectInput>
  }

  export type ProjectPropertyUpsertWithWhereUniqueWithoutUserInput = {
    where: ProjectPropertyWhereUniqueInput
    update: XOR<ProjectPropertyUpdateWithoutUserInput, ProjectPropertyUncheckedUpdateWithoutUserInput>
    create: XOR<ProjectPropertyCreateWithoutUserInput, ProjectPropertyUncheckedCreateWithoutUserInput>
  }

  export type ProjectPropertyUpdateWithWhereUniqueWithoutUserInput = {
    where: ProjectPropertyWhereUniqueInput
    data: XOR<ProjectPropertyUpdateWithoutUserInput, ProjectPropertyUncheckedUpdateWithoutUserInput>
  }

  export type ProjectPropertyUpdateManyWithWhereWithoutUserInput = {
    where: ProjectPropertyScalarWhereInput
    data: XOR<ProjectPropertyUpdateManyMutationInput, ProjectPropertyUncheckedUpdateManyWithoutProjectPropertyInput>
  }

  export type ProjectPropertyValueUpsertWithWhereUniqueWithoutUserInput = {
    where: ProjectPropertyValueWhereUniqueInput
    update: XOR<ProjectPropertyValueUpdateWithoutUserInput, ProjectPropertyValueUncheckedUpdateWithoutUserInput>
    create: XOR<ProjectPropertyValueCreateWithoutUserInput, ProjectPropertyValueUncheckedCreateWithoutUserInput>
  }

  export type ProjectPropertyValueUpdateWithWhereUniqueWithoutUserInput = {
    where: ProjectPropertyValueWhereUniqueInput
    data: XOR<ProjectPropertyValueUpdateWithoutUserInput, ProjectPropertyValueUncheckedUpdateWithoutUserInput>
  }

  export type ProjectPropertyValueUpdateManyWithWhereWithoutUserInput = {
    where: ProjectPropertyValueScalarWhereInput
    data: XOR<ProjectPropertyValueUpdateManyMutationInput, ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyValueInput>
  }

  export type TaskUpsertWithWhereUniqueWithoutUserInput = {
    where: TaskWhereUniqueInput
    update: XOR<TaskUpdateWithoutUserInput, TaskUncheckedUpdateWithoutUserInput>
    create: XOR<TaskCreateWithoutUserInput, TaskUncheckedCreateWithoutUserInput>
  }

  export type TaskUpdateWithWhereUniqueWithoutUserInput = {
    where: TaskWhereUniqueInput
    data: XOR<TaskUpdateWithoutUserInput, TaskUncheckedUpdateWithoutUserInput>
  }

  export type TaskUpdateManyWithWhereWithoutUserInput = {
    where: TaskScalarWhereInput
    data: XOR<TaskUpdateManyMutationInput, TaskUncheckedUpdateManyWithoutTaskInput>
  }

  export type TaskPropertyUpsertWithWhereUniqueWithoutUserInput = {
    where: TaskPropertyWhereUniqueInput
    update: XOR<TaskPropertyUpdateWithoutUserInput, TaskPropertyUncheckedUpdateWithoutUserInput>
    create: XOR<TaskPropertyCreateWithoutUserInput, TaskPropertyUncheckedCreateWithoutUserInput>
  }

  export type TaskPropertyUpdateWithWhereUniqueWithoutUserInput = {
    where: TaskPropertyWhereUniqueInput
    data: XOR<TaskPropertyUpdateWithoutUserInput, TaskPropertyUncheckedUpdateWithoutUserInput>
  }

  export type TaskPropertyUpdateManyWithWhereWithoutUserInput = {
    where: TaskPropertyScalarWhereInput
    data: XOR<TaskPropertyUpdateManyMutationInput, TaskPropertyUncheckedUpdateManyWithoutTaskPropertyInput>
  }

  export type TaskPropertyValueUpsertWithWhereUniqueWithoutUserInput = {
    where: TaskPropertyValueWhereUniqueInput
    update: XOR<TaskPropertyValueUpdateWithoutUserInput, TaskPropertyValueUncheckedUpdateWithoutUserInput>
    create: XOR<TaskPropertyValueCreateWithoutUserInput, TaskPropertyValueUncheckedCreateWithoutUserInput>
  }

  export type TaskPropertyValueUpdateWithWhereUniqueWithoutUserInput = {
    where: TaskPropertyValueWhereUniqueInput
    data: XOR<TaskPropertyValueUpdateWithoutUserInput, TaskPropertyValueUncheckedUpdateWithoutUserInput>
  }

  export type TaskPropertyValueUpdateManyWithWhereWithoutUserInput = {
    where: TaskPropertyValueScalarWhereInput
    data: XOR<TaskPropertyValueUpdateManyMutationInput, TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyValueInput>
  }

  export type TaskStatusUpsertWithWhereUniqueWithoutUserInput = {
    where: TaskStatusWhereUniqueInput
    update: XOR<TaskStatusUpdateWithoutUserInput, TaskStatusUncheckedUpdateWithoutUserInput>
    create: XOR<TaskStatusCreateWithoutUserInput, TaskStatusUncheckedCreateWithoutUserInput>
  }

  export type TaskStatusUpdateWithWhereUniqueWithoutUserInput = {
    where: TaskStatusWhereUniqueInput
    data: XOR<TaskStatusUpdateWithoutUserInput, TaskStatusUncheckedUpdateWithoutUserInput>
  }

  export type TaskStatusUpdateManyWithWhereWithoutUserInput = {
    where: TaskStatusScalarWhereInput
    data: XOR<TaskStatusUpdateManyMutationInput, TaskStatusUncheckedUpdateManyWithoutTaskStatusInput>
  }

  export type TenantUpsertWithWhereUniqueWithoutUser_Tenant_createdByToUserInput = {
    where: TenantWhereUniqueInput
    update: XOR<TenantUpdateWithoutUser_Tenant_createdByToUserInput, TenantUncheckedUpdateWithoutUser_Tenant_createdByToUserInput>
    create: XOR<TenantCreateWithoutUser_Tenant_createdByToUserInput, TenantUncheckedCreateWithoutUser_Tenant_createdByToUserInput>
  }

  export type TenantUpdateWithWhereUniqueWithoutUser_Tenant_createdByToUserInput = {
    where: TenantWhereUniqueInput
    data: XOR<TenantUpdateWithoutUser_Tenant_createdByToUserInput, TenantUncheckedUpdateWithoutUser_Tenant_createdByToUserInput>
  }

  export type TenantUpdateManyWithWhereWithoutUser_Tenant_createdByToUserInput = {
    where: TenantScalarWhereInput
    data: XOR<TenantUpdateManyMutationInput, TenantUncheckedUpdateManyWithoutTenant_Tenant_createdByToUserInput>
  }

  export type TenantScalarWhereInput = {
    AND?: Enumerable<TenantScalarWhereInput>
    OR?: Enumerable<TenantScalarWhereInput>
    NOT?: Enumerable<TenantScalarWhereInput>
    id?: StringFilter | string
    name?: StringFilter | string
    settings?: JsonFilter
    createdAt?: DateTimeFilter | Date | string
    updatedAt?: DateTimeFilter | Date | string
    archivedAt?: DateTimeNullableFilter | Date | string | null
    deletedAt?: DateTimeNullableFilter | Date | string | null
    createdBy?: StringNullableFilter | string | null
  }

  export type TenantUserUpsertWithWhereUniqueWithoutUser_TenantUser_createdByToUserInput = {
    where: TenantUserWhereUniqueInput
    update: XOR<TenantUserUpdateWithoutUser_TenantUser_createdByToUserInput, TenantUserUncheckedUpdateWithoutUser_TenantUser_createdByToUserInput>
    create: XOR<TenantUserCreateWithoutUser_TenantUser_createdByToUserInput, TenantUserUncheckedCreateWithoutUser_TenantUser_createdByToUserInput>
  }

  export type TenantUserUpdateWithWhereUniqueWithoutUser_TenantUser_createdByToUserInput = {
    where: TenantUserWhereUniqueInput
    data: XOR<TenantUserUpdateWithoutUser_TenantUser_createdByToUserInput, TenantUserUncheckedUpdateWithoutUser_TenantUser_createdByToUserInput>
  }

  export type TenantUserUpdateManyWithWhereWithoutUser_TenantUser_createdByToUserInput = {
    where: TenantUserScalarWhereInput
    data: XOR<TenantUserUpdateManyMutationInput, TenantUserUncheckedUpdateManyWithoutTenantUser_TenantUser_createdByToUserInput>
  }

  export type TenantUserUpsertWithWhereUniqueWithoutUser_TenantUser_userIdToUserInput = {
    where: TenantUserWhereUniqueInput
    update: XOR<TenantUserUpdateWithoutUser_TenantUser_userIdToUserInput, TenantUserUncheckedUpdateWithoutUser_TenantUser_userIdToUserInput>
    create: XOR<TenantUserCreateWithoutUser_TenantUser_userIdToUserInput, TenantUserUncheckedCreateWithoutUser_TenantUser_userIdToUserInput>
  }

  export type TenantUserUpdateWithWhereUniqueWithoutUser_TenantUser_userIdToUserInput = {
    where: TenantUserWhereUniqueInput
    data: XOR<TenantUserUpdateWithoutUser_TenantUser_userIdToUserInput, TenantUserUncheckedUpdateWithoutUser_TenantUser_userIdToUserInput>
  }

  export type TenantUserUpdateManyWithWhereWithoutUser_TenantUser_userIdToUserInput = {
    where: TenantUserScalarWhereInput
    data: XOR<TenantUserUpdateManyMutationInput, TenantUserUncheckedUpdateManyWithoutTenantUser_TenantUser_userIdToUserInput>
  }

  export type TimeBlockUpsertWithWhereUniqueWithoutUserInput = {
    where: TimeBlockWhereUniqueInput
    update: XOR<TimeBlockUpdateWithoutUserInput, TimeBlockUncheckedUpdateWithoutUserInput>
    create: XOR<TimeBlockCreateWithoutUserInput, TimeBlockUncheckedCreateWithoutUserInput>
  }

  export type TimeBlockUpdateWithWhereUniqueWithoutUserInput = {
    where: TimeBlockWhereUniqueInput
    data: XOR<TimeBlockUpdateWithoutUserInput, TimeBlockUncheckedUpdateWithoutUserInput>
  }

  export type TimeBlockUpdateManyWithWhereWithoutUserInput = {
    where: TimeBlockScalarWhereInput
    data: XOR<TimeBlockUpdateManyMutationInput, TimeBlockUncheckedUpdateManyWithoutTimeBlockInput>
  }

  export type TenantUpsertWithoutUser_User_currentTenantIdToTenantInput = {
    update: XOR<TenantUpdateWithoutUser_User_currentTenantIdToTenantInput, TenantUncheckedUpdateWithoutUser_User_currentTenantIdToTenantInput>
    create: XOR<TenantCreateWithoutUser_User_currentTenantIdToTenantInput, TenantUncheckedCreateWithoutUser_User_currentTenantIdToTenantInput>
  }

  export type TenantUpdateWithoutUser_User_currentTenantIdToTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutUser_User_currentTenantIdToTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type ImageUpsertWithoutUser_User_imageIdToImageInput = {
    update: XOR<ImageUpdateWithoutUser_User_imageIdToImageInput, ImageUncheckedUpdateWithoutUser_User_imageIdToImageInput>
    create: XOR<ImageCreateWithoutUser_User_imageIdToImageInput, ImageUncheckedCreateWithoutUser_User_imageIdToImageInput>
  }

  export type ImageUpdateWithoutUser_User_imageIdToImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutImageNestedInput
    User_Image_createdByToUser?: UserUpdateOneWithoutImage_Image_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutUser_User_imageIdToImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutImageNestedInput
  }

  export type UserTaskUpsertWithWhereUniqueWithoutUser_UserTask_createdByToUserInput = {
    where: UserTaskWhereUniqueInput
    update: XOR<UserTaskUpdateWithoutUser_UserTask_createdByToUserInput, UserTaskUncheckedUpdateWithoutUser_UserTask_createdByToUserInput>
    create: XOR<UserTaskCreateWithoutUser_UserTask_createdByToUserInput, UserTaskUncheckedCreateWithoutUser_UserTask_createdByToUserInput>
  }

  export type UserTaskUpdateWithWhereUniqueWithoutUser_UserTask_createdByToUserInput = {
    where: UserTaskWhereUniqueInput
    data: XOR<UserTaskUpdateWithoutUser_UserTask_createdByToUserInput, UserTaskUncheckedUpdateWithoutUser_UserTask_createdByToUserInput>
  }

  export type UserTaskUpdateManyWithWhereWithoutUser_UserTask_createdByToUserInput = {
    where: UserTaskScalarWhereInput
    data: XOR<UserTaskUpdateManyMutationInput, UserTaskUncheckedUpdateManyWithoutUserTask_UserTask_createdByToUserInput>
  }

  export type UserTaskUpsertWithWhereUniqueWithoutUser_UserTask_userIdToUserInput = {
    where: UserTaskWhereUniqueInput
    update: XOR<UserTaskUpdateWithoutUser_UserTask_userIdToUserInput, UserTaskUncheckedUpdateWithoutUser_UserTask_userIdToUserInput>
    create: XOR<UserTaskCreateWithoutUser_UserTask_userIdToUserInput, UserTaskUncheckedCreateWithoutUser_UserTask_userIdToUserInput>
  }

  export type UserTaskUpdateWithWhereUniqueWithoutUser_UserTask_userIdToUserInput = {
    where: UserTaskWhereUniqueInput
    data: XOR<UserTaskUpdateWithoutUser_UserTask_userIdToUserInput, UserTaskUncheckedUpdateWithoutUser_UserTask_userIdToUserInput>
  }

  export type UserTaskUpdateManyWithWhereWithoutUser_UserTask_userIdToUserInput = {
    where: UserTaskScalarWhereInput
    data: XOR<UserTaskUpdateManyMutationInput, UserTaskUncheckedUpdateManyWithoutUserTask_UserTask_userIdToUserInput>
  }

  export type UserCreateWithoutUserTask_UserTask_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_userIdToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserUncheckedCreateWithoutUserTask_UserTask_createdByToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_userIdToUserInput
  }

  export type UserCreateOrConnectWithoutUserTask_UserTask_createdByToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserTask_UserTask_createdByToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_createdByToUserInput>
  }

  export type TaskCreateWithoutUserTaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTaskInput
    User?: UserCreateNestedOneWithoutTaskInput
    Task?: TaskCreateNestedOneWithoutOther_TaskInput
    other_Task?: TaskCreateNestedManyWithoutTaskInput
    Project: ProjectCreateNestedOneWithoutTaskInput
    TaskStatus?: TaskStatusCreateNestedOneWithoutTaskInput
    Tenant: TenantCreateNestedOneWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTaskInput
  }

  export type TaskUncheckedCreateWithoutUserTaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTaskInput
    other_Task?: TaskUncheckedCreateNestedManyWithoutTaskInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTaskInput
  }

  export type TaskCreateOrConnectWithoutUserTaskInput = {
    where: TaskWhereUniqueInput
    create: XOR<TaskCreateWithoutUserTaskInput, TaskUncheckedCreateWithoutUserTaskInput>
  }

  export type TenantCreateWithoutUserTaskInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackCreateNestedManyWithoutTenantInput
    File?: FileCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutTenantInput
    Image?: ImageCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutTenantInput
    Project?: ProjectCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutTenantInput
    Task?: TaskCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutTenantInput
    User_Tenant_createdByToUser?: UserCreateNestedOneWithoutTenant_Tenant_createdByToUserInput
    TenantUser?: TenantUserCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
  }

  export type TenantUncheckedCreateWithoutUserTaskInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutTenantInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutTenantInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutTenantInput
    Equipment?: EquipmentUncheckedCreateNestedManyWithoutTenantInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutTenantInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutTenantInput
    File?: FileUncheckedCreateNestedManyWithoutTenantInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutTenantInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Image?: ImageUncheckedCreateNestedManyWithoutTenantInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutTenantInput
    Project?: ProjectUncheckedCreateNestedManyWithoutTenantInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutTenantInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    Task?: TaskUncheckedCreateNestedManyWithoutTenantInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutTenantInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutTenantInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutTenantInput
    TenantUser?: TenantUserUncheckedCreateNestedManyWithoutTenantInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutTenantInput
    User_User_currentTenantIdToTenant?: UserUncheckedCreateNestedManyWithoutTenant_User_currentTenantIdToTenantInput
  }

  export type TenantCreateOrConnectWithoutUserTaskInput = {
    where: TenantWhereUniqueInput
    create: XOR<TenantCreateWithoutUserTaskInput, TenantUncheckedCreateWithoutUserTaskInput>
  }

  export type UserCreateWithoutUserTask_UserTask_userIdToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    ApiKey?: ApiKeyCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueCreateNestedManyWithoutUserInput
    Feedback?: FeedbackCreateNestedManyWithoutUserInput
    File?: FileCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryCreateNestedManyWithoutUserInput
    Project?: ProjectCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueCreateNestedManyWithoutUserInput
    Task?: TaskCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockCreateNestedManyWithoutUserInput
    Tenant_User_currentTenantIdToTenant: TenantCreateNestedOneWithoutUser_User_currentTenantIdToTenantInput
    Image_User_imageIdToImage?: ImageCreateNestedOneWithoutUser_User_imageIdToImageInput
    UserTask_UserTask_createdByToUser?: UserTaskCreateNestedManyWithoutUser_UserTask_createdByToUserInput
  }

  export type UserUncheckedCreateWithoutUserTask_UserTask_userIdToUserInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
    currentTenantId: string
    ApiKey?: ApiKeyUncheckedCreateNestedManyWithoutUserInput
    DailyLog?: DailyLogUncheckedCreateNestedManyWithoutUserInput
    DailyLogItem?: DailyLogItemUncheckedCreateNestedManyWithoutUserInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_createdByToUserInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedCreateNestedManyWithoutUser_Equipment_userIdToUserInput
    EquipmentProperty?: EquipmentPropertyUncheckedCreateNestedManyWithoutUserInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Feedback?: FeedbackUncheckedCreateNestedManyWithoutUserInput
    File?: FileUncheckedCreateNestedManyWithoutUserInput
    FileProperty?: FilePropertyUncheckedCreateNestedManyWithoutUserInput
    FilePropertyValue?: FilePropertyValueUncheckedCreateNestedManyWithoutUserInput
    Image_Image_createdByToUser?: ImageUncheckedCreateNestedManyWithoutUser_Image_createdByToUserInput
    LocationEntry?: LocationEntryUncheckedCreateNestedManyWithoutUserInput
    Project?: ProjectUncheckedCreateNestedManyWithoutUserInput
    ProjectProperty?: ProjectPropertyUncheckedCreateNestedManyWithoutUserInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedCreateNestedManyWithoutUserInput
    Task?: TaskUncheckedCreateNestedManyWithoutUserInput
    TaskProperty?: TaskPropertyUncheckedCreateNestedManyWithoutUserInput
    TaskPropertyValue?: TaskPropertyValueUncheckedCreateNestedManyWithoutUserInput
    TaskStatus?: TaskStatusUncheckedCreateNestedManyWithoutUserInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedCreateNestedManyWithoutUser_Tenant_createdByToUserInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_createdByToUserInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedCreateNestedManyWithoutUser_TenantUser_userIdToUserInput
    TimeBlock?: TimeBlockUncheckedCreateNestedManyWithoutUserInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedCreateNestedManyWithoutUser_UserTask_createdByToUserInput
  }

  export type UserCreateOrConnectWithoutUserTask_UserTask_userIdToUserInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserTask_UserTask_userIdToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_userIdToUserInput>
  }

  export type UserUpsertWithoutUserTask_UserTask_createdByToUserInput = {
    update: XOR<UserUpdateWithoutUserTask_UserTask_createdByToUserInput, UserUncheckedUpdateWithoutUserTask_UserTask_createdByToUserInput>
    create: XOR<UserCreateWithoutUserTask_UserTask_createdByToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_createdByToUserInput>
  }

  export type UserUpdateWithoutUserTask_UserTask_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserTask_UserTask_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type TaskUpsertWithoutUserTaskInput = {
    update: XOR<TaskUpdateWithoutUserTaskInput, TaskUncheckedUpdateWithoutUserTaskInput>
    create: XOR<TaskCreateWithoutUserTaskInput, TaskUncheckedCreateWithoutUserTaskInput>
  }

  export type TaskUpdateWithoutUserTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutUserTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TenantUpsertWithoutUserTaskInput = {
    update: XOR<TenantUpdateWithoutUserTaskInput, TenantUncheckedUpdateWithoutUserTaskInput>
    create: XOR<TenantCreateWithoutUserTaskInput, TenantUncheckedCreateWithoutUserTaskInput>
  }

  export type TenantUpdateWithoutUserTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    User_Tenant_createdByToUser?: UserUpdateOneWithoutTenant_Tenant_createdByToUserNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutUserTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
  }

  export type UserUpsertWithoutUserTask_UserTask_userIdToUserInput = {
    update: XOR<UserUpdateWithoutUserTask_UserTask_userIdToUserInput, UserUncheckedUpdateWithoutUserTask_UserTask_userIdToUserInput>
    create: XOR<UserCreateWithoutUserTask_UserTask_userIdToUserInput, UserUncheckedCreateWithoutUserTask_UserTask_userIdToUserInput>
  }

  export type UserUpdateWithoutUserTask_UserTask_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserTask_UserTask_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
  }

  export type DailyLogItemCreateManyDailyLogInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    tenantId: string
    equipmentId?: string | null
  }

  export type FileCreateManyDailyLogInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
  }

  export type LocationEntryCreateManyDailyLogInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type DailyLogItemUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogItemNestedInput
    Equipment?: EquipmentUpdateOneWithoutDailyLogItemNestedInput
    Task?: TaskUpdateOneWithoutDailyLogItemNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogItemNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateManyWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFileNestedInput
    Image?: ImageUpdateOneRequiredWithoutFileNestedInput
    Project?: ProjectUpdateOneWithoutFileNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFileNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateManyWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LocationEntryUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutLocationEntryNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutLocationEntryNestedInput
  }

  export type LocationEntryUncheckedUpdateWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type LocationEntryUncheckedUpdateManyWithoutLocationEntryInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TimeBlockCreateManyDailyLogItemInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy: string
    tenantId: string
  }

  export type TimeBlockUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutTimeBlockNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTimeBlockNestedInput
  }

  export type TimeBlockUncheckedUpdateWithoutDailyLogItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TimeBlockUncheckedUpdateManyWithoutTimeBlockInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type DailyLogItemCreateManyEquipmentInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
  }

  export type EquipmentPropertyValueCreateManyEquipmentInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentPropertyId: string
    tenantId: string
  }

  export type DailyLogItemUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogItemNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput
    Task?: TaskUpdateOneWithoutDailyLogItemNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogItemNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput
  }

  export type EquipmentPropertyValueUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyValueNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
  }

  export type EquipmentPropertyValueUncheckedUpdateWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentPropertyValueCreateManyEquipmentPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentId: string
    tenantId: string
  }

  export type EquipmentPropertyValueUpdateWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyValueNestedInput
    Equipment?: EquipmentUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
  }

  export type EquipmentPropertyValueUncheckedUpdateWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FilePropertyValueCreateManyFileInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    propertyId: string
    tenantId: string
  }

  export type FilePropertyValueUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyValueNestedInput
    FileProperty?: FilePropertyUpdateOneRequiredWithoutFilePropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyValueNestedInput
  }

  export type FilePropertyValueUncheckedUpdateWithoutFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    propertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FilePropertyValueUncheckedUpdateManyWithoutFilePropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    propertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FilePropertyValueCreateManyFilePropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    fileId: string
    tenantId: string
  }

  export type FilePropertyValueUpdateWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyValueNestedInput
    File?: FileUpdateOneRequiredWithoutFilePropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyValueNestedInput
  }

  export type FilePropertyValueUncheckedUpdateWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    fileId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FileCreateManyImageInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
  }

  export type UserCreateManyImage_User_imageIdToImageInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    currentTenantId: string
  }

  export type FileUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFileNestedInput
    DailyLog?: DailyLogUpdateOneWithoutFileNestedInput
    Project?: ProjectUpdateOneWithoutFileNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFileNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput
  }

  export type UserUpdateWithoutImage_User_imageIdToImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Tenant_User_currentTenantIdToTenant?: TenantUpdateOneRequiredWithoutUser_User_currentTenantIdToTenantNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutImage_User_imageIdToImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUser_User_imageIdToImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currentTenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FileCreateManyProjectInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    tenantId: string
    dailyLogId?: string | null
  }

  export type ProjectPropertyValueCreateManyProjectInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectPropertyId: string
    tenantId: string
  }

  export type TaskCreateManyProjectInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
  }

  export type FileUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFileNestedInput
    DailyLog?: DailyLogUpdateOneWithoutFileNestedInput
    Image?: ImageUpdateOneRequiredWithoutFileNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFileNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput
  }

  export type ProjectPropertyValueUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyValueNestedInput
    ProjectProperty?: ProjectPropertyUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyValueNestedInput
  }

  export type ProjectPropertyValueUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectPropertyValueCreateManyProjectPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
  }

  export type ProjectPropertyValueUpdateWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyValueNestedInput
    Project?: ProjectUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyValueNestedInput
  }

  export type ProjectPropertyValueUncheckedUpdateWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type DailyLogItemCreateManyTaskInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
  }

  export type TaskCreateManyTaskInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    taskStatusId?: string | null
  }

  export type TaskPropertyValueCreateManyTaskInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskPropertyId: string
    tenantId: string
  }

  export type UserTaskCreateManyTaskInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
    userId: string
  }

  export type DailyLogItemUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogItemNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput
    Equipment?: EquipmentUpdateOneWithoutDailyLogItemNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogItemNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput
  }

  export type TaskUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateManyWithoutOther_TaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskPropertyValueUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyValueNestedInput
    TaskProperty?: TaskPropertyUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyValueNestedInput
  }

  export type TaskPropertyValueUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserTask_createdByToUser?: UserUpdateOneWithoutUserTask_UserTask_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutUserTaskNestedInput
    User_UserTask_userIdToUser?: UserUpdateOneRequiredWithoutUserTask_UserTask_userIdToUserNestedInput
  }

  export type UserTaskUncheckedUpdateWithoutTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskUncheckedUpdateManyWithoutUserTaskInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskPropertyValueCreateManyTaskPropertyInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    tenantId: string
  }

  export type TaskPropertyValueUpdateWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyValueNestedInput
    Task?: TaskUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyValueNestedInput
  }

  export type TaskPropertyValueUncheckedUpdateWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskCreateManyTaskStatusInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    tenantId: string
    parentId?: string | null
  }

  export type TaskUpdateWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type ApiKeyCreateManyTenantInput = {
    id: string
    name: string
    createdAt: Date | string
    userId?: string | null
  }

  export type DailyLogCreateManyTenantInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type DailyLogItemCreateManyTenantInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId?: string | null
    dailyLogId: string
    equipmentId?: string | null
  }

  export type EquipmentCreateManyTenantInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    userId?: string | null
  }

  export type EquipmentPropertyCreateManyTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type EquipmentPropertyValueCreateManyTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    equipmentId: string
    equipmentPropertyId: string
  }

  export type FeedbackCreateManyTenantInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type FileCreateManyTenantInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    createdBy?: string | null
    projectId?: string | null
    dailyLogId?: string | null
  }

  export type FilePropertyCreateManyTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type FilePropertyValueCreateManyTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    fileId: string
    propertyId: string
  }

  export type ImageCreateManyTenantInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type LocationEntryCreateManyTenantInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    dailyLogId: string
  }

  export type ProjectCreateManyTenantInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type ProjectPropertyCreateManyTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type ProjectPropertyValueCreateManyTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    projectPropertyId: string
  }

  export type TaskCreateManyTenantInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    projectId: string
    parentId?: string | null
    taskStatusId?: string | null
  }

  export type TaskPropertyCreateManyTenantInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type TaskPropertyValueCreateManyTenantInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskPropertyId: string
    taskId: string
  }

  export type TaskStatusCreateManyTenantInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
  }

  export type TenantUserCreateManyTenantInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    userId?: string | null
  }

  export type TimeBlockCreateManyTenantInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy: string
    dailyLogItemId: string
  }

  export type UserCreateManyTenant_User_currentTenantIdToTenantInput = {
    id: string
    email?: string | null
    name?: string | null
    preferredLanguage?: string | null
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId?: string | null
  }

  export type UserTaskCreateManyTenantInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    userId: string
  }

  export type ApiKeyUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ApiKeyUncheckedUpdateManyWithoutApiKeyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DailyLogUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutDailyLogNestedInput
    File?: FileUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutDailyLogNestedInput
    File?: FileUncheckedUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateManyWithoutDailyLogInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DailyLogItemUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutDailyLogItemNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput
    Equipment?: EquipmentUpdateOneWithoutDailyLogItemNestedInput
    Task?: TaskUpdateOneWithoutDailyLogItemNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput
  }

  export type EquipmentUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutEquipmentNestedInput
    User_Equipment_createdByToUser?: UserUpdateOneWithoutEquipment_Equipment_createdByToUserNestedInput
    User_Equipment_userIdToUser?: UserUpdateOneWithoutEquipment_Equipment_userIdToUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutEquipmentNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateManyWithoutEquipmentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentPropertyUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyUncheckedUpdateManyWithoutEquipmentPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentPropertyValueUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutEquipmentPropertyValueNestedInput
    Equipment?: EquipmentUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
  }

  export type EquipmentPropertyValueUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentId?: StringFieldUpdateOperationsInput | string
    equipmentPropertyId?: StringFieldUpdateOperationsInput | string
  }

  export type FeedbackUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFeedbackNestedInput
  }

  export type FeedbackUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FeedbackUncheckedUpdateManyWithoutFeedbackInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFileNestedInput
    DailyLog?: DailyLogUpdateOneWithoutFileNestedInput
    Image?: ImageUpdateOneRequiredWithoutFileNestedInput
    Project?: ProjectUpdateOneWithoutFileNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput
  }

  export type FilePropertyUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFilePropertyNestedInput
  }

  export type FilePropertyUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFilePropertyNestedInput
  }

  export type FilePropertyUncheckedUpdateManyWithoutFilePropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FilePropertyValueUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutFilePropertyValueNestedInput
    File?: FileUpdateOneRequiredWithoutFilePropertyValueNestedInput
    FileProperty?: FilePropertyUpdateOneRequiredWithoutFilePropertyValueNestedInput
  }

  export type FilePropertyValueUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    fileId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
  }

  export type ImageUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutImageNestedInput
    User_Image_createdByToUser?: UserUpdateOneWithoutImage_Image_createdByToUserNestedInput
    User_User_imageIdToImage?: UserUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    File?: FileUncheckedUpdateManyWithoutImageNestedInput
    User_User_imageIdToImage?: UserUncheckedUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageUncheckedUpdateManyWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LocationEntryUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutLocationEntryNestedInput
    DailyLog?: DailyLogUpdateOneRequiredWithoutLocationEntryNestedInput
  }

  export type LocationEntryUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutProjectNestedInput
    User?: UserUpdateOneWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectNestedInput
    Task?: TaskUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    File?: FileUncheckedUpdateManyWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectNestedInput
    Task?: TaskUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateManyWithoutProjectInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectPropertyUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyUncheckedUpdateManyWithoutProjectPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProjectPropertyValueUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutProjectPropertyValueNestedInput
    Project?: ProjectUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    ProjectProperty?: ProjectPropertyUpdateOneRequiredWithoutProjectPropertyValueNestedInput
  }

  export type ProjectPropertyValueUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    projectPropertyId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    User?: UserUpdateOneWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskPropertyUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyUncheckedUpdateManyWithoutTaskPropertyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TaskPropertyValueUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneWithoutTaskPropertyValueNestedInput
    Task?: TaskUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    TaskProperty?: TaskPropertyUpdateOneRequiredWithoutTaskPropertyValueNestedInput
  }

  export type TaskPropertyValueUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskPropertyId?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskStatusUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Task?: TaskUpdateManyWithoutTaskStatusNestedInput
    User?: UserUpdateOneWithoutTaskStatusNestedInput
  }

  export type TaskStatusUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    Task?: TaskUncheckedUpdateManyWithoutTaskStatusNestedInput
  }

  export type TaskStatusUncheckedUpdateManyWithoutTaskStatusInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TenantUserUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_TenantUser_createdByToUser?: UserUpdateOneWithoutTenantUser_TenantUser_createdByToUserNestedInput
    User_TenantUser_userIdToUser?: UserUpdateOneWithoutTenantUser_TenantUser_userIdToUserNestedInput
  }

  export type TenantUserUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TenantUserUncheckedUpdateManyWithoutTenantUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TimeBlockUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User?: UserUpdateOneRequiredWithoutTimeBlockNestedInput
    DailyLogItem?: DailyLogItemUpdateOneRequiredWithoutTimeBlockNestedInput
  }

  export type TimeBlockUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: StringFieldUpdateOperationsInput | string
    dailyLogItemId?: StringFieldUpdateOperationsInput | string
  }

  export type UserUpdateWithoutTenant_User_currentTenantIdToTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUpdateManyWithoutUserNestedInput
    File?: FileUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutUserNestedInput
    Project?: ProjectUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutUserNestedInput
    Task?: TaskUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutUserNestedInput
    Image_User_imageIdToImage?: ImageUpdateOneWithoutUser_User_imageIdToImageNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTenant_User_currentTenantIdToTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutUserNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutUserNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutUserNestedInput
    Equipment_Equipment_createdByToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_createdByToUserNestedInput
    Equipment_Equipment_userIdToUser?: EquipmentUncheckedUpdateManyWithoutUser_Equipment_userIdToUserNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutUserNestedInput
    File?: FileUncheckedUpdateManyWithoutUserNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutUserNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Image_Image_createdByToUser?: ImageUncheckedUpdateManyWithoutUser_Image_createdByToUserNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutUserNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutUserNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutUserNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    Task?: TaskUncheckedUpdateManyWithoutUserNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutUserNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutUserNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutUserNestedInput
    Tenant_Tenant_createdByToUser?: TenantUncheckedUpdateManyWithoutUser_Tenant_createdByToUserNestedInput
    TenantUser_TenantUser_createdByToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_createdByToUserNestedInput
    TenantUser_TenantUser_userIdToUser?: TenantUserUncheckedUpdateManyWithoutUser_TenantUser_userIdToUserNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutUserNestedInput
    UserTask_UserTask_createdByToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_createdByToUserNestedInput
    UserTask_UserTask_userIdToUser?: UserTaskUncheckedUpdateManyWithoutUser_UserTask_userIdToUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutUser_User_currentTenantIdToTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    preferredLanguage?: NullableStringFieldUpdateOperationsInput | string | null
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserTaskUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserTask_createdByToUser?: UserUpdateOneWithoutUserTask_UserTask_createdByToUserNestedInput
    Task?: TaskUpdateOneRequiredWithoutUserTaskNestedInput
    User_UserTask_userIdToUser?: UserUpdateOneRequiredWithoutUserTask_UserTask_userIdToUserNestedInput
  }

  export type UserTaskUncheckedUpdateWithoutTenantInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type ApiKeyCreateManyUserInput = {
    id: string
    name: string
    createdAt: Date | string
    tenantId: string
  }

  export type DailyLogCreateManyUserInput = {
    id: string
    date?: Date | string | null
    status: string
    note: string
    rating: number
    ratingNote: string
    managerNote: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type DailyLogItemCreateManyUserInput = {
    id: string
    note?: string | null
    isNoteVisible?: boolean | null
    itemType: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    taskId?: string | null
    dailyLogId: string
    tenantId: string
    equipmentId?: string | null
  }

  export type EquipmentCreateManyUser_Equipment_createdByToUserInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
    userId?: string | null
  }

  export type EquipmentCreateManyUser_Equipment_userIdToUserInput = {
    id: string
    name?: string | null
    type?: string | null
    organization?: string | null
    description?: string | null
    updatedAt: Date | string
    createdAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type EquipmentPropertyCreateManyUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type EquipmentPropertyValueCreateManyUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    equipmentId: string
    equipmentPropertyId: string
    tenantId: string
  }

  export type FeedbackCreateManyUserInput = {
    id: string
    text?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type FileCreateManyUserInput = {
    id: string
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    name?: string | null
    type?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    imageId: string
    tenantId: string
    projectId?: string | null
    dailyLogId?: string | null
  }

  export type FilePropertyCreateManyUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type FilePropertyValueCreateManyUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    fileId: string
    propertyId: string
    tenantId: string
  }

  export type ImageCreateManyUser_Image_createdByToUserInput = {
    id: string
    bucketId: string
    blurhash: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type LocationEntryCreateManyUserInput = {
    id: string
    latitude?: number | null
    longitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    dailyLogId: string
    tenantId: string
  }

  export type ProjectCreateManyUserInput = {
    id: string
    name?: string | null
    progress?: number | null
    dueDate?: Date | string | null
    description?: string | null
    locationLabel?: string | null
    locationLatitude?: number | null
    locationLongitude?: number | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type ProjectPropertyCreateManyUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type ProjectPropertyValueCreateManyUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    projectId: string
    projectPropertyId: string
    tenantId: string
  }

  export type TaskCreateManyUserInput = {
    id: string
    description?: string | null
    name?: string | null
    statusId?: string | null
    systemStatusId: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    projectId: string
    tenantId: string
    parentId?: string | null
    taskStatusId?: string | null
  }

  export type TaskPropertyCreateManyUserInput = {
    id: string
    name: string
    order: number
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type TaskPropertyValueCreateManyUserInput = {
    id: string
    value: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    taskPropertyId: string
    taskId: string
    tenantId: string
  }

  export type TaskStatusCreateManyUserInput = {
    id: string
    displayOrder: number
    iconColor: string
    name: string
    createdAt: Date | string
    updatedAt: Date | string
    deletedAt?: Date | string | null
    tenantId: string
  }

  export type TenantCreateManyUser_Tenant_createdByToUserInput = {
    id: string
    name: string
    settings: JsonNullValueInput | InputJsonValue
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TenantUserCreateManyUser_TenantUser_createdByToUserInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    userId?: string | null
    tenantId: string
  }

  export type TenantUserCreateManyUser_TenantUser_userIdToUserInput = {
    id: string
    userRole: string
    inviteEmail?: string | null
    inviteSentAt?: Date | string | null
    inviteStatus?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    tenantId: string
  }

  export type TimeBlockCreateManyUserInput = {
    id: string
    duration?: number | null
    entryType: string
    rangeStartAt?: Date | string | null
    rangeEndAt?: Date | string | null
    timerStartLatitude?: number | null
    timerStartLongitude?: number | null
    timerStartAddress?: string | null
    timerStartAt?: Date | string | null
    timerEndAt?: Date | string | null
    timerEndLatitude?: number | null
    timerEndLongitude?: number | null
    timerEndAddress?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    dailyLogItemId: string
    tenantId: string
  }

  export type UserTaskCreateManyUser_UserTask_createdByToUserInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    taskId: string
    tenantId: string
    userId: string
  }

  export type UserTaskCreateManyUser_UserTask_userIdToUserInput = {
    id: string
    createdAt: Date | string
    updatedAt: Date | string
    archivedAt?: Date | string | null
    deletedAt?: Date | string | null
    createdBy?: string | null
    taskId: string
    tenantId: string
  }

  export type ApiKeyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Tenant?: TenantUpdateOneRequiredWithoutApiKeyNestedInput
  }

  export type ApiKeyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type DailyLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutDailyLogNestedInput
    File?: FileUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    ratingNote?: StringFieldUpdateOperationsInput | string
    managerNote?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutDailyLogNestedInput
    File?: FileUncheckedUpdateManyWithoutDailyLogNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutDailyLogNestedInput
  }

  export type DailyLogItemUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLog?: DailyLogUpdateOneRequiredWithoutDailyLogItemNestedInput
    Equipment?: EquipmentUpdateOneWithoutDailyLogItemNestedInput
    Task?: TaskUpdateOneWithoutDailyLogItemNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutDailyLogItemNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutDailyLogItemNestedInput
  }

  export type DailyLogItemUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    note?: NullableStringFieldUpdateOperationsInput | string | null
    isNoteVisible?: NullableBoolFieldUpdateOperationsInput | boolean | null
    itemType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    taskId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    equipmentId?: NullableStringFieldUpdateOperationsInput | string | null
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutDailyLogItemNestedInput
  }

  export type EquipmentUpdateWithoutUser_Equipment_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutEquipmentNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentNestedInput
    User_Equipment_userIdToUser?: UserUpdateOneWithoutEquipment_Equipment_userIdToUserNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateWithoutUser_Equipment_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutEquipmentNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateManyWithoutEquipment_Equipment_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipmentUpdateWithoutUser_Equipment_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutEquipmentNestedInput
    User_Equipment_createdByToUser?: UserUpdateOneWithoutEquipment_Equipment_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateWithoutUser_Equipment_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutEquipmentNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentNestedInput
  }

  export type EquipmentUncheckedUpdateManyWithoutEquipment_Equipment_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type EquipmentPropertyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutEquipmentPropertyNestedInput
  }

  export type EquipmentPropertyValueUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Equipment?: EquipmentUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutEquipmentPropertyValueNestedInput
  }

  export type EquipmentPropertyValueUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    equipmentId?: StringFieldUpdateOperationsInput | string
    equipmentPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FeedbackUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutFeedbackNestedInput
  }

  export type FeedbackUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    text?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type FileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLog?: DailyLogUpdateOneWithoutFileNestedInput
    Image?: ImageUpdateOneRequiredWithoutFileNestedInput
    Project?: ProjectUpdateOneWithoutFileNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFileNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFileNestedInput
  }

  export type FileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    imageId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    projectId?: NullableStringFieldUpdateOperationsInput | string | null
    dailyLogId?: NullableStringFieldUpdateOperationsInput | string | null
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFileNestedInput
  }

  export type FilePropertyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutFilePropertyNestedInput
  }

  export type FilePropertyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutFilePropertyNestedInput
  }

  export type FilePropertyValueUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateOneRequiredWithoutFilePropertyValueNestedInput
    FileProperty?: FilePropertyUpdateOneRequiredWithoutFilePropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutFilePropertyValueNestedInput
  }

  export type FilePropertyValueUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileId?: StringFieldUpdateOperationsInput | string
    propertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ImageUpdateWithoutUser_Image_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutImageNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutImageNestedInput
    User_User_imageIdToImage?: UserUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageUncheckedUpdateWithoutUser_Image_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutImageNestedInput
    User_User_imageIdToImage?: UserUncheckedUpdateManyWithoutImage_User_imageIdToImageNestedInput
  }

  export type ImageUncheckedUpdateManyWithoutImage_Image_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    bucketId?: StringFieldUpdateOperationsInput | string
    blurhash?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type LocationEntryUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLog?: DailyLogUpdateOneRequiredWithoutLocationEntryNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutLocationEntryNestedInput
  }

  export type LocationEntryUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLogId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type ProjectUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    File?: FileUpdateManyWithoutProjectNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectNestedInput
    Task?: TaskUpdateManyWithoutProjectNestedInput
  }

  export type ProjectUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    progress?: NullableFloatFieldUpdateOperationsInput | number | null
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    locationLabel?: NullableStringFieldUpdateOperationsInput | string | null
    locationLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    locationLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    File?: FileUncheckedUpdateManyWithoutProjectNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectNestedInput
    Task?: TaskUncheckedUpdateManyWithoutProjectNestedInput
  }

  export type ProjectPropertyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutProjectPropertyNestedInput
  }

  export type ProjectPropertyValueUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Project?: ProjectUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    ProjectProperty?: ProjectPropertyUpdateOneRequiredWithoutProjectPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutProjectPropertyValueNestedInput
  }

  export type ProjectPropertyValueUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    projectPropertyId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateManyWithoutTaskNestedInput
    Task?: TaskUpdateOneWithoutOther_TaskNestedInput
    other_Task?: TaskUpdateManyWithoutTaskNestedInput
    Project?: ProjectUpdateOneRequiredWithoutTaskNestedInput
    TaskStatus?: TaskStatusUpdateOneWithoutTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUpdateManyWithoutTaskNestedInput
  }

  export type TaskUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    statusId?: NullableStringFieldUpdateOperationsInput | string | null
    systemStatusId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projectId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    taskStatusId?: NullableStringFieldUpdateOperationsInput | string | null
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTaskNestedInput
    other_Task?: TaskUncheckedUpdateManyWithoutTaskNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTaskNestedInput
  }

  export type TaskPropertyUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    order?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTaskPropertyNestedInput
  }

  export type TaskPropertyValueUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Task?: TaskUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    TaskProperty?: TaskPropertyUpdateOneRequiredWithoutTaskPropertyValueNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskPropertyValueNestedInput
  }

  export type TaskPropertyValueUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    taskPropertyId?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TaskStatusUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Task?: TaskUpdateManyWithoutTaskStatusNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTaskStatusNestedInput
  }

  export type TaskStatusUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    displayOrder?: IntFieldUpdateOperationsInput | number
    iconColor?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
    Task?: TaskUncheckedUpdateManyWithoutTaskStatusNestedInput
  }

  export type TenantUpdateWithoutUser_Tenant_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUpdateManyWithoutTenantNestedInput
    File?: FileUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUpdateManyWithoutTenantNestedInput
    Image?: ImageUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUpdateManyWithoutTenantNestedInput
    Project?: ProjectUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUpdateManyWithoutTenantNestedInput
    Task?: TaskUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateWithoutUser_Tenant_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ApiKey?: ApiKeyUncheckedUpdateManyWithoutTenantNestedInput
    DailyLog?: DailyLogUncheckedUpdateManyWithoutTenantNestedInput
    DailyLogItem?: DailyLogItemUncheckedUpdateManyWithoutTenantNestedInput
    Equipment?: EquipmentUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentProperty?: EquipmentPropertyUncheckedUpdateManyWithoutTenantNestedInput
    EquipmentPropertyValue?: EquipmentPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Feedback?: FeedbackUncheckedUpdateManyWithoutTenantNestedInput
    File?: FileUncheckedUpdateManyWithoutTenantNestedInput
    FileProperty?: FilePropertyUncheckedUpdateManyWithoutTenantNestedInput
    FilePropertyValue?: FilePropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Image?: ImageUncheckedUpdateManyWithoutTenantNestedInput
    LocationEntry?: LocationEntryUncheckedUpdateManyWithoutTenantNestedInput
    Project?: ProjectUncheckedUpdateManyWithoutTenantNestedInput
    ProjectProperty?: ProjectPropertyUncheckedUpdateManyWithoutTenantNestedInput
    ProjectPropertyValue?: ProjectPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    Task?: TaskUncheckedUpdateManyWithoutTenantNestedInput
    TaskProperty?: TaskPropertyUncheckedUpdateManyWithoutTenantNestedInput
    TaskPropertyValue?: TaskPropertyValueUncheckedUpdateManyWithoutTenantNestedInput
    TaskStatus?: TaskStatusUncheckedUpdateManyWithoutTenantNestedInput
    TenantUser?: TenantUserUncheckedUpdateManyWithoutTenantNestedInput
    TimeBlock?: TimeBlockUncheckedUpdateManyWithoutTenantNestedInput
    User_User_currentTenantIdToTenant?: UserUncheckedUpdateManyWithoutTenant_User_currentTenantIdToTenantNestedInput
    UserTask?: UserTaskUncheckedUpdateManyWithoutTenantNestedInput
  }

  export type TenantUncheckedUpdateManyWithoutTenant_Tenant_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TenantUserUpdateWithoutUser_TenantUser_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Tenant?: TenantUpdateOneRequiredWithoutTenantUserNestedInput
    User_TenantUser_userIdToUser?: UserUpdateOneWithoutTenantUser_TenantUser_userIdToUserNestedInput
  }

  export type TenantUserUncheckedUpdateWithoutUser_TenantUser_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUserUncheckedUpdateManyWithoutTenantUser_TenantUser_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUserUpdateWithoutUser_TenantUser_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_TenantUser_createdByToUser?: UserUpdateOneWithoutTenantUser_TenantUser_createdByToUserNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTenantUserNestedInput
  }

  export type TenantUserUncheckedUpdateWithoutUser_TenantUser_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TenantUserUncheckedUpdateManyWithoutTenantUser_TenantUser_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    userRole?: StringFieldUpdateOperationsInput | string
    inviteEmail?: NullableStringFieldUpdateOperationsInput | string | null
    inviteSentAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inviteStatus?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type TimeBlockUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DailyLogItem?: DailyLogItemUpdateOneRequiredWithoutTimeBlockNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutTimeBlockNestedInput
  }

  export type TimeBlockUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    entryType?: StringFieldUpdateOperationsInput | string
    rangeStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rangeEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerStartLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerStartAddress?: NullableStringFieldUpdateOperationsInput | string | null
    timerStartAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    timerEndLatitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndLongitude?: NullableFloatFieldUpdateOperationsInput | number | null
    timerEndAddress?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dailyLogItemId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskUpdateWithoutUser_UserTask_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Task?: TaskUpdateOneRequiredWithoutUserTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutUserTaskNestedInput
    User_UserTask_userIdToUser?: UserUpdateOneRequiredWithoutUserTask_UserTask_userIdToUserNestedInput
  }

  export type UserTaskUncheckedUpdateWithoutUser_UserTask_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskUncheckedUpdateManyWithoutUserTask_UserTask_createdByToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskUpdateWithoutUser_UserTask_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    User_UserTask_createdByToUser?: UserUpdateOneWithoutUserTask_UserTask_createdByToUserNestedInput
    Task?: TaskUpdateOneRequiredWithoutUserTaskNestedInput
    Tenant?: TenantUpdateOneRequiredWithoutUserTaskNestedInput
  }

  export type UserTaskUncheckedUpdateWithoutUser_UserTask_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }

  export type UserTaskUncheckedUpdateManyWithoutUserTask_UserTask_userIdToUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    taskId?: StringFieldUpdateOperationsInput | string
    tenantId?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}